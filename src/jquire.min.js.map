{"version":3,"file":"jquire.min.js","sources":["utility.js","jquire.js"],"sourcesContent":["const CREATED = Symbol(\"created\")\r\nconst UPDATED = Symbol(\"updated\")\r\nconst DELETED = Symbol(\"deleted\")\r\nconst UNCHANGED = Symbol(\"unchanged\")\r\n\r\n/**\r\n * \r\n * @param {string} rootPath \r\n * @returns {(relativePath: string) => string}\r\n */\r\nexport function pathSetter(rootPath) {\r\n\treturn function (relativePath) {\r\n\t\treturn rootPath.replace(/\\/\\s*$/, '') + '/' +\r\n\t\t\trelativePath.replace(/^(?:\\s*\\.)?\\s*\\//, '')\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {unknown} test\r\n */\r\nexport const isPrimitive = (test) => test !== Object(test)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nexport const isJqElement = (...xs) => xs.every(x => x instanceof JqElement)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nexport const isJqAttribute = (...xs) => xs.every(x => x instanceof JqAttribute)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nexport const isJqFragment = (...xs) => xs.every(x => x instanceof JqFragment)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nexport const isJqText = (...xs) => xs.every(x => x instanceof JqText)\r\n\r\nconst getJqNodeConstructors = () => [\r\n\tJqElement, JqAttribute, JqCSSProperty,\r\n\tJqCSSRule, JqAnimation, JqEvent,\r\n\tJqState, JqFragment, JqText\r\n]\r\n\r\n/**\r\n * @param {string} e \r\n */\r\nexport const throwError = (e, errorClass = Error) => { throw new errorClass(e) }\r\nexport const JqNodeReference = Symbol(\"JqNodeReference\")\r\n\r\n/**\r\n * \r\n * @param {Array<JqNode | Primitive>} nodes \r\n * @returns {{\r\n *\t\tchildNodes: Array<JqElement | JqFragment | JqText>,\r\n *\t\tattributes: JqAttribute[],\r\n *\t\tevents: JqEvent[], animations: JqAnimation[], \r\n *\t\tinlineStyles: JqCSSProperty[],\r\n *\t\tblockStyles: JqCSSRule[], callbacks: JqCallback[]\r\n * }}\r\n */\r\nexport function getNodes(nodes) {\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tconst childNodes = []\r\n\r\n\t/**\r\n\t * @type {JqAttribute[]}\r\n\t */\r\n\tconst attributes = []\r\n\r\n\t/**\r\n\t * @type {JqEvent[]}\r\n\t */\r\n\tconst events = []\r\n\r\n\t/**\r\n\t * @type {JqAnimation[]}\r\n\t */\r\n\tconst animations = []\r\n\r\n\t/**\r\n\t * @type {JqCallback[]}\r\n\t */\r\n\tconst callbacks = []\r\n\r\n\t/**\r\n\t * @type {JqCSSProperty[]}\r\n\t */\r\n\tconst inlineStyles = []\r\n\r\n\t/**\r\n\t * @type {JqCSSRule[]}\r\n\t */\r\n\tconst blockStyles = []\r\n\tconst childNodeClasses = [JqElement, JqFragment, JqText]\r\n\r\n\tfor (const [i, node] of nodes.entries()) {\r\n\t\tif (childNodeClasses.some(childNodeClass => node instanceof childNodeClass)) {\r\n\t\t\tconst _node = /**@type {JqElement | JqFragment | JqText}*/ (node)\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tchildNodes.push(_node)\r\n\t\t}\r\n\t\telse if (node instanceof JqAttribute) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tattributes.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqList && node.nodeClass === JqAttribute) {\r\n\t\t\tnode.nodes.forEach((/**@type {JqAttribute}*/ attribute) => {\r\n\t\t\t\tattribute.nodePosition = i\r\n\t\t\t\tattributes.push(attribute)\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (node instanceof JqEvent) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tevents.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqAnimation) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tanimations.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqCSSProperty) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tinlineStyles.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqCSSRule) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tblockStyles.push(node)\r\n\t\t}\r\n\t\telse if (Array.isArray(node)) {\r\n\t\t\tconst _node = /**@type {JqFragment}*/ (convertToJqNode(node, null))\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tchildNodes.push(_node)\r\n\t\t}\r\n\t\telse if (typeof node == \"function\") {\r\n\t\t\tconst _node = /**@type {JqCallback}*/ (convertToJqNode(node, null))\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tcallbacks.push(_node)\r\n\t\t}\r\n\t\telse if (isPrimitive(node)) {\r\n\t\t\tconst _node = /**@type {JqText}*/ (convertToJqNode(node, null))\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tchildNodes.push(_node)\r\n\t\t}\r\n\t}\r\n\r\n\treturn /**@type {const}*/ ({\r\n\t\tchildNodes, attributes,\r\n\t\tevents, animations, inlineStyles,\r\n\t\tblockStyles, callbacks\r\n\t})\r\n}\r\n\r\n/**\r\n * @param {any} value \r\n * @param {JqFragment | JqElement | null} jqParent \r\n * @returns {JqText | JqFragment | JqCallback}\r\n */\r\nexport function convertToJqNode(value, jqParent) {\r\n\t/**\r\n\t * @param {Primitive | Primitive[]} value\r\n\t */\r\n\tconst convertToJqText = (value) => {\r\n\t\tconst jqText = new JqText(/**@type {Primitive}*/(value) ?? '')\r\n\t\tjqText.jqParent = jqParent\r\n\t\treturn jqText\r\n\t}\r\n\r\n\t/**\r\n\t * @param {(...a: any[]) => any} value\r\n\t */\r\n\tconst convertToJqCallback = (value) => {\r\n\t\tconst jqCallback = new JqCallback(value)\r\n\t\tjqCallback.jqParent = /**@type {any}*/ (jqParent)\r\n\t\treturn jqCallback\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Primitive[]} value\r\n\t */\r\n\tconst convertToJqFragment = (value) => {\r\n\t\tconst childNodes = value.map(x => /**@type {JqFragment | JqText}*/(convertToJqNode(x, null)))\r\n\t\tconst jqFragment = new JqFragment(childNodes)\r\n\r\n\t\tchildNodes.forEach((childNode, i) => {\r\n\t\t\tchildNode.jqParent = jqFragment\r\n\t\t\tchildNode.nodePosition = i\r\n\t\t})\r\n\r\n\t\tjqFragment.jqParent = jqParent\r\n\t\treturn jqFragment\r\n\t}\r\n\r\n\tif (Array.isArray(value))\r\n\t\treturn convertToJqFragment(value)\r\n\tif (isPrimitive(value))\r\n\t\treturn convertToJqText(value)\r\n\tif (typeof value == \"function\")\r\n\t\treturn convertToJqCallback(value)\r\n\r\n\tif (getJqNodeConstructors().some(ctor => value instanceof ctor))\r\n\t\treturn /**@type {JqText | JqFragment | JqCallback}*/ (value)\r\n\r\n\treturn throwError(`JqError - Unexpected value found in place of a JqNode`)\r\n}\r\n\r\n/**\r\n * @param {{[x: string | symbol | number]: unknown}} object \r\n * @param {string[]} props \r\n * @returns {Primitive | { [x: string | symbol]: any }}\r\n */\r\nconst getPropertyValue = (object, props) => {\r\n\tlet result = object\r\n\tfor (let i = 0; i < props.length; i++) {\r\n\t\tresult = /**@type {any}*/ (result?.[props[i]])\r\n\t\tif (isNullish(result)) return result\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @returns {string}\r\n */\r\nexport function escapeHTMLEntities(text) {\r\n\tconst entityRegex1 = /(&#x[0-9A-F]{2,6};)/gi\r\n\tconst entityRegex2 = /(&[a-z0-9]+;)/gi\r\n\r\n\t/**\r\n\t * @param {string} t \r\n\t * @param {string} e \r\n\t * @returns \r\n\t */\r\n\tconst replacer = (t, e) =>\r\n\t\tnew DOMParser().parseFromString(e, \"text/html\").documentElement.textContent ?? ''\r\n\r\n\tconst _text = text.replace(entityRegex1, replacer)\r\n\t\t.replace(entityRegex2, replacer)\r\n\r\n\treturn _text\r\n}\r\n\r\n/**\r\n * @param {unknown} value\r\n */\r\nexport function stringify(value) {\r\n\treturn isPrimitive(value) ? String(value ?? '') : JSON.stringify(value)\r\n}\r\n\r\n/**\r\n * @param  {unknown[]} values\r\n */\r\nexport function isNullish(...values) {\r\n\treturn values.every(x => x === null || x === undefined)\r\n}\r\n\r\nexport const ElementReference = Symbol(\"ElementReference\")\r\nexport const StateReference = Symbol(\"StateReference\")\r\n\r\nexport class JqEvent {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tevent\r\n\r\n\t/**\r\n\t * @param {Event} [_]\r\n\t * @param {unknown[]} a\r\n\t * @returns {void}\r\n\t */\r\n\thandler = (_, ...a) => { }\r\n\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} event\r\n\t * @param {(event?: Event, ...a: unknown[]) => void} handler \r\n\t */\r\n\tconstructor(event, handler) {\r\n\t\tthis.event = event\r\n\t\tthis.handler = handler\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t */\r\n\tattachHandler(element) {\r\n\t\telement.addEventListener(this.event, this.handler)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t */\r\n\tdetachHandler(element) {\r\n\t\telement.removeEventListener(this.event, this.handler)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tthis.attachHandler(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.attachHandler(/**@type {HTMLElement}*/(node.htmlNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqEvent '${this.event}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\nexport class JqState {\r\n\t/**\r\n\t * @type {any}\r\n\t */\r\n\t[JqNodeReference];\r\n\t/**\r\n\t * @type {{ [x: string | symbol]: unknown }}\r\n\t */\r\n\t[StateReference];\r\n\r\n\t/**\r\n\t * @type {Array<JqCallback>}\r\n\t */\r\n\tjqCallbacks = []\r\n\r\n\t/**\r\n\t * @param {{ [x: string | symbol]: unknown }} state \r\n\t */\r\n\tconstructor(state = {}) {\r\n\t\tthis[StateReference] = state\r\n\t}\r\n}\r\n\r\nexport class JqCallback {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {JqElement | JqAttribute | JqCSSProperty | JqCSSRule | JqAnimation | JqFragment | JqText | null}\r\n\t */\r\n\treturned = null\r\n\t/**\r\n\t * @param {CallbackArg} [_] \r\n\t * @returns {JqNode | Primitive}\r\n\t */\r\n\tcallback = (_) => null\r\n\t/**\r\n\t * @type {JqEvent | JqList<JqState, typeof JqState>}\r\n\t*/\r\n\tcallbackArg\r\n\r\n\t/**\r\n\t * @param {(a?: CallbackArg) => JqNode | Primitive} callback \r\n\t */\r\n\tconstructor(callback) {\r\n\t\tthis.callback = callback\r\n\t}\r\n\r\n\tinvoke() {\r\n\t\tif (this.callbackArg instanceof JqList && this.callbackArg.nodeClass == JqState) {\r\n\t\t\tlet result = this.callback(this.callbackArg)\r\n\t\t\tif (isPrimitive(result))\r\n\t\t\t\tresult = convertToJqNode(result, this.jqParent)\r\n\r\n\t\t\treturn /**@type {DiffableJqNode}*/ (result)\r\n\t\t}\r\n\r\n\t\tthrow new TypeError(`JqError - Cannot invoke JqCallback without arguments of type JqList<JqState, typeof JqState> | JqEvent`)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tconst childNode = /**@type {JqElement | JqAttribute | JqCSSProperty | JqCSSRule | JqAnimation | JqFragment | JqText}*/ (this.invoke())\r\n\t\t\tchildNode.attachTo(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement || node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tthis.callbackArg = JqCallback.getCallbackArg(this)\r\n\r\n\t\t\tconst childNode = /**@type {JqElement | JqAttribute | JqCSSProperty | JqCSSRule | JqAnimation | JqFragment | JqText}*/ (this.invoke())\r\n\r\n\t\t\tchildNode.jqParent = node\r\n\t\t\tchildNode.nodePosition = this.nodePosition\r\n\t\t\tchildNode.attachTo(node)\r\n\r\n\t\t\tlet retNodeInsertPos = node.childNodes\r\n\t\t\t\t.findIndex(childNode => this.nodePosition == childNode.nodePosition)\r\n\r\n\t\t\tretNodeInsertPos = retNodeInsertPos == -1 ? (node.childNodes.length || 1) - 1 : retNodeInsertPos\r\n\t\t\tnode.childNodes.splice(retNodeInsertPos, 0, /**@type {JqElement | JqFragment | JqText}*/(this.returned))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqCallback to a node not of instance JqElement or JqText or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 0) {\r\n\t\treturn this.returned?.toString(indent) ?? ''\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateCallback() {\r\n\t\t\tconst jqCallback = this.context\r\n\t\t\tif (jqCallback.returned === null) return this\r\n\r\n\t\t\tconst oldNode = jqCallback.returned\r\n\t\t\tconst newNode = jqCallback.invoke()\r\n\t\t\tconst rootNode = oldNode, parentNode = oldNode\r\n\r\n\t\t\treconcile(rootNode, parentNode, oldNode, newNode)\r\n\t\t\treturn this\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {JqNode} rootNode \r\n\t\t\t * @param {JqNode} parentNode \r\n\t\t\t * @param {JqNode} oldNode \r\n\t\t\t * @param {JqNode} newNode \r\n\t\t\t */\r\n\t\t\tfunction reconcile(rootNode, parentNode, oldNode, newNode) {\r\n\t\t\t\tconst _diff = diff(oldNode, newNode)\r\n\r\n\t\t\t\tconst node1 = _diff.node1\r\n\t\t\t\tconst node2 = _diff.node2\r\n\r\n\t\t\t\tconst updatedChanges = _diff[UPDATED]\r\n\t\t\t\tconst createdChanges = _diff[CREATED]\r\n\t\t\t\tconst deletedChanges = _diff[DELETED]\r\n\r\n\t\t\t\tfor (const [firstProp, ...nestedProps] of updatedChanges) {\r\n\t\t\t\t\tif (isJqText(node1, node2)) {\r\n\t\t\t\t\t\tif (firstProp == \"text\")\r\n\t\t\t\t\t\t\tupdateText(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqAttribute(node1, node2)) {\r\n\t\t\t\t\t\tif (firstProp == \"value\")\r\n\t\t\t\t\t\t\tupdateAttribute(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (!isNullish(node1) && !isNullish(node2)) {\r\n\t\t\t\t\t\tupdateElement(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t\tjqCallback.returned = /**@type {DiffableJqNode}*/ (node2)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const [firstProp, ...nestedProps] of createdChanges) {\r\n\t\t\t\t\tif (isJqText(node1, node2)) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqAttribute(node1, node2)) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqFragment(node1, node2)) {\r\n\t\t\t\t\t\tif (firstProp == \"childNodes\")\r\n\t\t\t\t\t\t\tcreateFragment(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqElement(node1, node2)) {\r\n\t\t\t\t\t\tif (firstProp == \"childNodes\")\r\n\t\t\t\t\t\t\tcreateElement(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const [firstProp, ...nestedProps] of deletedChanges) {\r\n\t\t\t\t\tif (isJqFragment(node1, node2)) {\r\n\t\t\t\t\t\tdeleteJqFragmentChild(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqElement(node1, node2)) {\r\n\t\t\t\t\t\tdeleteJqElementChild(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t/**@type {DiffableJqNode}*/(node1).delete.deleteSelf()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const childDiff of _diff.childDiffs)\r\n\t\t\t\t\treconcile(rootNode, _diff.node1, childDiff.node1, childDiff.node2)\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} props\r\n\t\t\t */\r\n\t\t\tfunction updateAttribute(diff, props) {\r\n\t\t\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqAttribute))\r\n\t\t\t\t\treturn this\r\n\t\t\t\tconst _node1 = /**@type {JqAttribute}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqAttribute}*/ (diff.node2)\r\n\t\t\t\treturn _node1.update.setAttribute(_node2.value)\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} props\r\n\t\t\t */\r\n\t\t\tfunction updateText(diff, props) {\r\n\t\t\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqText))\r\n\t\t\t\t\treturn this\r\n\t\t\t\tconst _node1 = /**@type {JqText}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqText}*/ (diff.node2)\r\n\t\t\t\t_node1.update.setText(_node2.text)\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} props \r\n\t\t\t */\r\n\t\t\tfunction updateElement(diff, props) {\r\n\t\t\t\tconst _node1 = /**@type {JqElement | JqFragment | JqText}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqElement | JqFragment | JqText}*/ (diff.node2)\r\n\t\t\t\tconst _node1Parent = /**@type {JqElement | JqFragment}*/ (_node1.jqParent)\r\n\r\n\t\t\t\t_node2 instanceof JqText ? _node2.initial.createNode() : _node2.attachTo(null)\r\n\t\t\t\t_node1Parent.update.replaceChild(_node1, _node2)\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} param2\r\n\t\t\t */\r\n\t\t\tfunction createElement(diff, [firstProp, _childNode]) {\r\n\t\t\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqElement))\r\n\t\t\t\t\treturn this\r\n\r\n\t\t\t\tconst _node1 = /**@type {JqElement}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqElement}*/ (diff.node2)\r\n\t\t\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\r\n\t\t\t\tchildNode.jqParent = _node1.jqParent\r\n\t\t\t\tchildNode.nodePosition = _node1.childNodes.length\r\n\r\n\t\t\t\t_node1.childNodes.splice(_node1.childNodes.length, 0, childNode)\r\n\t\t\t\tchildNode.attachTo(_node1)\r\n\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} param2\r\n\t\t\t */\r\n\t\t\tfunction createFragment(diff, [firstProp, _childNode]) {\r\n\t\t\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqFragment))\r\n\t\t\t\t\treturn this\r\n\r\n\t\t\t\tconst _node1 = /**@type {JqFragment}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqFragment}*/ (diff.node2)\r\n\t\t\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\r\n\t\t\t\tchildNode.jqParent = _node1.jqParent\r\n\t\t\t\tchildNode.nodePosition = _node1.childNodes.length\r\n\r\n\t\t\t\t_node1.childNodes.splice(_node1.childNodes.length, 0, childNode)\r\n\t\t\t\tchildNode.attachTo(_node1)\r\n\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} param2 \r\n\t\t\t */\r\n\t\t\tfunction deleteJqFragmentChild(diff, [firstProp, _childNode]) {\r\n\t\t\t\tconst _node1 = /**@type {JqFragment}*/(diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqFragment}*/ (diff.node2)\r\n\r\n\t\t\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/(_childNode)\r\n\t\t\t\tchildNode.delete.deleteSelf()\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} param2 \r\n\t\t\t */\r\n\t\t\tfunction deleteJqElementChild(diff, [firstProp, _childNode]) {\r\n\t\t\t\tconst _node1 = /**@type {JqElement}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqElement}*/ (diff.node2)\r\n\r\n\t\t\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\t\t\t\tchildNode.delete.deleteSelf()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqCallback} context\r\n\t */\r\n\tstatic getCallbackArg(context) {\r\n\t\ttry {\r\n\t\t\tcontext.callback()\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tif (e instanceof JqList && e.nodeClass == JqState) {\r\n\t\t\t\tconst stateList = /**@type {JqList<JqState, typeof JqState>}*/ (e)\r\n\r\n\t\t\t\tfor(const jqState of stateList.nodes) {\r\n\t\t\t\t\tjqState[JqNodeReference].jqCallbacks.push(context)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn stateList\r\n\t\t\t}\r\n\r\n\t\t\tif (e instanceof JqEvent) {\r\n\t\t\t\treturn e\r\n\t\t\t}\r\n\r\n\t\t\tthrow e\r\n\t\t}\r\n\r\n\t\tthrow new TypeError(`JqError - Expected a JqCallback<\"state\" | \"event\" | \"condition\" | \"each\" | \"mount\" | \"unmount\"> but instead found a 'function'`)\r\n\t}\r\n}\r\n\r\nexport class JqAnimation {\r\n\t/**\r\n\t * @type {Animation | null}\r\n\t */\r\n\tdomAnimation = null\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {Parameters<AnimateFn>}\r\n\t */\r\n\tparameters\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * \r\n\t * @param  {Parameters<AnimateFn>} parameters \r\n\t */\r\n\tconstructor(...parameters) {\r\n\t\tthis.parameters = parameters\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tthis.animate(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tthis.animate(/**@type {HTMLElement}*/(node.htmlNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqAnimation to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t * @returns {ReturnType<AnimateFn>}\r\n\t */\r\n\tanimate(element) {\r\n\r\n\t\tconst [_styles, _options, ..._moreOptions] = this.parameters\r\n\r\n\t\t/**\r\n\t\t * @type {((..._: unknown[]) => unknown) | null}\r\n\t\t */\r\n\t\tlet callback = null\r\n\t\tlet options = /**@type {Parameters<Element[\"animate\"]>[1]}*/ (isPrimitive(_options) ? null : _options)\r\n\r\n\t\tconst [speed, easing, _callback] = [_options, ..._moreOptions]\r\n\t\tif (_callback) callback = _callback\r\n\t\tconst option = {\r\n\t\t\tduration: speed ?? 400,\r\n\t\t\teasing: easing ?? \"linear\",\r\n\t\t\tfill: \"forwards\"\r\n\t\t}\r\n\r\n\t\toptions ??= /**@type {Parameters<Element[\"animate\"]>[1]}*/ (option)\r\n\r\n\t\tconst __styles = (Array.isArray(_styles)\r\n\t\t\t? _styles.map(x => x instanceof Map ? Object.fromEntries(x) : x)\r\n\t\t\t: _styles instanceof Map ? Object.fromEntries(_styles) : _styles)\r\n\r\n\t\tconst styles = /**@type {Parameters<Element[\"animate\"]>[0]}*/ (Array.isArray(__styles)\r\n\t\t\t? __styles.map(x => JqAnimation.setInitialStyles(element, x))\r\n\t\t\t: JqAnimation.setInitialStyles(element, __styles))\r\n\r\n\t\tthis.domAnimation = element.animate(styles, options)\r\n\t\tcallback && this.domAnimation.addEventListener(\"finish\", callback)\r\n\r\n\t\treturn this.domAnimation\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t * @param {{ [styleName: string]: Primitive | Primitive[] }} styles \r\n\t * @param  {unknown[]} _ \r\n\t * @returns \r\n\t */\r\n\tstatic setInitialStyles = (element, styles, ..._) => {\r\n\t\tconst styleNames = Object.keys(styles).filter(styleName => !Array.isArray(styles[styleName]))\r\n\t\tconst _styles = styleNames.map(styleName => {\r\n\t\t\tconst finalStyleValue = /**@type {Primitive}*/ (styles[styleName])\r\n\t\t\tconst initialStyleValue = getComputedStyle(element).getPropertyValue(styleName)\r\n\r\n\t\t\treturn [styleName, [initialStyleValue, finalStyleValue]]\r\n\t\t})\r\n\r\n\t\treturn { ...styles, ...Object.fromEntries(_styles) }\r\n\t}\r\n}\r\n\r\nexport class JqCSSProperty {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tname\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tvalue\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {unknown} value \r\n\t */\r\n\tconstructor(name, value) {\r\n\t\tthis.name = camelToKebab(name).replace(/_/g, '-')\r\n\t\tthis.value = String(value)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tnode.style.setProperty(this.name, this.value)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqCSS.Property to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 1) {\r\n\t\treturn `${this.name}: ${this.value};`\r\n\t}\r\n}\r\n\r\nexport class JqCSSRule {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {[string, ...string[]]}\r\n\t */\r\n\thead\r\n\t/**\r\n\t * @type {Array<JqCSSProperty | JqCSSRule>}\r\n\t */\r\n\tbody = []\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {[string, ...string[]]} param0 \r\n\t * @param  {(Array<JqCSSProperty | JqCSSRule> | { [x: string]: Primitive }[])} styleNodes \r\n\t */\r\n\tconstructor([ruleName, ...ruleArgs], ...styleNodes) {\r\n\r\n\t\tthis.head = [ruleName, ...ruleArgs]\r\n\r\n\t\tconst errorMessage = `JqError - Invalid argument passed to ${this.head.join(' ').trim()}(...)`\r\n\t\tthis.body = styleNodes.flatMap(styleNode =>\r\n\t\t\tstyleNode instanceof JqCSSProperty || styleNode instanceof JqCSSRule\r\n\t\t\t\t? styleNode\r\n\t\t\t\t: createPropertyListFromStyleObject(errorMessage, styleNode).nodes\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\t// node.style.setProperty(this.name, this.value)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqCSS.Rule to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 1) {\r\n\t\tconst space = '\\t'.repeat(indent)\r\n\t\tlet head = this.head.join(' ').trim()\r\n\t\treturn `${head} {\\n${space}${this.body.map(styleNode => styleNode.toString(indent + 1)).join('\\n' + space)}\\n${'\\t'.repeat(indent - 1)}}`\r\n\t}\r\n}\r\n\r\n/**\r\n * @template {JqNode} U\r\n * @template {{ new(...x: any[]): U }} T\r\n */\r\nexport class JqList {\r\n\t/**\r\n\t * @type {U[]}\r\n\t */\r\n\tnodes = []\r\n\t/**\r\n\t * @type {T}\r\n\t */\r\n\tnodeClass\r\n\r\n\t/**\r\n\t * @param {T} nodeClass \r\n\t * @param {U[]} nodes \r\n\t */\r\n\tconstructor(nodeClass, nodes) {\r\n\t\tthis.nodeClass = nodeClass\r\n\t\tthis.nodes = nodes\r\n\t}\r\n\r\n\t/**\r\n\t * @param {U} node \r\n\t */\r\n\tpush(node) {\r\n\t\tif (!(node instanceof this.nodeClass))\r\n\t\t\tthrow new TypeError(`JqError - Cannot push node not of instance '${this.nodeClass.name}' into JqList<${this.nodeClass.name}>`)\r\n\t\tthis.nodes.push(node)\r\n\t}\r\n\r\n\tpop() {\r\n\t\treturn this.nodes.pop()\r\n\t}\r\n}\r\n\r\nexport class JqAttribute {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\t_name = ''\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\t_value = ''\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {Attr | null}\r\n\t */\r\n\tattrNode = null\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {string} value \r\n\t */\r\n\tconstructor(name, value) {\r\n\t\tthis.name = camelToKebab(name).replace(/_/g, '-')\r\n\t\tthis.value = value\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn this._name\r\n\t}\r\n\t/**\r\n\t * @param {string} attrName\r\n\t */\r\n\tset name(attrName) {\r\n\t\tthis._name = attrName\r\n\t}\r\n\tget value() {\r\n\t\treturn this._value\r\n\t}\r\n\t/**\r\n\t * @param {string} attrValue\r\n\t */\r\n\tset value(attrValue) {\r\n\t\tthis._value = attrValue\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tthis.initial.createNode()\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tnode.setAttributeNode(/**@type {Attr}*/(this.attrNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node;\r\n\t\t\t/**@type {HTMLElement}*/ (node.htmlNode).setAttributeNode(/**@type {Attr}*/(this.attrNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new TypeError(`JqError - Cannot attach JqAttribute '${this.name}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tjqAttribute.attrNode = document.createAttribute(jqAttribute.name)\r\n\t\t\tjqAttribute.attrNode.value = jqAttribute.value\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateAttribute() {\r\n\t\t\tconst jqAttribute = this.context;\r\n\t\t\t/**@type {Attr}*/ (jqAttribute.attrNode).value = jqAttribute.value\r\n\t\t\treturn this\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {string} value\r\n\t\t */\r\n\t\tsetAttribute(value) {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tif (value === jqAttribute.value) return this\r\n\r\n\t\t\tjqAttribute.value = value;\r\n\t\t\t/**@type {Attr}*/ (jqAttribute.attrNode).value = value\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tconst jqElement = jqAttribute.jqParent\r\n\r\n\t\t\tif (!jqElement) return this\r\n\t\t\tjqElement.delete.removeAttribute(jqAttribute)\r\n\r\n\t\t\tjqAttribute.attrNode = null\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ [x: string]: Primitive }} attrObj\r\n\t */\r\n\tstatic objectToJqAttributes(attrObj) {\r\n\r\n\t\tif (attrObj === null || typeof attrObj !== \"object\")\r\n\t\t\tthrow new TypeError(`JqError - Invalid argument passed to attr(...)`)\r\n\r\n\t\tconst attrList = Object.entries(attrObj)\r\n\t\t\t.map(([key, value]) => {\r\n\t\t\t\tconst _name = camelToKebab(key).replace(/_/g, '-')\r\n\t\t\t\tconst _value = String(value)\r\n\r\n\t\t\t\tconst attribute = new JqAttribute(_name, _value)\r\n\t\t\t\treturn attribute\r\n\t\t\t})\r\n\r\n\t\treturn new JqList(JqAttribute, attrList)\r\n\t}\r\n}\r\n\r\nexport class JqText {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {Text | null}\r\n\t */\r\n\thtmlNode = null\r\n\ttext = ''\r\n\r\n\t/**\r\n\t * @param  {Array<Primitive>} primitives\r\n\t */\r\n\tconstructor(...primitives) {\r\n\t\tthis.text = primitives.map(primitive => String(primitive ?? '')).join('')\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node \r\n\t * @returns \r\n\t */\r\n\tattachTo(node) {\r\n\r\n\t\tif (node === null) {\r\n\t\t\treturn this.toString()\r\n\t\t}\r\n\r\n\t\tthis.initial.createNode()\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tnode.appendChild(/**@type {Text}*/(this.htmlNode))\r\n\t\t\treturn this.toString()\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node;\r\n\t\t\t(node.shadowRoot ?? /**@type {HTMLElement}*/ (node.htmlNode))\r\n\t\t\t\t.appendChild(/**@type {Text}*/(this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node;\r\n\t\t\t/**@type {Node}*/ (node.htmlNode).appendChild(/**@type {Node}*/(this.htmlNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new TypeError(`JqError - Cannot attach JqText to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\ttoString(indent = 0) {\r\n\t\treturn /**@type {Text}*/ (this.htmlNode).nodeValue ?? ''\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tjqElement.htmlNode = document.createTextNode(jqElement.text)\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateNode() {\r\n\t\t\treturn this\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {string} text \r\n\t\t */\r\n\t\tsetText(text) {\r\n\t\t\tconst jqText = this.context;\r\n\t\t\t/**@type {Text}*/ (jqText.htmlNode).nodeValue = jqText.text = text\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqText = this.context\r\n\t\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (jqText.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqText))\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1);\r\n\t\t\t/**@type {Text}*/ (jqText.htmlNode).remove()\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class JqFragment {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {Node | null}\r\n\t */\r\n\thtmlNode = null\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tchildNodes = []\r\n\r\n\t/**\r\n\t * @param {Array<JqElement | JqFragment | JqText>} childNodes \r\n\t */\r\n\tconstructor(childNodes) {\r\n\t\tthis.childNodes = childNodes\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tconst attachNode = () => this.initial\r\n\t\t\t.createNode()\r\n\t\t\t.attachChildren()\r\n\r\n\t\tif (node === null) {\r\n\t\t\tattachNode()\r\n\t\t}\r\n\t\telse if (node instanceof HTMLElement) {\r\n\t\t\tattachNode()\r\n\t\t\tnode.appendChild(/**@type {Node}*/(this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node, attachNode()\r\n\t\t\tconst domNode = node.shadowRoot ?? /**@type {Node}*/ (node.htmlNode)\r\n\t\t\tdomNode.appendChild(/**@type {Node}*/(this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node, attachNode();\r\n\t\t\t/**@type {Node}*/ (node.htmlNode).appendChild(/**@type {Node}*/(this.htmlNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqFragment to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 0) {\r\n\t\treturn this.childNodes.map(x => x.toString(indent)).join('\\n' + '\\t'.repeat(indent))\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tjqFragment.htmlNode = document.createDocumentFragment().cloneNode()\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachChildren() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tfor (const childNode of jqFragment.childNodes) {\r\n\t\t\t\tchildNode.attachTo(jqFragment)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\t/**\r\n\t\t * @param {JqElement | JqFragment | JqText} childNode\r\n\t\t */\r\n\t\tattachChild(childNode) {\r\n\t\t\tconst jqFragment = this.context\r\n\r\n\t\t\tif (jqFragment.jqParent instanceof JqFragment) {\r\n\t\t\t\tjqFragment.jqParent.update.attachChild(childNode)\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\tif (jqFragment.jqParent instanceof JqElement) {\r\n\t\t\t\tconst node = jqFragment.jqParent.shadowRoot ?? /**@type {HTMLElement}*/ (jqFragment.jqParent.htmlNode);\r\n\t\t\t\tnode.appendChild(/**@type {HTMLElement}*/(childNode.htmlNode))\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\treturn this\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @param {JqElement | JqFragment | JqText} oldChildNode \r\n\t\t * @param {JqElement | JqFragment | JqText} newChildNode\r\n\t\t */\r\n\t\treplaceChild(oldChildNode, newChildNode) {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tconst delChildIdx = jqFragment.childNodes.findIndex(childNode => Object.is(childNode, oldChildNode))\r\n\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - childNode not found in jqFragment.childNodes\")\r\n\r\n\t\t\tjqFragment.childNodes.splice(delChildIdx, 1, newChildNode)\r\n\r\n\t\t\tif (!(oldChildNode instanceof JqText))\r\n\t\t\t\toldChildNode.childNodes.forEach(childNode => childNode.delete.deleteSelf());\r\n\r\n\r\n\t\t\tconst jqParent = /**@type {JqFragment | JqElement}*/ (oldChildNode.jqParent)\r\n\t\t\tconst htmlNode = /**@type {Node | HTMLElement}*/ (jqParent?.htmlNode)\r\n\t\t\thtmlNode.replaceChild(\r\n\t\t\t\t/**@type {Node | HTMLElement}*/(newChildNode.htmlNode),\r\n\t\t\t\t/**@type {Node | HTMLElement}*/(oldChildNode.htmlNode)\r\n\t\t\t)\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tconst jqParent = /**@type {JqFragment | JqElement}*/ (jqFragment.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqFragment))\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - JqFragment not found in its jqParent.childNodes\")\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1)\r\n\t\t\tjqFragment.childNodes.forEach(childNode => childNode.delete.deleteSelf())\r\n\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class JqElement {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tname\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {ShadowRoot | null}\r\n\t */\r\n\tshadowRoot = null\r\n\t/**\r\n\t * @type {HTMLElement | null}\r\n\t */\r\n\thtmlNode = null\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tchildNodes = []\r\n\t/**\r\n\t * @type {JqAttribute[]}\r\n\t */\r\n\tattributes = []\r\n\t/**\r\n\t * @type {JqEvent[]}\r\n\t */\r\n\tevents = []\r\n\t/**\r\n\t * @type {JqAnimation[]}\r\n\t */\r\n\tanimations = []\r\n\t/**\r\n\t * @type {Array<JqCSSProperty>}\r\n\t */\r\n\tinlineStyles = []\r\n\t/**\r\n\t * @type {Array<JqCSSRule>}\r\n\t */\r\n\tblockStyles = []\r\n\t/**\r\n\t * @type {JqCallback[]}\r\n\t */\r\n\tcallbacks = []\r\n\t/**\r\n\t * @type {HTMLStyleElement | null}\r\n\t */\r\n\tscopedStyleSheet = null\r\n\tnodePosition = -1\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {JqElementParameters} props \r\n\t */\r\n\tconstructor(name, props) {\r\n\t\tthis.name = name\r\n\t\tObject.assign(this, props)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tconst attachNode = () => this.initial\r\n\t\t\t.createNode(isNullish(this.htmlNode))\r\n\t\t\t.attachStyles()\r\n\t\t\t.attachAttributes()\r\n\t\t\t.attachChildren()\r\n\t\t\t.attachEventListeners()\r\n\t\t\t.attachAnimations()\r\n\r\n\t\tif (node === null) {\r\n\t\t\tattachNode()\r\n\t\t}\r\n\t\telse if (node instanceof HTMLElement) {\r\n\t\t\tattachNode()\r\n\t\t\tnode.appendChild(/**@type {HTMLElement}*/(this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node, attachNode();\r\n\t\t\t(node.shadowRoot ?? /**@type {HTMLElement}*/ (node.htmlNode))\r\n\t\t\t\t.appendChild(/**@type {HTMLElement}*/(this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node, attachNode();\r\n\t\t\t/**@type {Node}*/ (node.htmlNode).appendChild(/**@type {HTMLElement}*/(this.htmlNode))\r\n\t\t\tnode.update.attachChild(this)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqElement '${this.name}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 0) {\r\n\t\tconst emptyTags = [\r\n\t\t\t\"area\", \"base\", \"br\",\r\n\t\t\t\"col\", \"embed\", \"hr\",\r\n\t\t\t\"img\", \"input\", \"link\",\r\n\t\t\t\"meta\", \"param\", \"source\",\r\n\t\t\t\"track\", \"wbr\"\r\n\t\t]\r\n\r\n\t\t/**\r\n\t\t * @param {number} length\r\n\t\t */\r\n\t\tconst hasElmStartIndent = (length) => length > 0 ? '\\n' + '\\t'.repeat(indent + 1) : ''\r\n\r\n\t\t/**\r\n\t\t * @param {number} length\r\n\t\t */\r\n\t\tconst hasElmEndIndent = (length) => length > 0 ? '\\n' + '\\t'.repeat(indent) : ''\r\n\t\tconst emptyTagSelfClosure = emptyTags.includes(this.name) ? '/' : ''\r\n\r\n\t\tconst childMarkup = this.childNodes.map(x => x.toString(indent + 1)).join('\\n' + '\\t'.repeat(indent + 1))\r\n\t\tconst selfAttrs = this.attributes.map(x => `${x.name} = \"${stringify(x.value)}\"`).join(\" \")\r\n\t\tconst selfCallbacks = this.callbacks.map(x => x.toString(indent + 1)).join('\\n' + '\\t'.repeat(indent))\r\n\r\n\t\tconst selfMarkupHead = `<${this.name}${selfAttrs.length ? ' ' : ''}${selfAttrs}${emptyTagSelfClosure}>`\r\n\t\tconst selfMarkupTail = `${hasElmStartIndent(childMarkup.length || selfCallbacks.length) +\r\n\t\t\tchildMarkup +\r\n\t\t\t(selfCallbacks.length ? hasElmStartIndent(childMarkup.length) + selfCallbacks : '') +\r\n\t\t\thasElmEndIndent(childMarkup.length || selfCallbacks.length)}</${this.name}>`\r\n\t\tconst selfMarkup = `${selfMarkupHead}${!emptyTagSelfClosure ? selfMarkupTail : ''}`\r\n\r\n\t\treturn selfMarkup\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode(recreate = true) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tif (recreate)\r\n\t\t\t\tjqElement.htmlNode = document.createElement(jqElement.name)\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachAttributes() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const attribute of jqElement.attributes) {\r\n\t\t\t\tattribute.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachChildren() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst callbackPosNodePairs = jqElement.callbacks.map(callback =>\r\n\t\t\t\t/**@type {const}*/([callback.nodePosition, callback]))\r\n\r\n\t\t\tfor (const childNode of jqElement.childNodes) {\r\n\t\t\t\tcallbackPosNodePairs.forEach(([pos, callback], idx) =>\r\n\t\t\t\t\tattachCallback(idx, childNode.nodePosition, pos, callback))\r\n\r\n\t\t\t\tchildNode.attachTo(jqElement)\r\n\t\t\t}\r\n\r\n\t\t\tcallbackPosNodePairs.forEach(([pos, callback], idx) =>\r\n\t\t\t\tattachCallback(idx, -1, pos, callback, true))\r\n\r\n\t\t\treturn this\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {number} idx \r\n\t\t\t * @param {number} childNodePos \r\n\t\t\t * @param {number} callbackPos \r\n\t\t\t * @param {JqCallback} callback \r\n\t\t\t * @param {boolean} ignorePos\r\n\t\t\t */\r\n\t\t\tfunction attachCallback(idx, childNodePos, callbackPos, callback, ignorePos = false) {\r\n\t\t\t\tif (!ignorePos && callbackPos >= childNodePos) return\r\n\t\t\t\tcallback.attachTo(jqElement)\r\n\t\t\t\tcallbackPosNodePairs.splice(idx, 1)\r\n\t\t\t}\r\n\t\t},\r\n\t\tattachEventListeners() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const jqEvent of jqElement.events) {\r\n\t\t\t\tjqEvent.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachAnimations() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tif (jqElement.animations.length == 0) return this\r\n\r\n\t\t\tobserveElement(/**@type {HTMLElement}*/(jqElement.htmlNode), ([entry, observer]) => {\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tfor (const animation of jqElement.animations) {\r\n\t\t\t\t\t\tanimation.attachTo(jqElement)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tobserver.disconnect()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachStyles() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tif (jqElement.inlineStyles.length == 0 && jqElement.blockStyles.length == 0) return this\r\n\t\t\tif (canHaveShadow(/**@type {HTMLElement}*/(jqElement.htmlNode))) {\r\n\t\t\t\tjqElement.shadowRoot = /**@type {HTMLElement}*/ (jqElement.htmlNode).attachShadow({ mode: \"open\" })\r\n\t\t\t\tconst styleSheet = document.createElement(\"style\")\r\n\t\t\t\tstyleSheet.textContent = ''\r\n\r\n\t\t\t\tjqElement.scopedStyleSheet = styleSheet\r\n\t\t\t\tjqElement.shadowRoot.appendChild(styleSheet)\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {JqCSSProperty[]}\r\n\t\t\t\t */\r\n\t\t\t\tconst styleProperties = []\r\n\t\t\t\tfor (const style of jqElement.inlineStyles) {\r\n\t\t\t\t\tstyle.attachTo(jqElement)\r\n\t\t\t\t\tstyleProperties.push(style)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const style of jqElement.blockStyles) {\r\n\t\t\t\t\tstyle.attachTo(jqElement)\r\n\t\t\t\t\tstyleSheet.textContent += '\\n' + style.toString()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stylePropertiesStr = styleProperties.join(\"\\n\\t\")\r\n\t\t\t\tif (stylePropertiesStr.length > 0)\r\n\t\t\t\t\tstyleSheet.textContent += `\\n:host {\\n\\t${stylePropertiesStr}\\n}`\r\n\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(`JqError - scoped styles are not supported for '${jqElement.name}' element.`)\r\n\t\t},\r\n\t\tattachCallbacks() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const callback of jqElement.callbacks) {\r\n\t\t\t\tcallback.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\t/**\r\n\t\t * @param {JqElement | JqFragment | JqText} oldChildNode \r\n\t\t * @param {JqElement | JqFragment | JqText} newChildNode\r\n\t\t */\r\n\t\treplaceChild(oldChildNode, newChildNode) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst delChildIdx = jqElement.childNodes.findIndex(childNode => Object.is(childNode, oldChildNode))\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - childNode not found in jqElement.childNodes\")\r\n\r\n\t\t\tjqElement.childNodes.splice(delChildIdx, 1, newChildNode)\r\n\r\n\t\t\tif (!(oldChildNode instanceof JqText))\r\n\t\t\t\toldChildNode.childNodes.forEach(childNode => childNode.delete.deleteSelf())\r\n\r\n\t\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (oldChildNode.jqParent)\r\n\t\t\tconst htmlNode = /**@type {Node | HTMLElement}*/ (jqParent.htmlNode)\r\n\t\t\thtmlNode.replaceChild(\r\n\t\t\t\t/**@type {Node | HTMLElement | Text}*/(newChildNode.htmlNode),\r\n\t\t\t\t/**@type {Node | HTMLElement | Text}*/(oldChildNode.htmlNode)\r\n\t\t\t)\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\t/**\r\n\t\t * @param {JqAttribute} jqAttribute\r\n\t\t */\r\n\t\tremoveAttribute(jqAttribute) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst indexOfAttr = jqElement.attributes.indexOf(jqAttribute)\r\n\r\n\t\t\tif (indexOfAttr != -1)\r\n\t\t\t\tjqElement.attributes.splice(indexOfAttr, 1);\r\n\r\n\t\t\t/**@type {HTMLElement}*/ (jqElement.htmlNode).removeAttribute(jqAttribute.name)\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (jqElement.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqElement))\r\n\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - JqElement not found in its jqParent.childNodes\")\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1)\r\n\t\t\tjqElement.childNodes.forEach(childNode => childNode.delete.deleteSelf());\r\n\t\t\t/**@type {HTMLElement}*/ (jqElement.htmlNode).remove()\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} context \r\n\t * @param {string} name \r\n\t * @param {JqElementParameters} nodes\r\n\t */\r\n\tstatic custom = (context, name, nodes) => {\r\n\t\treturn new JqElement(name, { ...nodes, htmlNode: context })\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element \r\n * @param {ResolveFn} callback\r\n */\r\nexport function observeElement(element, callback) {\r\n\r\n\t/**\r\n\t * \r\n\t * @param {ResolveFn} callback \r\n\t * @returns {IntersectionObserverCallback}\r\n\t */\r\n\tconst observerCallback =\r\n\t\tcallback => (entries, observer) =>\r\n\t\t\tentries.forEach(entry => callback([entry, observer]))\r\n\r\n\treturn new IntersectionObserver(observerCallback(callback)).observe(element)\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n */\r\nexport function canHaveShadow(element) {\r\n\ttry {\r\n\t\treturn Boolean(/**@type {HTMLElement}*/(element.cloneNode()).attachShadow({ mode: \"open\" }))\r\n\t} catch {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n */\r\nexport const camelToKebab = (str) =>\r\n\tstr.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? \"-\" : \"\") + $.toLowerCase())\r\n\r\n/**\r\n * @param {string} errorMessage \r\n * @param {{ [x: string]: Primitive }} styleObject\r\n */\r\nexport function createPropertyListFromStyleObject(errorMessage, styleObject) {\r\n\t/**\r\n\t * @param {any} value\r\n\t */\r\n\tconst isObject = (value) => value !== null && typeof value == \"object\"\r\n\tif (!isObject(styleObject))\r\n\t\tthrow new Error(errorMessage)\r\n\r\n\t/**\r\n\t * @type {JqCSSProperty[]}\r\n\t */\r\n\tconst styleProperties = Object.entries(styleObject)\r\n\t\t.map(([key, value]) => new JqCSSProperty(key, value))\r\n\r\n\treturn new JqList(JqCSSProperty, styleProperties)\r\n}\r\n\r\n/**\r\n * @template {string} T\r\n * @param {HexColor<T>} col\r\n * @param {number} amt\r\n */\r\nexport function adjustColor(col, amt) {\r\n\r\n\tlet usePound = false\r\n\r\n\tif (col[0] == \"#\") {\r\n\t\tcol = /**@type {HexColor<T>}*/ (/**@type {string}*/ (col).slice(1))\r\n\t\tusePound = true\r\n\t}\r\n\r\n\tconst num = parseInt(col, 16)\r\n\r\n\tlet r = (num >> 16) + amt\r\n\r\n\tif (r > 255) r = 255\r\n\telse if (r < 0) r = 0\r\n\r\n\tlet b = ((num >> 8) & 0x00FF) + amt\r\n\r\n\tif (b > 255) b = 255\r\n\telse if (b < 0) b = 0\r\n\r\n\tlet g = (num & 0x0000FF) + amt\r\n\r\n\tif (g > 255) g = 255\r\n\telse if (g < 0) g = 0\r\n\r\n\treturn (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16)\r\n}\r\n\r\n/**\r\n * @param {JqNode} node1 \r\n * @param {JqNode} node2\r\n */\r\nfunction diff(node1, node2) {\r\n\tconst nodeComparison = compareJqNodes(node1, node2)\r\n\treturn nodeComparison\r\n\r\n\t/**\r\n\t * @typedef {{ object: JqNode, props: string[][] }} CompareProps\r\n\t */\r\n\r\n\t/**\r\n\t * @param {CompareProps} affected1 \r\n\t * @param {CompareProps} affected2\r\n\t */\r\n\tfunction compareProps(affected1, affected2) {\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst diff = {\r\n\t\t\ttype: Object.getPrototypeOf(affected1.object).constructor,\r\n\t\t\tnode1: affected1.object,\r\n\t\t\tnode2: affected2.object,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tconst deletedProps = affected1.props.filter(prop =>\r\n\t\t\tisNullish(getPropertyValue(/**@type {any}*/(affected2.object), prop)))\r\n\r\n\t\tdiff[DELETED] = /**@type {any}*/ (deletedProps)\r\n\r\n\t\tconst createdProps = affected2.props.filter(prop =>\r\n\t\t\tisNullish(getPropertyValue(/**@type {any}*/(affected1.object), prop)))\r\n\r\n\t\tdiff[CREATED] = /**@type {any}*/ (createdProps)\r\n\r\n\t\tconst updatedProps = affected1.props.filter(prop =>\r\n\t\t\tgetPropertyValue(/**@type {any}*/(affected2.object), prop) !==\r\n\t\t\tgetPropertyValue(/**@type {any}*/(affected1.object), prop))\r\n\r\n\t\tdiff[UPDATED] = /**@type {any}*/ (updatedProps)\r\n\r\n\t\tconst unchangedProps = affected1.props.filter(prop =>\r\n\t\t\tgetPropertyValue(/**@type {any}*/(affected2.object), prop) ===\r\n\t\t\tgetPropertyValue(/**@type {any}*/(affected1.object), prop))\r\n\r\n\t\tdiff[UNCHANGED] = /**@type {any}*/ (unchangedProps)\r\n\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqText} node1 \r\n\t * @param {JqText} node2\r\n\t */\r\n\tfunction compareJqTexts(node1, node2) {\r\n\t\tconst affected1 = {\r\n\t\t\tobject: node1,\r\n\t\t\tprops: [[\"text\"]]\r\n\t\t}\r\n\r\n\t\tconst affected2 = {\r\n\t\t\tobject: node2,\r\n\t\t\tprops: [[\"text\"]]\r\n\t\t}\r\n\r\n\t\tconst diff = compareProps(affected1, affected2)\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqAttribute} jqAttribute1 \r\n\t * @param {JqAttribute} jqAttribute2\r\n\t */\r\n\tfunction compareJqAttributes(jqAttribute1, jqAttribute2) {\r\n\t\tconst affected1 = {\r\n\t\t\tobject: jqAttribute1,\r\n\t\t\tprops: [[\"name\"], [\"value\"]]\r\n\t\t}\r\n\r\n\t\tconst affected2 = {\r\n\t\t\tobject: jqAttribute2,\r\n\t\t\tprops: [[\"name\"], [\"value\"]]\r\n\t\t}\r\n\r\n\t\tconst diff = compareProps(affected1, affected2)\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqFragment} node1 \r\n\t * @param {JqFragment} node2\r\n\t */\r\n\tfunction compareJqFragments(node1, node2) {\r\n\t\tconst firstFragChildren = node1.childNodes\r\n\t\tconst secondFragChildren = node2.childNodes\r\n\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: node1,\r\n\t\t\tnode2: node2,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstFragChildren.length, secondFragChildren.length); i++) {\r\n\t\t\tconst firstFragChild = firstFragChildren[i]\r\n\t\t\tconst secondFragChild = secondFragChildren[i]\r\n\r\n\t\t\tif (firstFragChild === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"childNodes\", secondFragChild])\r\n\t\t\telse if (secondFragChild === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"childNodes\", firstFragChild])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstFragChild, secondFragChild))\r\n\t\t}\r\n\r\n\t\treturn _diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqElement} node1 \r\n\t * @param {JqElement} node2\r\n\t */\r\n\tfunction compareJqElements(node1, node2) {\r\n\t\tconst firstElemChildren = node1.childNodes\r\n\t\tconst secondElemChildren = node2.childNodes\r\n\r\n\t\tconst firstElemAttributes = node1.attributes\r\n\t\tconst secondElemAttributes = node2.attributes\r\n\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: node1,\r\n\t\t\tnode2: node2,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstElemChildren.length, secondElemChildren.length); i++) {\r\n\t\t\tconst firstElemChild = firstElemChildren[i]\r\n\t\t\tconst secondElemChild = secondElemChildren[i]\r\n\r\n\t\t\tif (firstElemChild === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"childNodes\", i + \"\"])\r\n\t\t\telse if (secondElemChild === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"childNodes\", i + \"\"])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstElemChild, secondElemChild))\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstElemAttributes.length, secondElemAttributes.length); i++) {\r\n\t\t\tconst firstElemAttribute = firstElemAttributes[i]\r\n\t\t\tconst secondElemAttribute = secondElemAttributes[i]\r\n\r\n\t\t\tif (firstElemAttribute === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"attributes\", i + ''])\r\n\t\t\telse if (secondElemAttribute === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"attributes\", i + ''])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstElemAttribute, secondElemAttribute))\r\n\t\t}\r\n\r\n\t\treturn _diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqNode} node1 \r\n\t * @param {JqNode} node2\r\n\t */\r\n\tfunction compareJqNodes(node1, node2) {\r\n\t\tif (isJqElement(node1) && isJqElement(node2))\r\n\t\t\treturn compareJqElements(/**@type {JqElement}*/(node1), /**@type {JqElement}*/(node2))\r\n\t\tif (isJqFragment(node1) && isJqFragment(node2))\r\n\t\t\treturn compareJqFragments(/**@type {JqFragment}*/(node1), /**@type {JqFragment}*/(node2))\r\n\t\tif (isJqAttribute(node1) && isJqAttribute(node2))\r\n\t\t\treturn compareJqAttributes(/**@type {JqAttribute}*/(node1), /**@type {JqAttribute}*/(node2))\r\n\t\tif (isJqText(node1) && isJqText(node2))\r\n\t\t\treturn compareJqTexts(/**@type {JqText}*/(node1), /**@type {JqText}*/(node2))\r\n\r\n\t\treturn compareJqGenericNodes(node1, node2)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqNode} [node1] \r\n\t * @param {JqNode} [node2]\r\n\t */\r\n\tfunction compareJqGenericNodes(node1, node2) {\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: /**@type {JqNode}*/ (node1),\r\n\t\t\tnode2: /**@type {JqNode}*/ (node2),\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tconst [isNode1, isNode2] = [isNullish(node1), isNullish(node2)]\r\n\r\n\t\tif (isNode1)\r\n\t\t\t_diff[CREATED].push([\"self\"])\r\n\t\tif (isNode2)\r\n\t\t\t_diff[DELETED].push([\"self\"])\r\n\r\n\t\tif (isNode1 || isNode2) return _diff\r\n\r\n\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (/**@type {JqElement | JqFragment}*/(node1).jqParent)\r\n\t\t_diff[UPDATED].push([\"childNodes\", /**@type {JqNode}*/ (node2)])\r\n\r\n\t\treturn _diff\r\n\t}\r\n}\r\n\r\nexport const validHTMLElements = /**@type {const}*/ ([\r\n\t\"a\",\r\n\t\"address\",\r\n\t\"article\",\r\n\t\"aside\",\r\n\t\"audio\",\r\n\t\"b\",\r\n\t\"base\",\r\n\t\"bdo\",\r\n\t\"br\",\r\n\t\"button\",\r\n\t\"canvas\",\r\n\t\"caption\",\r\n\t\"cite\",\r\n\t\"code\",\r\n\t\"col\",\r\n\t\"colgroup\",\r\n\t\"command\",\r\n\t\"data\",\r\n\t\"datalist\",\r\n\t\"dd\",\r\n\t\"del\",\r\n\t\"details\",\r\n\t\"dfn\",\r\n\t\"dialog\",\r\n\t\"div\",\r\n\t\"dl\",\r\n\t\"dt\",\r\n\t\"em\",\r\n\t\"embed\",\r\n\t\"fieldset\",\r\n\t\"figure\",\r\n\t\"figcaption\",\r\n\t\"footer\",\r\n\t\"form\",\r\n\t\"h1\",\r\n\t\"h2\",\r\n\t\"h3\",\r\n\t\"h4\",\r\n\t\"h5\",\r\n\t\"h6\",\r\n\t\"head\",\r\n\t\"header\",\r\n\t\"hgroup\",\r\n\t\"hr\",\r\n\t\"html\",\r\n\t\"i\",\r\n\t\"img\",\r\n\t\"input\",\r\n\t\"ins\",\r\n\t\"kbd\",\r\n\t\"label\",\r\n\t\"legend\",\r\n\t\"li\",\r\n\t\"link\",\r\n\t\"main\",\r\n\t\"map\",\r\n\t\"mark\",\r\n\t\"math\",\r\n\t\"meter\",\r\n\t\"nav\",\r\n\t\"noscript\",\r\n\t\"object\",\r\n\t\"ol\",\r\n\t\"optgroup\",\r\n\t\"option\",\r\n\t\"output\",\r\n\t\"p\",\r\n\t\"param\",\r\n\t\"pre\",\r\n\t\"progress\",\r\n\t\"portal\",\r\n\t\"q\",\r\n\t\"ruby\",\r\n\t\"s\",\r\n\t\"section\",\r\n\t\"small\",\r\n\t\"span\",\r\n\t\"strike\",\r\n\t\"tt\",\r\n\t\"u\",\r\n\t\"var\",\r\n\t\"video\",\r\n\t\"wbr\",\r\n\t\"abbr\",\r\n\t\"area\",\r\n\t\"bdi\",\r\n\t\"blockquote\",\r\n\t\"body\",\r\n\t\"iframe\",\r\n\t\"menu\",\r\n\t\"meta\",\r\n\t\"picture\",\r\n\t\"rb\",\r\n\t\"rp\",\r\n\t\"rt\",\r\n\t\"rtc\",\r\n\t\"samp\",\r\n\t\"script\",\r\n\t\"select\",\r\n\t\"slot\",\r\n\t\"source\",\r\n\t\"strong\",\r\n\t\"style\",\r\n\t\"sub\",\r\n\t\"summary\",\r\n\t\"sup\",\r\n\t\"table\",\r\n\t\"tbody\",\r\n\t\"td\",\r\n\t\"template\",\r\n\t\"textarea\",\r\n\t\"tfoot\",\r\n\t\"th\",\r\n\t\"thead\",\r\n\t\"time\",\r\n\t\"title\",\r\n\t\"tr\",\r\n\t\"track\",\r\n\t\"ul\",\r\n])\r\n\r\n/**\r\n * @typedef {null | undefined | number | string | symbol | bigint} Primitive\r\n * \r\n * @typedef {{ [styleName: string]: Primitive | Primitive[] }\r\n * | Map<string, Primitive>\r\n * | Array<{ [styleName: string]: Primitive | Primitive[] } | Map<string, Primitive>>} AnimationStyles\r\n * \r\n * @typedef {{\r\n *    duration?: string | number,\r\n *    easing?: string,\r\n *    complete?: (..._: unknown[]) => unknown,\r\n *    step?: (..._: unknown[]) => unknown,\r\n *    progress?: (..._: unknown[]) => unknown,\r\n *    specialEasing?: AnimationStyles,\r\n *    start?: (..._: unknown[]) => unknown,\r\n *    done?: (..._: unknown[]) => unknown,\r\n *    fail?: (..._: unknown[]) => unknown,\r\n *    always?: (..._: unknown[]) => unknown\r\n * }} AnimationOptions\r\n * \r\n * @typedef {(styles: AnimationStyles, ...options: ([speed?: number | \"fast\" | \"slow\", easing?: string, callback?: (..._: unknown[]) => unknown]) | [option: AnimationOptions]) => Animation} AnimateFn\r\n * \r\n * @typedef {(arg0: [IntersectionObserverEntry, IntersectionObserver]) => unknown} ResolveFn\r\n * \r\n * @typedef {(reason?: unknown) => unknown} RejectFn\r\n * \r\n * @typedef {{\r\n *    type: new (...a: any) => JqNode,\r\n *    node1: JqNode,\r\n *    node2: JqNode,\r\n *    [UPDATED]: [string, ...Array<string | JqNode>][],\r\n *    [DELETED]: [string, ...Array<string | JqNode>][],\r\n *    [CREATED]: [string, ...Array<string | JqNode>][],\r\n *    [UNCHANGED]: [string, ...Array<string | JqNode>][],\r\n *    childDiffs: Diff[]\r\n * }} Diff\r\n * \r\n * @typedef {JqElement | JqAttribute | JqCSSProperty | JqCSSRule | JqAnimation | JqEvent | JqState | JqFragment | JqText | JqCallback} JqNode\r\n * \r\n * @typedef {'0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F'} HexDigit\r\n * \r\n * @typedef {{\r\n *    childNodes: Array<JqElement | JqFragment | JqText>,\r\n *    attributes: JqAttribute[], events: JqEvent[],\r\n *    animations: JqAnimation[], inlineStyles: Array<JqCSSProperty>, blockStyles: Array<JqCSSRule>,\r\n *    callbacks: JqCallback[], htmlNode?: HTMLElement\r\n * }} JqElementParameters\r\n * \r\n * @typedef {JqText | JqAttribute | JqElement | JqFragment} DiffableJqNode\r\n * \r\n * @typedef {JqList<JqState, typeof JqState> | JqEvent} CallbackArg\r\n */\r\n\r\n/**\r\n * @template {string} T\r\n * @typedef { T extends `#${HexDigit}${HexDigit}${HexDigit}${infer Rest1}`\r\n *    ? (\r\n *       Rest1 extends ``\r\n *          ? T\r\n *          : (\r\n *             Rest1 extends `${HexDigit}${HexDigit}${HexDigit}`\r\n *                ? T\r\n *                : never\r\n *           )\r\n *      )\r\n *    : never\r\n * } HexColor\r\n */","import {\r\n\tJqEvent, getNodes, escapeHTMLEntities,\r\n\tstringify, JqAnimation, JqCallback,\r\n\tisPrimitive, JqState, JqElement,\r\n\tJqCSSProperty, JqFragment, JqText, JqCSSRule, JqList,\r\n\tJqAttribute, StateReference, JqNodeReference, validHTMLElements, camelToKebab, ElementReference\r\n} from \"./utility.js\"\r\n\r\n/**\r\n * @type {WeakMap<HTMLElement, HTMLStyleElement>}\r\n */\r\nconst scopedStyleSheets = new WeakMap()\r\nconst CustomElements = Symbol(\"CustomElements\")\r\n\r\n/**\r\n * @type {Natives}\r\n */\r\nexport const natives = new Proxy(/** @type {Natives & {[k: string | symbol]: any}} */({}), {\r\n\t/**\r\n\t * @param {string | symbol} prop\r\n\t * @returns {unknown | typeof globalize | ((...nodes: JqNode[]) => JqElement)}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[prop]\r\n\r\n\t\tif (prop == \"globalize\")\r\n\t\t\treturn globalize\r\n\r\n\t\treturn (/** @type {import(\"./utility.js\").JqNode[]} */...nodes) => new JqElement(prop, getNodes(nodes))\r\n\t}\r\n})\r\n\r\n/**\r\n * @param {{[k: string | symbol]: any}} [_globalThis] \r\n */\r\nfunction globalize(_globalThis) {\r\n\tvalidHTMLElements\r\n\t\t// @ts-ignore\r\n\t\t.forEach(element => (_globalThis ?? globalThis)[element] = natives[element])\r\n}\r\n\r\n/**\r\n * @type {(strs: string[] | string, ...values: unknown[]) => JqText}\r\n */\r\nconst text = new Proxy(_text, {})\r\n\r\nconst attr = /**@type {AttrFn & AttrProps}*/ (new Proxy(_attr, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(value: unknown) => JqAttribute}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[/**@type {keyof typeof target}*/ (prop)]\r\n\r\n\t\treturn (value) => createAttribute(prop, value)\r\n\t}\r\n}))\r\n\r\nexport const on = /**@type {OnFn & OnProps}*/ (new Proxy({}, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(handler: (event?: Event, ...a: unknown[]) => unknown) => JqEvent}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[/**@type {keyof typeof target}*/ (prop)]\r\n\r\n\t\treturn (handler) =>\r\n\t\t\tnew JqEvent(prop, handler)\r\n\t}\r\n}))\r\n\r\nexport const css = /**@type {CSSFn & CSSProps}*/ (new Proxy(_css, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(value: import(\"./utility.js\").Primitive) => JqCSSProperty}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[/**@type {keyof typeof target}*/ (prop)]\r\n\r\n\t\treturn (value) => {\r\n\t\t\tconst jqCSSProperty = new JqCSSProperty(prop, value)\r\n\t\t\treturn jqCSSProperty\r\n\t\t}\r\n\t}\r\n}))\r\n\r\n/**\r\n * @param {string} name \r\n * @param {typeof HTMLElement} parent\r\n * @returns {(...nodes: import(\"./utility.js\").JqNode[]) => JqElement}\r\n */\r\nconst customizer = (name, parent = HTMLElement) => {\r\n\tif (customElements.get(name))\r\n\t\tthrow new TypeError(`JqError - custom element '${name}' was already defined`);\r\n\r\n\t_custom[CustomElements].push(name)\r\n\tconst _JqElement = Symbol(\"_JqElement\")\r\n\r\n\tconst node = class extends parent {\r\n\t\t/**\r\n\t\t * @type {JqElement | null}\r\n\t\t */\r\n\t\tstatic [_JqElement] = null\r\n\t\t/**\r\n\t\t * @param {string} name \r\n\t\t * @param {import(\"./utility.js\").JqNode[]} nodes \r\n\t\t */\r\n\t\tconstructor(name, nodes) {\r\n\t\t\tsuper()\r\n\t\t\tnode[_JqElement] = JqElement.custom(this, name, getNodes(nodes))\r\n\t\t}\r\n\t}\r\n\r\n\tcustomElements.define(name, node)\r\n\treturn (...nodes) => /**@type {JqElement}*/(new node(name, nodes), node[_JqElement])\r\n}\r\n\r\nconst _custom = Object.assign(customizer, { [CustomElements]: /** @type {string[]} */ ([]) })\r\n\r\n/**\r\n * @type {Customs} custom\r\n*/\r\nexport const custom = new Proxy(_custom, {\r\n\t/**\r\n\t * @param {string | symbol} prop\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[/**@type {keyof typeof target}*/ (prop)]\r\n\r\n\t\treturn target(camelToKebab(prop))\r\n\t}\r\n})\r\n\r\n/**\r\n * @param {string} name \r\n * @param {unknown} value \r\n * @returns {JqAttribute}\r\n */\r\nfunction createAttribute(name, value) {\r\n\tconst _value = isPrimitive(value) ? String(value) : stringify(value)\r\n\treturn new JqAttribute(name, _value)\r\n}\r\n\r\n/**\r\n * @param {{ [x: string]: import(\"./utility.js\").Primitive }} attrObj \r\n * @returns {JqList<JqAttribute, typeof JqAttribute>}\r\n */\r\nfunction _attr(attrObj) {\r\n\tconst attrList = JqAttribute.objectToJqAttributes(attrObj)\r\n\treturn attrList\r\n}\r\n\r\n/**\r\n * @param {unknown} value \r\n * @returns {JqText}\r\n */\r\nfunction createTextNode(value) {\r\n\tconst text = isPrimitive(value) ? String(value) : stringify(value)\r\n\treturn new JqText(text)\r\n}\r\n\r\n/**\r\n * @param {string[] | string} strs \r\n * @param  {unknown[]} values\r\n */\r\nfunction _text(strs, ...values) {\r\n\tlet _strs = strs\r\n\r\n\tif (Array.isArray(strs))\r\n\t\t_strs = escapeHTMLEntities(strs.reduce((acc, curr, i) =>\r\n\t\t\t\"\" + acc + (curr ?? \"\") + (stringify(values[i]) ?? \"\"), \"\"))\r\n\telse if (typeof _strs == \"string\")\r\n\t\t_strs = escapeHTMLEntities(_strs)\r\n\r\n\treturn createTextNode(_strs)\r\n}\r\n\r\n/**\r\n * @param {Array<JqElement | JqFragment | JqText>} _childNodes \r\n * @returns {JqFragment}\r\n */\r\nfunction fragment(..._childNodes) {\r\n\tconst { childNodes } = getNodes(_childNodes)\r\n\treturn new JqFragment(childNodes)\r\n}\r\n\r\n/**\r\n * @param  {Parameters<import(\"./utility.js\").AnimateFn>} parameters \r\n * @returns {JqAnimation}\r\n */\r\nexport function animate(...parameters) {\r\n\treturn new JqAnimation(...parameters)\r\n}\r\n\r\n/**\r\n * @param  {[string | { [x: string]: import(\"./utility.js\").Primitive }, ...string[]]} args\r\n */\r\nfunction _css(...args) {\r\n\r\n\tconst [ruleName, ...ruleArgs] = args\r\n\r\n\tif (args.length == 1 && !isPrimitive(ruleName)) {\r\n\t\tconst rule = new JqCSSRule([\":host\", ...ruleArgs],\r\n\t\t\t/**@type {{ [x: string]: import(\"./utility.js\").Primitive }}*/(ruleName))\r\n\t\treturn rule\r\n\t}\r\n\r\n\t/**\r\n\t * @type {(...styleNodes: JqCSSRule[]) => JqCSSRule}\r\n\t */\r\n\treturn (...styleNodes) => {\r\n\t\tconst rule = new JqCSSRule([/** @type {string} */ (ruleName), ...ruleArgs], ...styleNodes)\r\n\t\treturn rule\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {{ [x: string | symbol]: unknown }} initialState\r\n * @returns {JqState}\r\n */\r\nexport function state(initialState) {\r\n\tif (isPrimitive(initialState))\r\n\t\tthrow new TypeError(\"JqError - Expected an object as a value to state(...)\")\r\n\r\n\tconst stateObj = new JqState(initialState ?? {})\r\n\tconst stateProxy = new Proxy(stateObj, {\r\n\t\tget(target, prop) {\r\n\t\t\tif (prop == JqNodeReference)\r\n\t\t\t\treturn target\r\n\t\t\t\r\n\t\t\treturn target[StateReference][prop]\r\n\t\t},\r\n\t\tset(target, prop, value) {\r\n\t\t\ttarget[StateReference][prop] = value\r\n\t\t\ttarget.jqCallbacks.map(jqCallback => jqCallback.update.updateCallback())\r\n\t\t\treturn true\r\n\t\t}\r\n\t})\r\n\r\n\treturn stateProxy\r\n}\r\n\r\n/**\r\n * @param {JqState[]} _states\r\n * @returns {JqList<JqState, typeof JqState>}\r\n */\r\nfunction states(..._states) {\r\n\tthrow new JqList(JqState, _states)\r\n}\r\n\r\nexport const nodes = { attr, text, fragment }\r\nexport { pathSetter, getNodes } from \"./utility.js\"\r\n\r\n/**\r\n * @typedef {{ [name: string]: (...nodes: Array<import(\"./utility.js\").JqNode>) => JqElement }} NativeConstructor\r\n * \r\n * @typedef {{ globalize: (_globalThis?: {}) => void }} Globalizer\r\n * \r\n * @typedef {NativeConstructor & Globalizer} Natives\r\n * \r\n * @typedef {(name: string, parent?: typeof HTMLElement) => (...nodes: import(\"./utility.js\").JqNode[]) => JqElement} CustomConstructor\r\n * \r\n * @typedef {{[CustomElements]: string[]}} Customizer\r\n * \r\n * @typedef {CustomConstructor & Customizer} Customs\r\n * \r\n * @typedef {(attrObj: { [x: string]: import(\"./utility.js\").Primitive }) => JqList<JqAttribute, typeof JqAttribute>} AttrFn\r\n * \r\n * @typedef {{ [x: string]: JqAttribute }} AttrProps\r\n * \r\n * @typedef {(styleObj: { [x: string]: import(\"./utility.js\").Primitive }) => JqCSSRule} CSSFn\r\n * \r\n * @typedef {{ [x: string]: JqCSSProperty }} CSSProps\r\n * \r\n * @typedef {(event?: Event, ...a: unknown[]) => JqEvent} OnFn\r\n * \r\n * @typedef {{ [eventName: string | symbol]: (handler: (event?: Event, ...a: unknown[]) => unknown) => JqEvent }} OnProps\r\n */"],"names":["CREATED","Symbol","UPDATED","DELETED","UNCHANGED","pathSetter","rootPath","relativePath","replace","isPrimitive","test","Object","isJqElement","xs","every","x","JqElement","isJqAttribute","JqAttribute","isJqFragment","JqFragment","isJqText","JqText","getJqNodeConstructors","JqCSSProperty","JqCSSRule","JqAnimation","JqEvent","JqState","throwError","e","errorClass","Error","JqNodeReference","getNodes","nodes","childNodes","attributes","events","animations","callbacks","inlineStyles","blockStyles","childNodeClasses","i","node","entries","some","childNodeClass","_node","nodePosition","push","JqList","nodeClass","forEach","attribute","Array","isArray","convertToJqNode","value","jqParent","map","jqFragment","childNode","convertToJqFragment","jqText","convertToJqText","jqCallback","JqCallback","convertToJqCallback","ctor","getPropertyValue","object","props","result","length","isNullish","escapeHTMLEntities","text","replacer","t","DOMParser","parseFromString","documentElement","textContent","stringify","String","JSON","values","StateReference","event","handler","_","a","constructor","this","attachHandler","element","addEventListener","detachHandler","removeEventListener","attachTo","HTMLElement","jqCallbacks","state","returned","callback","callbackArg","invoke","TypeError","getCallbackArg","retNodeInsertPos","findIndex","splice","toString","indent","update","context","updateCallback","oldNode","reconcile","rootNode","parentNode","newNode","_diff","diff","node1","node2","updatedChanges","createdChanges","deletedChanges","firstProp","nestedProps","updateText","updateAttribute","updateElement","createFragment","createElement","deleteJqFragmentChild","deleteJqElementChild","delete","deleteSelf","childDiff","childDiffs","_node1","_node2","setAttribute","setText","_node1Parent","initial","createNode","replaceChild","_childNode","static","stateList","jqState","domAnimation","parameters","animate","_styles","_options","_moreOptions","options","speed","easing","_callback","option","duration","fill","__styles","Map","fromEntries","styles","setInitialStyles","keys","filter","styleName","finalStyleValue","getComputedStyle","name","camelToKebab","style","setProperty","head","body","ruleName","ruleArgs","styleNodes","errorMessage","join","trim","flatMap","styleNode","styleObject","styleProperties","key","createPropertyListFromStyleObject","space","repeat","pop","_name","_value","attrNode","attrName","attrValue","setAttributeNode","jqAttribute","document","createAttribute","jqElement","removeAttribute","attrObj","attrList","htmlNode","primitives","primitive","appendChild","shadowRoot","nodeValue","createTextNode","updateNode","delChildIdx","is","remove","attachNode","attachChildren","createDocumentFragment","cloneNode","attachChild","oldChildNode","newChildNode","scopedStyleSheet","assign","attachStyles","attachAttributes","attachEventListeners","attachAnimations","hasElmStartIndent","emptyTagSelfClosure","includes","childMarkup","selfAttrs","selfCallbacks","selfMarkupHead","selfMarkupTail","recreate","callbackPosNodePairs","pos","idx","attachCallback","childNodePos","callbackPos","ignorePos","jqEvent","IntersectionObserver","observer","entry","observerCallback","isIntersecting","animation","disconnect","observe","Boolean","attachShadow","mode","canHaveShadow","styleSheet","stylePropertiesStr","attachCallbacks","indexOfAttr","indexOf","str","$","ofs","toLowerCase","nodeComparison","firstElemChildren","secondElemChildren","firstElemAttributes","secondElemAttributes","type","getPrototypeOf","Math","max","firstElemChild","secondElemChild","undefined","firstElemAttribute","secondElemAttribute","compareJqElements","firstFragChildren","secondFragChildren","firstFragChild","secondFragChild","compareJqFragments","jqAttribute1","jqAttribute2","compareProps","compareJqAttributes","affected1","affected2","compareJqTexts","isNode1","isNode2","compareJqGenericNodes","compareJqNodes","deletedProps","prop","createdProps","updatedProps","unchangedProps","validHTMLElements","CustomElements","natives","Proxy","get","target","globalize","_globalThis","globalThis","strs","_strs","reduce","acc","curr","attr","objectToJqAttributes","on","css","args","_custom","parent","customElements","_JqElement","super","custom","define","initialState","stateObj","set","fragment","_childNodes"],"mappings":"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AAQ,EAEb,MAAMiT,EAAeR,EAAUnO,MAAMsG,QAAOoI,GAC3CvO,EAAUL,EAAkCoO,EAAgB,OAAGQ,MAEhEtL,EAAK7H,GAAQ,EAEb,MAAMqT,EAAeV,EAAUlO,MAAMsG,QAAOoI,GAC3C5O,EAAkCqO,EAAgB,OAAGO,KACrD5O,EAAkCoO,EAAgB,OAAGQ,KAEtDtL,EAAK3H,GAAQ,EAEb,MAAMoT,EAAiBX,EAAUlO,MAAMsG,QAAOoI,GAC7C5O,EAAkCqO,EAAgB,OAAGO,KACrD5O,EAAkCoO,EAAgB,OAAGQ,KAItD,OAFAtL,EAAKzH,GAAU,EAERyH,CACP,CAmLF,CAEO,MAAM0L,EAAwC,CACpD,IACA,UACA,UACA,QACA,QACA,IACA,OACA,MACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,SACA,aACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,MACA,WACA,SACA,IACA,OACA,IACA,UACA,QACA,OACA,SACA,KACA,IACA,MACA,QACA,MACA,OACA,OACA,MACA,aACA,OACA,SACA,OACA,OACA,UACA,KACA,KACA,KACA,MACA,OACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,MC57DKC,EAAiBvT,OAAO,kBAKjBwT,EAAU,IAAIC,MAAK,CAAwD,EAAG,CAK1FC,IAAG,CAACC,EAAQT,IACQ,iBAARA,EACHS,EAAOT,GAEH,aAARA,EACIU,EAED,IAAkD1R,IAAU,IAAInB,UAAUmS,EAAMjR,EAASC,MAOlG,SAAS0R,EAAUC,GAClBP,EAEEjQ,SAAQ2C,IAAY6N,GAAeC,YAAY9N,GAAWwN,E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"}
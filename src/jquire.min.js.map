{"version":3,"file":"jquire.min.js","sources":["utility.js","jquire.js"],"sourcesContent":["const CREATED = Symbol(\"created\")\r\nconst UPDATED = Symbol(\"updated\")\r\nconst DELETED = Symbol(\"deleted\")\r\nconst UNCHANGED = Symbol(\"unchanged\")\r\n\r\nexport const OnMountCallback = Symbol(\"OnMountCallback\")\r\nexport const OnUnMountCallback = Symbol(\"OnUnMountCallback\")\r\n\r\nexport const StateReference = Symbol(\"StateReference\")\r\n\r\nexport const PromisePending = Symbol(\"PromisePending\")\r\nexport const PromiseResolved = Symbol(\"PromiseResolved\")\r\nexport const PromiseRejected = Symbol(\"PromiseRejected\")\r\n\r\n/**\r\n * \r\n * @param {string} rootPath \r\n * @returns {(relativePath: string) => string}\r\n */\r\nexport function pathSetter(rootPath) {\r\n\treturn function (relativePath) {\r\n\t\treturn rootPath.replace(/\\/\\s*$/, '') + '/' +\r\n\t\t\trelativePath.replace(/^(?:\\s*\\.)?\\s*\\//, '')\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {unknown} test\r\n */\r\nexport const isPrimitive = (test) => test !== Object(test)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nexport const isJqElement = (...xs) => xs.every(x => x instanceof JqElement)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nexport const isJqAttribute = (...xs) => xs.every(x => x instanceof JqAttribute)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nexport const isJqFragment = (...xs) => xs.every(x => x instanceof JqFragment)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nexport const isJqText = (...xs) => xs.every(x => x instanceof JqText)\r\n\r\nconst getJqNodeConstructors = () => [\r\n\tJqElement, JqAttribute, JqCSSProperty,\r\n\tJqCSSRule, JqAnimation, JqEvent,\r\n\tJqWatch, JqFragment, JqText,\r\n\tJqEach, JqEvent, JqCondition,\r\n\tJqLifecycle, JqList, JqPromise\r\n]\r\n\r\nconst getJqEffectNodeConstructors = () => [\r\n\tJqPromiseState, JqLifecycle, JqEach, JqEvent, JqWatch, JqCondition\r\n]\r\n\r\n/**\r\n * @param {string} e \r\n */\r\nexport const throwError = (e, errorClass = Error) => { throw new errorClass(e) }\r\nexport const JqNodeReference = Symbol(\"JqNodeReference\")\r\n\r\n/**\r\n * \r\n * @param {Array<JqNode | Primitive>} nodes \r\n * @returns {{\r\n *\t\tchildNodes: Array<JqElement | JqFragment | JqText>,\r\n *\t\tattributes: JqAttribute[],\r\n *\t\tevents: JqEvent[], animations: JqAnimation[], \r\n *\t\tinlineStyles: JqCSSProperty[],\r\n *\t\tblockStyles: JqCSSRule[], watchers: JqWatch[],\r\n *\t\tconditions: JqCondition[], iterators: JqEach<any>[],\r\n *\t\tlifecycles: JqLifecycle[], promiseStates: JqPromiseState<any>[]\r\n * }}\r\n */\r\nexport function getNodes(nodes) {\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tconst childNodes = []\r\n\r\n\t/**\r\n\t * @type {JqAttribute[]}\r\n\t */\r\n\tconst attributes = []\r\n\r\n\t/**\r\n\t * @type {JqEvent[]}\r\n\t */\r\n\tconst events = []\r\n\r\n\t/**\r\n\t * @type {JqAnimation[]}\r\n\t */\r\n\tconst animations = []\r\n\r\n\t/**\r\n\t * @type {JqWatch[]}\r\n\t */\r\n\tconst watchers = []\r\n\r\n\t/**\r\n\t * @type {JqCondition[]}\r\n\t */\r\n\tconst conditions = []\r\n\r\n\t/**\r\n\t * @type {JqEach<any>[]}\r\n\t */\r\n\tconst iterators = []\r\n\r\n\t/**\r\n\t * @type {JqLifecycle[]}\r\n\t */\r\n\tconst lifecycles = []\r\n\r\n\t/**\r\n\t * @type {JqPromiseState<any>[]}\r\n\t */\r\n\tconst promiseStates = []\r\n\r\n\t/**\r\n\t * @type {JqCSSProperty[]}\r\n\t */\r\n\tconst inlineStyles = []\r\n\r\n\t/**\r\n\t * @type {JqCSSRule[]}\r\n\t */\r\n\tconst blockStyles = []\r\n\r\n\tlet i = 0\r\n\tfor (const node of nodes) {\r\n\t\tclassifyNode(node, i)\r\n\t\ti++\r\n\t}\r\n\r\n\treturn /**@type {const}*/ ({\r\n\t\tchildNodes, attributes,\r\n\t\tevents, animations, inlineStyles,\r\n\t\tblockStyles, watchers, conditions, iterators,\r\n\t\tlifecycles, promiseStates\r\n\t})\r\n\r\n\t/**\r\n\t * @param {any} node\r\n\t * @param {number} i\r\n\t */\r\n\tfunction classifyNode(node, i) {\r\n\t\tif (node instanceof JqElement) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tchildNodes.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tchildNodes.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqText) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tchildNodes.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqAttribute) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tattributes.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqList && node.nodeClass === JqAttribute) {\r\n\t\t\tfor (const attribute of node) {\r\n\t\t\t\tattribute.nodePosition = i\r\n\t\t\t\tattributes.push(attribute)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (node instanceof JqEvent) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tevents.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqWatch) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\twatchers.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqCondition) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tconditions.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqEach) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\titerators.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqLifecycle) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tlifecycles.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqPromiseState) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tpromiseStates.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqAnimation) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tanimations.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqCSSProperty) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tinlineStyles.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqCSSRule) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tblockStyles.push(node)\r\n\t\t}\r\n\t\telse if (Array.isArray(node)) {\r\n\t\t\tconst _node = /**@type {JqFragment}*/ (convertToJqNode(node, null))\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tchildNodes.push(_node)\r\n\t\t}\r\n\t\telse if (typeof node == \"function\") {\r\n\t\t\tconst _node = getCallbackArg(node)\r\n\t\t\treturn classifyNode(_node, i)\r\n\t\t}\r\n\t\telse if (isPrimitive(node)) {\r\n\t\t\tconst _node = /**@type {JqText}*/ (convertToJqNode(node, null))\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tchildNodes.push(_node)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {(...a: any[]) => any} callback \r\n * @returns {JqEffectNode}\r\n */\r\nfunction getCallbackArg(callback) {\r\n\ttry {\r\n\t\tcallback()\r\n\t}\r\n\tcatch (e) {\r\n\t\tconst isJqEffectNode = () => e instanceof JqWatch\r\n\t\t\t|| e instanceof JqEvent\r\n\t\t\t|| e instanceof JqCondition\r\n\t\t\t|| e instanceof JqEach\r\n\r\n\t\tif (isJqEffectNode()) {\r\n\t\t\te.callback = callback\r\n\t\t\treturn /**@type {JqEffectNode}*/ (e)\r\n\t\t}\r\n\r\n\t\tthrow e\r\n\t}\r\n\r\n\tthrow new TypeError(`JqError - Expected a JqCallback<\"watch\" | \"event\" | \"condition\" | \"each\" | \"mount\" | \"unmount\"> but instead found a 'function'`)\r\n}\r\n\r\n/**\r\n * @param {any} value \r\n * @param {JqFragment | JqElement | null} jqParent \r\n * @returns {Exclude<JqNode, JqState | JqPromise<any>>}\r\n */\r\nexport function convertToJqNode(value, jqParent) {\r\n\t/**\r\n\t * @param {Primitive | Primitive[]} value\r\n\t */\r\n\tconst convertToJqText = (value) => {\r\n\t\tconst jqText = new JqText(/**@type {Primitive}*/(value) ?? '')\r\n\t\tjqText.jqParent = jqParent\r\n\t\treturn jqText\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Primitive[]} values\r\n\t */\r\n\tconst convertToJqFragment = (values) => {\r\n\r\n\t\tconst jqNodes = getNodes(values)\r\n\t\tconst childNodes = jqNodes.childNodes\r\n\r\n\t\tfor (let i = 0; i < childNodes.length; i++) {\r\n\t\t\tconst childNode = childNodes[i]\r\n\t\t\tchildNode.nodePosition = i\r\n\t\t}\r\n\r\n\t\tconst jqFragment = new JqFragment(childNodes)\r\n\r\n\t\tjqFragment.jqParent = jqParent\r\n\t\tjqFragment.conditions = jqNodes.conditions\r\n\t\tjqFragment.iterators = jqNodes.iterators\r\n\t\tjqFragment.lifecycles = jqNodes.lifecycles\r\n\t\tjqFragment.promisesStates = jqNodes.promiseStates\r\n\t\tjqFragment.watchers = jqNodes.watchers\r\n\r\n\t\treturn jqFragment\r\n\t}\r\n\r\n\t/**\r\n\t * @param {(..._: any[]) => any} value \r\n\t */\r\n\tconst convertToJqEffectNode = (value) => {\r\n\t\tconst jqEffectNode = getCallbackArg(value)\r\n\t\tjqEffectNode.jqParent = jqParent\r\n\t\treturn jqEffectNode\r\n\t}\r\n\r\n\tif (Array.isArray(value))\r\n\t\treturn convertToJqFragment(value)\r\n\tif (isPrimitive(value))\r\n\t\treturn convertToJqText(value)\r\n\tif (typeof value == \"function\")\r\n\t\treturn convertToJqEffectNode(value)\r\n\tif (getJqNodeConstructors().some(X => value instanceof X))\r\n\t\treturn /**@type {Exclude<JqNode, JqState | JqPromise<any>>}*/(value)\r\n\r\n\treturn throwError(`JqError - Unexpected value found in place of a JqNode`)\r\n}\r\n\r\n/**\r\n * @param {{[x: string | symbol | number]: unknown}} object \r\n * @param {string[]} props \r\n * @returns {Primitive | { [x: string | symbol]: any }}\r\n */\r\nconst getPropertyValue = (object, props) => {\r\n\tlet result = object\r\n\tfor (let i = 0; i < props.length; i++) {\r\n\t\tresult = /**@type {any}*/ (result?.[props[i]])\r\n\t\tif (isNullish(result)) return result\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @returns {string}\r\n */\r\nexport function escapeHTMLEntities(text) {\r\n\tconst entityRegex1 = /(&#x[0-9A-F]{2,6};)/gi\r\n\tconst entityRegex2 = /(&[a-z0-9]+;)/gi\r\n\r\n\t/**\r\n\t * @param {string} t \r\n\t * @param {string} e \r\n\t * @returns \r\n\t */\r\n\tconst replacer = (t, e) =>\r\n\t\tnew DOMParser().parseFromString(e, \"text/html\").documentElement.textContent ?? ''\r\n\r\n\tconst _text = text.replace(entityRegex1, replacer)\r\n\t\t.replace(entityRegex2, replacer)\r\n\r\n\treturn _text\r\n}\r\n\r\n/**\r\n * @param {unknown} value\r\n */\r\nexport function stringify(value) {\r\n\treturn isPrimitive(value) ? String(value ?? '') : JSON.stringify(value)\r\n}\r\n\r\n/**\r\n * @param  {unknown[]} values\r\n */\r\nexport function isNullish(...values) {\r\n\treturn values.every(x => x === null || x === undefined)\r\n}\r\n\r\n/**\r\n * @template T\r\n */\r\nexport class JqPromiseState {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {typeof PromisePending | typeof PromiseResolved | typeof PromiseRejected}\r\n\t */\r\n\tstate\r\n\t/**\r\n\t * @type {JqPromise<T>}\r\n\t */\r\n\tjqPromise\r\n\t/**\r\n\t * @param {typeof PromisePending | typeof PromiseResolved | typeof PromiseRejected} state \r\n\t * @param {JqPromise<T>} jqPromise \r\n\t */\r\n\tconstructor(state, jqPromise) {\r\n\t\tthis.state = state\r\n\t\tthis.jqPromise = jqPromise\r\n\t}\r\n}\r\n\r\n/**\r\n * @template T\r\n */\r\nexport class JqPromise {\r\n\t/**\r\n\t * @type {typeof PromisePending | typeof PromiseResolved | typeof PromiseRejected}\r\n\t */\r\n\tstate = PromisePending\r\n\t/**\r\n\t * @type {() => Promise<T>}\r\n\t */\r\n\tcallback\r\n\t/**\r\n\t * @type {JqPromiseSubscription<T>}\r\n\t */\r\n\tsubscriptions = {\r\n\t\tpending: [],\r\n\t\tresolved: [],\r\n\t\trejected: []\r\n\t}\r\n\t/**\r\n\t * @type {Promise<T> | null}\r\n\t */\r\n\tpromise = null\r\n\t/**\r\n\t * @param {() => Promise<T>} callback \r\n\t */\r\n\tconstructor(callback) {\r\n\t\tthis.callback = callback\r\n\t}\r\n\r\n\tinvoke() {\r\n\t\tconst promise = this.promise = this.callback()\r\n\t\tthis.subscriptions[\"pending\"].forEach(sub => sub.callback(promise))\r\n\r\n\t\tpromise.then(x =>\r\n\t\t\tthis.subscriptions[\"resolved\"].forEach(sub =>\r\n\t\t\t\t(this.state = PromiseResolved, sub.callback(x))))\r\n\t\t\t.catch(x =>\r\n\t\t\t\tthis.subscriptions[\"rejected\"].forEach(sub =>\r\n\t\t\t\t\t(this.state = PromiseRejected, sub.callback(x))))\r\n\r\n\t\treturn promise\r\n\t}\r\n\t/**\r\n\t * @param {(JqPromiseSubscription<T>[\"pending\"][0] | JqPromiseSubscription<T>[\"resolved\"][0] | JqPromiseSubscription<T>[\"rejected\"][0]) & {type: keyof JqPromiseSubscription<T>}} subscription \r\n\t */\r\n\tsubscribe(subscription) {\r\n\t\tconst { subscriber, callback, type } = subscription\r\n\t\tthis.subscriptions[type].push({ subscriber, callback })\r\n\t}\r\n\t/**\r\n\t * @return {Promise<T>}\r\n\t */\r\n\tget pending() {\r\n\t\tthrow new JqPromiseState(PromisePending, this)\r\n\t}\r\n\t/**\r\n\t * @return {T}\r\n\t */\r\n\tget then() {\r\n\t\tthrow new JqPromiseState(PromiseResolved, this)\r\n\t}\r\n\t/**\r\n\t * @return {any}\r\n\t */\r\n\tget catch() {\r\n\t\tthrow new JqPromiseState(PromiseRejected, this)\r\n\t}\r\n}\r\n\r\nexport class JqLifecycle {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {typeof OnMountCallback | typeof OnUnMountCallback}\r\n\t */\r\n\ttype\r\n\t/**\r\n\t * @type {(...x: any[]) => any}\r\n\t */\r\n\tcallback\r\n\tconstructor() {\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * @template T\r\n */\r\nexport class JqEach {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {{[Symbol.iterator]: () => IterableIterator<T>, [x: string | symbol | number]: any}}\r\n\t */\r\n\titerable\r\n\t/**\r\n\t * @type {(_: [T, number, typeof this.iterable]) => any}\r\n\t */\r\n\tcallback = (_) => ''\r\n\t/**\r\n\t * @type {JqFragment | null}\r\n\t */\r\n\treturned = null\r\n\t/**\r\n\t * @param {{[Symbol.iterator]: () => IterableIterator<T>, [x: string | symbol | number]: any}} iterable \r\n\t */\r\n\tconstructor(iterable) {\r\n\t\tthis.iterable = iterable\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {JqFragment}\r\n\t */\r\n\tinvoke() {\r\n\t\tlet i = 0\r\n\t\tconst results = []\r\n\r\n\t\tfor (const item of this.iterable) {\r\n\t\t\tconst result = this.callback([item, i, this.iterable])\r\n\t\t\tresults.push(result)\r\n\t\t\ti++\r\n\t\t}\r\n\r\n\t\tconst result = /**@type {JqFragment}*/ (convertToJqNode(results, this.jqParent))\r\n\t\tresult.nodePosition = this.nodePosition\r\n\r\n\t\treturn this.returned = result\r\n\t}\r\n}\r\n\r\nexport class JqCondition {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\tcondition = false\r\n\t/**\r\n\t * @type {(_: boolean) => any}\r\n\t */\r\n\tcallback = (_) => ''\r\n\t/**\r\n\t * @type {JqElement | JqFragment | JqText | null}\r\n\t */\r\n\treturned = null\r\n\t/**\r\n\t * @param {boolean} condition \r\n\t */\r\n\tconstructor(condition) {\r\n\t\tthis.condition = condition\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {JqNode}\r\n\t */\r\n\tinvoke() {\r\n\t\tconst result = /**@type {JqCondition}*/ (getCallbackArg(this.callback))\r\n\t\tthis.condition = result.condition\r\n\r\n\t\tconst _result = this.condition ? result.callback(this.condition) : new JqText()\r\n\t\treturn _result\r\n\t}\r\n}\r\n\r\nexport class JqEvent {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tevent\r\n\t/**\r\n\t * @param {Event} [_]\r\n\t */\r\n\tcallback\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} event\r\n\t * @param {(event?: Event) => any} callback \r\n\t */\r\n\tconstructor(event, callback = (_) => '') {\r\n\t\tthis.event = event\r\n\t\tthis.callback = callback\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t */\r\n\tattachHandler(element) {\r\n\t\telement.addEventListener(this.event, this.callback)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t */\r\n\tdetachHandler(element) {\r\n\t\telement.removeEventListener(this.event, this.callback)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tthis.attachHandler(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tif (!node.events.includes(this)) node.events.push(this)\r\n\t\t\tthis.attachHandler(/**@type {HTMLElement}*/(node.domNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqEvent '${this.event}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\nexport class JqWatch {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {JqState[]}\r\n\t */\r\n\tjqStates = []\r\n\t/**\r\n\t * @param {any[]} _\r\n\t * @returns {any}\r\n\t */\r\n\tcallback = (_) => ''\r\n\t/**\r\n\t * @type {JqElement | JqFragment | JqText | null}\r\n\t */\r\n\treturned = null\r\n\t/**\r\n\t * @param  {...JqState} jqStates\r\n\t */\r\n\tconstructor(...jqStates) {\r\n\t\tthis.jqStates = jqStates\r\n\t}\r\n\r\n\tinvoke() {\r\n\t\treturn this.callback(this.jqStates.map(jqState => jqState[StateReference]))\r\n\t}\r\n\r\n\treconcile() {\r\n\t\tconst oldNode = /**@type {NonNullable<typeof this.returned>}*/ (this.returned)\r\n\t\tconst newNode = extractEffectReturn(this, this.jqParent)\r\n\t\tnewNode.attachTo(null, false)\r\n\r\n\t\tconst _diff = diff(oldNode, newNode)\r\n\t\tJqWatch.reconcile(_diff)\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Diff} _diff\r\n\t */\r\n\tstatic reconcile(_diff) {\r\n\r\n\t\tconst node1 = _diff.node1\r\n\t\tconst node2 = _diff.node2\r\n\r\n\t\tconst updatedChanges = _diff[UPDATED]\r\n\t\tconst createdChanges = _diff[CREATED]\r\n\t\tconst deletedChanges = _diff[DELETED]\r\n\r\n\t\tfor (const [firstProp, ...nestedProps] of updatedChanges) {\r\n\t\t\tif (isJqText(node1, node2)) {\r\n\t\t\t\tif (firstProp == \"text\")\r\n\t\t\t\t\tJqWatch.updateText(_diff, [firstProp, ...nestedProps])\r\n\t\t\t}\r\n\t\t\telse if (isJqAttribute(node1, node2)) {\r\n\t\t\t\tif (firstProp == \"value\")\r\n\t\t\t\t\tJqWatch.updateAttribute(_diff, [firstProp, ...nestedProps])\r\n\t\t\t}\r\n\t\t\telse if (!isNullish(node1) && !isNullish(node2)) {\r\n\t\t\t\tJqWatch.updateElement(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\tthis.returned = /**@type {DiffableJqNode}*/ (node2)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const [firstProp, ...nestedProps] of createdChanges) {\r\n\t\t\tif (isJqText(node1, node2)) {\r\n\r\n\t\t\t}\r\n\t\t\telse if (isJqAttribute(node1, node2)) {\r\n\r\n\t\t\t}\r\n\t\t\telse if (isJqFragment(node1, node2)) {\r\n\t\t\t\tif (firstProp == \"childNodes\")\r\n\t\t\t\t\tJqWatch.createFragment(_diff, [firstProp, ...nestedProps])\r\n\t\t\t}\r\n\t\t\telse if (isJqElement(node1, node2)) {\r\n\t\t\t\tif (firstProp == \"childNodes\")\r\n\t\t\t\t\tJqWatch.createElement(_diff, [firstProp, ...nestedProps])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const [firstProp, ...nestedProps] of deletedChanges) {\r\n\t\t\tif (isJqFragment(node1, node2)) {\r\n\t\t\t\tJqWatch.deleteJqFragmentChild(_diff, [firstProp, ...nestedProps])\r\n\t\t\t}\r\n\t\t\telse if (isJqElement(node1, node2)) {\r\n\t\t\t\tJqWatch.deleteJqElementChild(_diff, [firstProp, ...nestedProps])\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t\t/**@type {DiffableJqNode}*/(node1).delete.deleteSelf()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const diff of _diff.childDiffs) {\r\n\t\t\tJqWatch.reconcile(diff)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Diff} diff \r\n\t * @param {[string, ...Array<string | JqNode>]} props\r\n\t */\r\n\tstatic updateAttribute(diff, props) {\r\n\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqAttribute))\r\n\t\t\treturn this\r\n\t\tconst _node1 = /**@type {JqAttribute}*/ (diff.node1)\r\n\t\tconst _node2 = /**@type {JqAttribute}*/ (diff.node2)\r\n\t\treturn _node1.update.setAttribute(_node2.value)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Diff} diff \r\n\t * @param {[string, ...Array<string | JqNode>]} props\r\n\t */\r\n\tstatic updateText(diff, props) {\r\n\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqText))\r\n\t\t\treturn this\r\n\t\tconst _node1 = /**@type {JqText}*/ (diff.node1)\r\n\t\tconst _node2 = /**@type {JqText}*/ (diff.node2)\r\n\t\t_node1.update.setText(_node2.text)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Diff} diff \r\n\t * @param {[string, ...Array<string | JqNode>]} props \r\n\t */\r\n\tstatic updateElement(diff, props) {\r\n\t\tconst _node1 = /**@type {JqElement | JqFragment | JqText}*/ (diff.node1)\r\n\t\tconst _node2 = /**@type {JqElement | JqFragment | JqText}*/ (diff.node2)\r\n\t\tconst _node1Parent = /**@type {JqElement | JqFragment}*/ (_node1.jqParent)\r\n\r\n\t\t_node1Parent.update.replaceChild(_node1, _node2)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Diff} diff \r\n\t * @param {[string, ...Array<string | JqNode>]} param2\r\n\t */\r\n\tstatic createElement(diff, [firstProp, _childNode]) {\r\n\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqElement))\r\n\t\t\treturn this\r\n\r\n\t\tconst _node1 = /**@type {JqElement}*/ (diff.node1)\r\n\t\tconst _node2 = /**@type {JqElement}*/ (diff.node2)\r\n\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\r\n\t\tchildNode.jqParent = _node1.jqParent\r\n\t\tchildNode.nodePosition = _node1.childNodes.length\r\n\r\n\t\t_node1.childNodes.splice(_node1.childNodes.length, 0, childNode)\r\n\t\tchildNode.attachTo(_node1)\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Diff} diff \r\n\t * @param {[string, ...Array<string | JqNode>]} param2\r\n\t */\r\n\tstatic createFragment(diff, [firstProp, _childNode]) {\r\n\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqFragment))\r\n\t\t\treturn this\r\n\r\n\t\tconst _node1 = /**@type {JqFragment}*/ (diff.node1)\r\n\t\tconst _node2 = /**@type {JqFragment}*/ (diff.node2)\r\n\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\r\n\t\tchildNode.jqParent = _node1.jqParent\r\n\t\tchildNode.nodePosition = _node1.childNodes.length\r\n\r\n\t\tchildNode.attachTo(_node1)\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Diff} diff \r\n\t * @param {[string, ...Array<string | JqNode>]} param2 \r\n\t */\r\n\tstatic deleteJqFragmentChild(diff, [firstProp, _childNode]) {\r\n\t\tconst _node1 = /**@type {JqFragment}*/(diff.node1)\r\n\t\tconst _node2 = /**@type {JqFragment}*/ (diff.node2)\r\n\r\n\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/(_childNode)\r\n\t\tchildNode.delete.deleteSelf()\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Diff} diff \r\n\t * @param {[string, ...Array<string | JqNode>]} param2 \r\n\t */\r\n\tstatic deleteJqElementChild(diff, [firstProp, _childNode]) {\r\n\t\tconst _node1 = /**@type {JqElement}*/ (diff.node1)\r\n\t\tconst _node2 = /**@type {JqElement}*/ (diff.node2)\r\n\r\n\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\t\tchildNode.delete.deleteSelf()\r\n\t}\r\n}\r\n\r\nexport class JqState {\r\n\t/**\r\n\t * @type {typeof this}\r\n\t */\r\n\t[JqNodeReference];\r\n\t/**\r\n\t * @type {{ [x: string | symbol]: unknown }}\r\n\t */\r\n\t[StateReference];\r\n\r\n\t/**\r\n\t * @type {JqWatch[]}\r\n\t */\r\n\twatchers = []\r\n\r\n\t/**\r\n\t * @param {{ [x: string | symbol]: unknown }} state \r\n\t */\r\n\tconstructor(state) {\r\n\t\tthis[StateReference] = state\r\n\t\tthis[JqNodeReference] = this\r\n\t}\r\n}\r\n\r\nexport class JqAnimation {\r\n\t/**\r\n\t * @type {Animation | null}\r\n\t */\r\n\tdomAnimation = null\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {Parameters<AnimateFn>}\r\n\t */\r\n\tparameters\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * \r\n\t * @param  {Parameters<AnimateFn>} parameters \r\n\t */\r\n\tconstructor(...parameters) {\r\n\t\tthis.parameters = parameters\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tthis.animate(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tthis.animate(/**@type {HTMLElement}*/(node.domNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqAnimation to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t * @returns {ReturnType<AnimateFn>}\r\n\t */\r\n\tanimate(element) {\r\n\r\n\t\tconst [_styles, _options, ..._moreOptions] = this.parameters\r\n\r\n\t\t/**\r\n\t\t * @type {((..._: unknown[]) => unknown) | null}\r\n\t\t */\r\n\t\tlet callback = null\r\n\t\tlet options = /**@type {Parameters<Element[\"animate\"]>[1]}*/ (isPrimitive(_options) ? null : _options)\r\n\r\n\t\tconst [speed, easing, _callback] = [_options, ..._moreOptions]\r\n\t\tif (_callback) callback = _callback\r\n\t\tconst option = {\r\n\t\t\tduration: speed ?? 400,\r\n\t\t\teasing: easing ?? \"linear\",\r\n\t\t\tfill: \"forwards\"\r\n\t\t}\r\n\r\n\t\toptions ??= /**@type {Parameters<Element[\"animate\"]>[1]}*/ (option)\r\n\r\n\t\tconst __styles = (Array.isArray(_styles)\r\n\t\t\t? _styles.map(x => x instanceof Map ? Object.fromEntries(x) : x)\r\n\t\t\t: _styles instanceof Map ? Object.fromEntries(_styles) : _styles)\r\n\r\n\t\tconst styles = /**@type {Parameters<Element[\"animate\"]>[0]}*/ (Array.isArray(__styles)\r\n\t\t\t? __styles.map(x => JqAnimation.setInitialStyles(element, x))\r\n\t\t\t: JqAnimation.setInitialStyles(element, __styles))\r\n\r\n\t\tthis.domAnimation = element.animate(styles, options)\r\n\t\tcallback && this.domAnimation.addEventListener(\"finish\", callback)\r\n\r\n\t\treturn this.domAnimation\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t * @param {{ [styleName: string]: Primitive | Primitive[] }} styles \r\n\t * @param  {unknown[]} _ \r\n\t * @returns \r\n\t */\r\n\tstatic setInitialStyles = (element, styles, ..._) => {\r\n\t\tconst styleNames = Object.keys(styles).filter(styleName => !Array.isArray(styles[styleName]))\r\n\t\tconst _styles = styleNames.map(styleName => {\r\n\t\t\tconst finalStyleValue = /**@type {Primitive}*/ (styles[styleName])\r\n\t\t\tconst initialStyleValue = getComputedStyle(element).getPropertyValue(styleName)\r\n\r\n\t\t\treturn [styleName, [initialStyleValue, finalStyleValue]]\r\n\t\t})\r\n\r\n\t\treturn { ...styles, ...Object.fromEntries(_styles) }\r\n\t}\r\n}\r\n\r\nexport class JqCSSProperty {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tname\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tvalue\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {unknown} value \r\n\t */\r\n\tconstructor(name, value) {\r\n\t\tthis.name = camelToKebab(name).replace(/_/g, '-')\r\n\t\tthis.value = String(value)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tnode.style.setProperty(this.name, this.value)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqCSS.Property to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 1) {\r\n\t\treturn `${this.name}: ${this.value};`\r\n\t}\r\n}\r\n\r\nexport class JqCSSRule {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {[string, ...string[]]}\r\n\t */\r\n\thead\r\n\t/**\r\n\t * @type {Array<JqCSSProperty | JqCSSRule>}\r\n\t */\r\n\tbody = []\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {[string, ...string[]]} param0 \r\n\t * @param  {(Array<JqCSSProperty | JqCSSRule> | { [x: string]: Primitive }[])} styleNodes \r\n\t */\r\n\tconstructor([ruleName, ...ruleArgs], ...styleNodes) {\r\n\r\n\t\tthis.head = [ruleName, ...ruleArgs]\r\n\r\n\t\tconst errorMessage = `JqError - Invalid argument passed to ${this.head.join(' ').trim()}(...)`\r\n\t\tthis.body = styleNodes.flatMap(styleNode =>\r\n\t\t\tstyleNode instanceof JqCSSProperty || styleNode instanceof JqCSSRule\r\n\t\t\t\t? styleNode\r\n\t\t\t\t: createPropertyListFromStyleObject(errorMessage, styleNode).nodes\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\t// node.style.setProperty(this.name, this.value)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqCSS.Rule to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 1) {\r\n\t\tconst space = '\\t'.repeat(indent)\r\n\t\tlet head = this.head.join(' ').trim()\r\n\t\treturn `${head} {\\n${space}${this.body.map(styleNode => styleNode.toString(indent + 1)).join('\\n' + space)}\\n${'\\t'.repeat(indent - 1)}}`\r\n\t}\r\n}\r\n\r\n/**\r\n * @template {JqNode} U\r\n * @template {{ new(...x: any[]): U }} T\r\n */\r\nexport class JqList {\r\n\t/**\r\n\t * @type {U[]}\r\n\t */\r\n\tnodes = []\r\n\t/**\r\n\t * @type {T}\r\n\t */\r\n\tnodeClass\r\n\r\n\t/**\r\n\t * @param {T} nodeClass \r\n\t * @param {U[]} nodes \r\n\t */\r\n\tconstructor(nodeClass, nodes) {\r\n\t\tthis.nodeClass = nodeClass\r\n\t\tthis.nodes = nodes\r\n\t}\r\n\r\n\t/**\r\n\t * @param {U} node \r\n\t */\r\n\tpush(node) {\r\n\t\tif (!(node instanceof this.nodeClass))\r\n\t\t\tthrow new TypeError(`JqError - Cannot push node not of instance '${this.nodeClass.name}' into JqList<${this.nodeClass.name}>`)\r\n\t\tthis.nodes.push(node)\r\n\t}\r\n\r\n\tpop() {\r\n\t\treturn this.nodes.pop()\r\n\t}\r\n\r\n\t[Symbol.iterator] = () => this.nodes[Symbol.iterator]()\r\n}\r\n\r\nexport class JqAttribute {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\t_name = ''\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\t_value = ''\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {Attr | null}\r\n\t */\r\n\tattrNode = null\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {string} value \r\n\t */\r\n\tconstructor(name, value) {\r\n\t\tthis.name = camelToKebab(name).replace(/_/g, '-')\r\n\t\tthis.value = value\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn this._name\r\n\t}\r\n\t/**\r\n\t * @param {string} attrName\r\n\t */\r\n\tset name(attrName) {\r\n\t\tthis._name = attrName\r\n\t}\r\n\tget value() {\r\n\t\treturn this._value\r\n\t}\r\n\t/**\r\n\t * @param {string} attrValue\r\n\t */\r\n\tset value(attrValue) {\r\n\t\tthis._value = attrValue\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tthis.initial.createNode()\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tnode.setAttributeNode(/**@type {Attr}*/(this.attrNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node;\r\n\t\t\t/**@type {HTMLElement}*/ (node.domNode).setAttributeNode(/**@type {Attr}*/(this.attrNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new TypeError(`JqError - Cannot attach JqAttribute '${this.name}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tjqAttribute.attrNode = document.createAttribute(jqAttribute.name)\r\n\t\t\tjqAttribute.attrNode.value = jqAttribute.value\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateAttribute() {\r\n\t\t\tconst jqAttribute = this.context;\r\n\t\t\t/**@type {Attr}*/ (jqAttribute.attrNode).value = jqAttribute.value\r\n\t\t\treturn this\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {string} value\r\n\t\t */\r\n\t\tsetAttribute(value) {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tif (value === jqAttribute.value) return this\r\n\r\n\t\t\tjqAttribute.value = value;\r\n\t\t\t/**@type {Attr}*/ (jqAttribute.attrNode).value = value\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tconst jqElement = jqAttribute.jqParent\r\n\r\n\t\t\tif (!jqElement) return this\r\n\t\t\tjqElement.delete.removeAttribute(jqAttribute)\r\n\r\n\t\t\tjqAttribute.attrNode = null\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ [x: string]: Primitive }} attrObj\r\n\t */\r\n\tstatic objectToJqAttributes(attrObj) {\r\n\r\n\t\tif (attrObj === null || typeof attrObj !== \"object\")\r\n\t\t\tthrow new TypeError(`JqError - Invalid argument passed to attr(...)`)\r\n\r\n\t\tconst attrList = Object.entries(attrObj)\r\n\t\t\t.map(([key, value]) => {\r\n\t\t\t\tconst _name = camelToKebab(key).replace(/_/g, '-')\r\n\t\t\t\tconst _value = String(value)\r\n\r\n\t\t\t\tconst attribute = new JqAttribute(_name, _value)\r\n\t\t\t\treturn attribute\r\n\t\t\t})\r\n\r\n\t\treturn new JqList(JqAttribute, attrList)\r\n\t}\r\n}\r\n\r\nexport class JqText {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {Text | null}\r\n\t */\r\n\tdomNode = null\r\n\ttext = ''\r\n\r\n\t/**\r\n\t * @param  {Array<Primitive>} primitives\r\n\t */\r\n\tconstructor(...primitives) {\r\n\t\tthis.text = primitives.map(primitive => String(primitive ?? '')).join('')\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node \r\n\t * @returns \r\n\t */\r\n\tattachTo(node, alterDomNode = true) {\r\n\r\n\t\tif (node === null) {\r\n\t\t\treturn this.toString()\r\n\t\t}\r\n\r\n\t\tthis.initial.createNode()\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\talterDomNode && node.appendChild(/**@type {Text}*/(this.domNode))\r\n\t\t\treturn this.toString()\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tif (!node.childNodes.includes(this)) {\r\n\t\t\t\tnode.childNodes.splice(this.nodePosition, 0, this)\r\n\t\t\t}\r\n\t\t\talterDomNode && (node.shadowRoot ?? /**@type {HTMLElement}*/ (node.domNode))\r\n\t\t\t\t.appendChild(/**@type {Text}*/(this.domNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tif (!node.childNodes.includes(this)) {\r\n\t\t\t\tnode.childNodes.splice(this.nodePosition, 0, this)\r\n\t\t\t}\r\n\t\t\talterDomNode && /**@type {Node}*/ (node.domNode).appendChild(/**@type {Node}*/(this.domNode))\r\n\t\t\talterDomNode && node.jqParent?.domNode?.appendChild(/**@type {Text}*/(this.domNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new TypeError(`JqError - Cannot attach JqText to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\ttoString(indent = 0) {\r\n\t\treturn this.text\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tjqElement.domNode = document.createTextNode(jqElement.text)\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateNode() {\r\n\t\t\treturn this\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {string} text \r\n\t\t */\r\n\t\tsetText(text) {\r\n\t\t\tconst jqText = this.context;\r\n\t\t\t/**@type {Text}*/ (jqText.domNode).nodeValue = jqText.text = text\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqText = this.context\r\n\t\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (jqText.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqText))\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1);\r\n\t\t\t/**@type {Text}*/ (jqText.domNode).remove()\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class JqFragment {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {Node | null}\r\n\t */\r\n\tdomNode = null\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tchildNodes = []\r\n\t/**\r\n\t * @type {JqWatch[]}\r\n\t */\r\n\twatchers = []\r\n\t/**\r\n\t * @type {JqCondition[]}\r\n\t */\r\n\tconditions = []\r\n\t/**\r\n\t * @type {JqEach<any>[]}\r\n\t */\r\n\titerators = []\r\n\t/**\r\n\t * @type {JqLifecycle[]}\r\n\t */\r\n\tlifecycles = []\r\n\t/**\r\n\t * @type {JqPromiseState<any>[]}\r\n\t */\r\n\tpromisesStates = []\r\n\r\n\t/**\r\n\t * @param {Array<JqElement | JqFragment | JqText>} childNodes \r\n\t */\r\n\tconstructor(childNodes) {\r\n\t\tthis.childNodes = childNodes\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node\r\n\t */\r\n\tattachTo(node, alterDomNode = true) {\r\n\t\tconst attachNode = () => {\r\n\t\t\tif (alterDomNode) return this.initial\r\n\t\t\t\t.createNode()\r\n\t\t\t\t.attachChildren()\r\n\t\t\treturn this.initial.attachChildren(alterDomNode)\r\n\t\t}\r\n\r\n\t\tif (node === null) {\r\n\t\t\tattachNode()\r\n\t\t}\r\n\t\telse if (node instanceof HTMLElement) {\r\n\t\t\tattachNode()\r\n\t\t\talterDomNode && node.appendChild(/**@type {Node}*/(this.domNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node, attachNode()\r\n\t\t\tif (!node.childNodes.includes(this)) {\r\n\t\t\t\tnode.childNodes.splice(this.nodePosition, 0, this)\r\n\t\t\t}\r\n\t\t\tconst domNode = node.shadowRoot ?? /**@type {Node}*/ (node.domNode)\r\n\t\t\talterDomNode && domNode.appendChild(/**@type {Node}*/(this.domNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node, attachNode()\r\n\t\t\tif (!node.childNodes.includes(this)) {\r\n\t\t\t\tnode.childNodes.splice(this.nodePosition, 0, this)\r\n\t\t\t}\r\n\r\n\t\t\tif (alterDomNode) {\r\n\t\t\t\t/**@type {Node}*/ (node.domNode).appendChild(/**@type {Node}*/(this.domNode))\r\n\t\t\t\tlet ancestor = node.jqParent\r\n\r\n\t\t\t\twhile (ancestor != null && isJqFragment(ancestor)) {\r\n\t\t\t\t\tancestor = ancestor.jqParent\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ancestor != null) {\r\n\t\t\t\t\t/**@type {Node}*/ (ancestor.domNode).appendChild(/**@type {Node}*/(this.domNode))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqFragment to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 0) {\r\n\t\treturn this.childNodes.map(x => x.toString(indent)).join('\\n' + '\\t'.repeat(indent))\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tjqFragment.domNode = document.createDocumentFragment().cloneNode()\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachChildren(alterDomNode = true) {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tconst jqEffectNodes = getEffectNodes(jqFragment)\r\n\r\n\t\t\tfor (const childNode of jqFragment.childNodes) {\r\n\t\t\t\tconst precedingEffectNodes = getPrecedingEffectNodes(childNode)\r\n\t\t\t\tattachEffectNodes(precedingEffectNodes)\r\n\t\t\t\tchildNode.attachTo(jqFragment, alterDomNode)\r\n\t\t\t}\r\n\r\n\t\t\tattachEffectNodes(jqEffectNodes)\r\n\t\t\treturn this\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Array<JqWatch | JqCondition | JqEach<any>>} effectNodes \r\n\t\t\t */\r\n\t\t\tfunction attachEffectNodes(effectNodes) {\r\n\t\t\t\tfor (const effectNode of effectNodes) {\r\n\t\t\t\t\teffectNode.jqParent = jqFragment\r\n\t\t\t\t\tconst returned = effectNode.returned\r\n\r\n\t\t\t\t\tif (effectNode.jqParent.childNodes.includes(/**@type {any}*/ (returned))) continue\r\n\t\t\t\t\tconst childNode = extractEffectReturn(effectNode, jqFragment)\r\n\t\t\t\t\tchildNode.nodePosition = effectNode.nodePosition\r\n\r\n\t\t\t\t\tif (effectNode instanceof JqWatch) {\r\n\t\t\t\t\t\tfor (const _jqState of effectNode.jqStates) {\r\n\t\t\t\t\t\t\tconst jqState = /**@type {JqState}*/ (_jqState[JqNodeReference])\r\n\t\t\t\t\t\t\tconst stateHasWatcher = jqState.watchers\r\n\t\t\t\t\t\t\t\t.some(watcher => watcher.callback.toString() == effectNode.callback.toString())\r\n\r\n\t\t\t\t\t\t\tif (!stateHasWatcher) jqState.watchers.push(effectNode)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchildNode.attachTo(jqFragment, alterDomNode)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {JqElement | JqFragment} jqNode \r\n\t\t\t * @returns \r\n\t\t\t */\r\n\t\t\tfunction getEffectNodes(jqNode) {\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {Exclude<JqEffectNode, JqEvent>[]}\r\n\t\t\t\t */\r\n\t\t\t\tconst jqEffectNodes = []\r\n\t\t\t\tconst maxLength = Math.max(\r\n\t\t\t\t\tjqNode.watchers.length,\r\n\t\t\t\t\tjqNode.conditions.length,\r\n\t\t\t\t\tjqNode.iterators.length\r\n\t\t\t\t)\r\n\r\n\t\t\t\tfor (let i = 0; i < maxLength; i++) {\r\n\t\t\t\t\tconst _jqEffectNodes = [\r\n\t\t\t\t\t\tjqNode.watchers[i],\r\n\t\t\t\t\t\tjqNode.conditions[i],\r\n\t\t\t\t\t\tjqNode.iterators[i]\r\n\t\t\t\t\t].filter(Boolean)\r\n\r\n\t\t\t\t\tjqEffectNodes.push(..._jqEffectNodes)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn jqEffectNodes\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {JqElement | JqFragment | JqText} jqNode\r\n\t\t\t */\r\n\t\t\tfunction getPrecedingEffectNodes(jqNode) {\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {Exclude<JqEffectNode, JqEvent>[]}\r\n\t\t\t\t */\r\n\t\t\t\tconst precedingJqEffectNodes = []\r\n\t\t\t\tfor (let i = 0; i < jqEffectNodes.length; i++) {\r\n\t\t\t\t\tconst jqEffectNode = jqEffectNodes[i]\r\n\t\t\t\t\tconst effectNodePos = jqEffectNode.nodePosition\r\n\r\n\t\t\t\t\tif (effectNodePos > jqNode.nodePosition) continue\r\n\r\n\t\t\t\t\tjqEffectNodes.splice(effectNodePos, 1)\r\n\t\t\t\t\tprecedingJqEffectNodes.push(jqEffectNode)\r\n\t\t\t\t}\r\n\t\t\t\treturn precedingJqEffectNodes\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\t/**\r\n\t\t * @param {JqElement | JqFragment | JqText} oldChildNode \r\n\t\t * @param {JqElement | JqFragment | JqText} newChildNode\r\n\t\t */\r\n\t\treplaceChild(oldChildNode, newChildNode) {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tconst delChildIdx = jqFragment.childNodes.findIndex(childNode => Object.is(childNode, oldChildNode))\r\n\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - childNode not found in jqFragment.childNodes\")\r\n\r\n\t\t\tnewChildNode.nodePosition = oldChildNode.nodePosition\r\n\t\t\tnewChildNode.attachTo(jqFragment)\r\n\t\t\toldChildNode.delete.deleteSelf()\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tconst jqParent = /**@type {JqFragment | JqElement}*/ (jqFragment.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqFragment))\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - JqFragment not found in its jqParent.childNodes\")\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1)\r\n\t\t\twhile (jqFragment.childNodes.length) {\r\n\t\t\t\tconst childNode = jqFragment.childNodes[0]\r\n\t\t\t\tchildNode.delete.deleteSelf()\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class JqElement {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tname\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {ShadowRoot | null}\r\n\t */\r\n\tshadowRoot = null\r\n\t/**\r\n\t * @type {HTMLElement | null}\r\n\t */\r\n\tdomNode = null\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tchildNodes = []\r\n\t/**\r\n\t * @type {JqAttribute[]}\r\n\t */\r\n\tattributes = []\r\n\t/**\r\n\t * @type {JqEvent[]}\r\n\t */\r\n\tevents = []\r\n\t/**\r\n\t * @type {JqAnimation[]}\r\n\t */\r\n\tanimations = []\r\n\t/**\r\n\t * @type {Array<JqCSSProperty>}\r\n\t */\r\n\tinlineStyles = []\r\n\t/**\r\n\t * @type {Array<JqCSSRule>}\r\n\t */\r\n\tblockStyles = []\r\n\t/**\r\n\t * @type {JqWatch[]}\r\n\t */\r\n\twatchers = []\r\n\t/**\r\n\t * @type {JqCondition[]}\r\n\t */\r\n\tconditions = []\r\n\t/**\r\n\t * @type {JqEach<any>[]}\r\n\t */\r\n\titerators = []\r\n\t/**\r\n\t * @type {JqLifecycle[]}\r\n\t */\r\n\tlifecycles = []\r\n\t/**\r\n\t * @type {JqPromiseState<any>[]}\r\n\t */\r\n\tpromisesStates = []\r\n\t/**\r\n\t * @type {HTMLStyleElement | null}\r\n\t */\r\n\tscopedStyleSheet = null\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {JqElementParameters} props \r\n\t */\r\n\tconstructor(name, props) {\r\n\t\tthis.name = name\r\n\t\tObject.assign(this, props)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node\r\n\t */\r\n\tattachTo(node, alterDomNode = true) {\r\n\t\tconst attachNode = () => {\r\n\t\t\tif (alterDomNode) return this.initial\r\n\t\t\t\t.createNode()\r\n\t\t\t\t.attachStyles()\r\n\t\t\t\t.attachAttributes()\r\n\t\t\t\t.attachChildren()\r\n\t\t\t\t.attachEventListeners()\r\n\t\t\t\t.attachAnimations()\r\n\t\t\treturn this.initial.attachChildren(alterDomNode)\r\n\t\t}\r\n\r\n\t\tif (node === null) {\r\n\t\t\tattachNode()\r\n\t\t}\r\n\t\telse if (node instanceof HTMLElement) {\r\n\t\t\tattachNode()\r\n\t\t\talterDomNode && node.appendChild(/**@type {HTMLElement}*/(this.domNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node, attachNode()\r\n\r\n\t\t\tif (!node.childNodes.includes(this)) {\r\n\t\t\t\tnode.childNodes.splice(this.nodePosition, 0, this)\r\n\t\t\t}\r\n\r\n\t\t\talterDomNode && (node.shadowRoot ?? /**@type {HTMLElement}*/ (node.domNode))\r\n\t\t\t\t.appendChild(/**@type {HTMLElement}*/(this.domNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node, attachNode()\r\n\r\n\t\t\tif (!node.childNodes.includes(this)) {\r\n\t\t\t\tnode.childNodes.splice(this.nodePosition, 0, this)\r\n\t\t\t}\r\n\r\n\t\t\tif (alterDomNode) {\r\n\t\t\t\t/**@type {Node}*/ (node.domNode).appendChild(/**@type {Node}*/(this.domNode))\r\n\t\t\t\tlet ancestor = node.jqParent\r\n\r\n\t\t\t\twhile (ancestor != null && isJqFragment(ancestor)) {\r\n\t\t\t\t\tancestor = ancestor.jqParent\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ancestor != null) {\r\n\t\t\t\t\t/**@type {Node}*/ (ancestor.domNode).appendChild(/**@type {Node}*/(this.domNode))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqElement '${this.name}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 0) {\r\n\t\tconst emptyTags = [\r\n\t\t\t\"area\", \"base\", \"br\",\r\n\t\t\t\"col\", \"embed\", \"hr\",\r\n\t\t\t\"img\", \"input\", \"link\",\r\n\t\t\t\"meta\", \"param\", \"source\",\r\n\t\t\t\"track\", \"wbr\"\r\n\t\t]\r\n\r\n\t\t/**\r\n\t\t * @param {number} length\r\n\t\t */\r\n\t\tconst hasElmStartIndent = (length) => length > 0 ? '\\n' + '\\t'.repeat(indent + 1) : ''\r\n\r\n\t\t/**\r\n\t\t * @param {number} length\r\n\t\t */\r\n\t\tconst hasElmEndIndent = (length) => length > 0 ? '\\n' + '\\t'.repeat(indent) : ''\r\n\t\tconst emptyTagSelfClosure = emptyTags.includes(this.name) ? '/' : ''\r\n\r\n\t\tconst childMarkup = this.childNodes.map(x => x.toString(indent + 1)).join('\\n' + '\\t'.repeat(indent + 1))\r\n\t\tconst selfAttrs = this.attributes.map(x => `${x.name} = \"${stringify(x.value)}\"`).join(\" \")\r\n\t\tconst selfCallbacks = this.watchers.map(x => x.returned?.toString(indent + 1) ?? '').join('\\n' + '\\t'.repeat(indent))\r\n\r\n\t\tconst selfMarkupHead = `<${this.name}${selfAttrs.length ? ' ' : ''}${selfAttrs}${emptyTagSelfClosure}>`\r\n\t\tconst selfMarkupTail = `${hasElmStartIndent(childMarkup.length || selfCallbacks.length) +\r\n\t\t\tchildMarkup +\r\n\t\t\t(selfCallbacks.length ? hasElmStartIndent(childMarkup.length) + selfCallbacks : '') +\r\n\t\t\thasElmEndIndent(childMarkup.length || selfCallbacks.length)}</${this.name}>`\r\n\t\tconst selfMarkup = `${selfMarkupHead}${!emptyTagSelfClosure ? selfMarkupTail : ''}`\r\n\r\n\t\treturn selfMarkup\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tjqElement.domNode = document.createElement(jqElement.name)\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachAttributes() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const attribute of jqElement.attributes) {\r\n\t\t\t\tattribute.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachChildren(alterDomNode = true) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst jqEffectNodes = getEffectNodes(jqElement)\r\n\r\n\t\t\tfor (const childNode of jqElement.childNodes) {\r\n\t\t\t\tconst precedingEffectNodes = getPrecedingEffectNodes(childNode)\r\n\t\t\t\tattachEffectNodes(precedingEffectNodes)\r\n\t\t\t\tchildNode.attachTo(jqElement, alterDomNode)\r\n\t\t\t}\r\n\r\n\t\t\tattachEffectNodes(jqEffectNodes)\r\n\t\t\treturn this\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Array<JqWatch | JqCondition | JqEach<any>>} effectNodes \r\n\t\t\t */\r\n\t\t\tfunction attachEffectNodes(effectNodes) {\r\n\t\t\t\tfor (const effectNode of effectNodes) {\r\n\t\t\t\t\teffectNode.jqParent = jqElement\r\n\t\t\t\t\tconst returned = effectNode.returned\r\n\r\n\t\t\t\t\tif (effectNode.jqParent.childNodes.includes(/**@type {any}*/ (returned))) continue\r\n\t\t\t\t\tconst childNode = extractEffectReturn(effectNode, jqElement)\r\n\r\n\t\t\t\t\tif (effectNode instanceof JqWatch) {\r\n\t\t\t\t\t\tfor (const _jqState of effectNode.jqStates) {\r\n\t\t\t\t\t\t\tconst jqState = /**@type {JqState}*/ (_jqState[JqNodeReference])\r\n\t\t\t\t\t\t\tconst stateHasWatcher = jqState.watchers\r\n\t\t\t\t\t\t\t\t.some(watcher => watcher.callback.toString() == effectNode.callback.toString())\r\n\r\n\t\t\t\t\t\t\tif (!stateHasWatcher) jqState.watchers.push(effectNode)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchildNode.attachTo(jqElement, alterDomNode)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * \r\n\t\t\t * @param {JqElement | JqFragment} jqNode \r\n\t\t\t * @returns \r\n\t\t\t */\r\n\t\t\tfunction getEffectNodes(jqNode) {\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {Exclude<JqEffectNode, JqEvent>[]}\r\n\t\t\t\t */\r\n\t\t\t\tconst jqEffectNodes = []\r\n\t\t\t\tconst maxLength = Math.max(\r\n\t\t\t\t\tjqNode.watchers.length,\r\n\t\t\t\t\tjqNode.conditions.length,\r\n\t\t\t\t\tjqNode.iterators.length\r\n\t\t\t\t)\r\n\r\n\t\t\t\tfor (let i = 0; i < maxLength; i++) {\r\n\t\t\t\t\tconst _jqEffectNodes = [\r\n\t\t\t\t\t\tjqNode.watchers[i],\r\n\t\t\t\t\t\tjqNode.conditions[i],\r\n\t\t\t\t\t\tjqNode.iterators[i]\r\n\t\t\t\t\t].filter(Boolean)\r\n\r\n\t\t\t\t\tjqEffectNodes.push(..._jqEffectNodes)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn jqEffectNodes\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {JqElement | JqFragment | JqText} jqNode\r\n\t\t\t */\r\n\t\t\tfunction getPrecedingEffectNodes(jqNode) {\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {Exclude<JqEffectNode, JqEvent>[]}\r\n\t\t\t\t */\r\n\t\t\t\tconst precedingJqEffectNodes = []\r\n\t\t\t\tfor (let i = 0; i < jqEffectNodes.length; i++) {\r\n\t\t\t\t\tconst jqEffectNode = jqEffectNodes[i]\r\n\t\t\t\t\tconst effectNodePos = jqEffectNode.nodePosition\r\n\r\n\t\t\t\t\tif (effectNodePos > jqNode.nodePosition) continue\r\n\r\n\t\t\t\t\tjqEffectNodes.splice(effectNodePos, 1)\r\n\t\t\t\t\tprecedingJqEffectNodes.push(jqEffectNode)\r\n\t\t\t\t}\r\n\t\t\t\treturn precedingJqEffectNodes\r\n\t\t\t}\r\n\t\t},\r\n\t\tattachEventListeners() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const jqEvent of jqElement.events) {\r\n\t\t\t\tjqEvent.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachAnimations() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tif (jqElement.animations.length == 0) return this\r\n\r\n\t\t\tobserveElement(/**@type {HTMLElement}*/(jqElement.domNode), ([entry, observer]) => {\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tfor (const animation of jqElement.animations) {\r\n\t\t\t\t\t\tanimation.attachTo(jqElement)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tobserver.disconnect()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachStyles() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tif (jqElement.inlineStyles.length == 0 && jqElement.blockStyles.length == 0) return this\r\n\t\t\tif (canHaveShadow(/**@type {HTMLElement}*/(jqElement.domNode))) {\r\n\t\t\t\tjqElement.shadowRoot = /**@type {HTMLElement}*/ (jqElement.domNode).attachShadow({ mode: \"open\" })\r\n\t\t\t\tconst styleSheet = document.createElement(\"style\")\r\n\t\t\t\tstyleSheet.textContent = ''\r\n\r\n\t\t\t\tjqElement.scopedStyleSheet = styleSheet\r\n\t\t\t\tjqElement.shadowRoot.appendChild(styleSheet)\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {JqCSSProperty[]}\r\n\t\t\t\t */\r\n\t\t\t\tconst styleProperties = []\r\n\t\t\t\tfor (const style of jqElement.inlineStyles) {\r\n\t\t\t\t\tstyle.attachTo(jqElement)\r\n\t\t\t\t\tstyleProperties.push(style)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const style of jqElement.blockStyles) {\r\n\t\t\t\t\tstyle.attachTo(jqElement)\r\n\t\t\t\t\tstyleSheet.textContent += '\\n' + style.toString()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stylePropertiesStr = styleProperties.join(\"\\n\\t\")\r\n\t\t\t\tif (stylePropertiesStr.length > 0)\r\n\t\t\t\t\tstyleSheet.textContent += `\\n:host {\\n\\t${stylePropertiesStr}\\n}`\r\n\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(`JqError - scoped styles are not supported for '${jqElement.name}' element.`)\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\t/**\r\n\t\t * @param {JqElement | JqFragment | JqText} oldChildNode \r\n\t\t * @param {JqElement | JqFragment | JqText} newChildNode\r\n\t\t */\r\n\t\treplaceChild(oldChildNode, newChildNode) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst delChildIdx = jqElement.childNodes.findIndex(childNode => Object.is(childNode, oldChildNode))\r\n\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - childNode not found in jqElement.childNodes\")\r\n\r\n\t\t\tnewChildNode.nodePosition = oldChildNode.nodePosition\r\n\t\t\tnewChildNode.attachTo(jqElement)\r\n\t\t\toldChildNode.delete.deleteSelf()\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\t/**\r\n\t\t * @param {JqAttribute} jqAttribute\r\n\t\t */\r\n\t\tremoveAttribute(jqAttribute) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst indexOfAttr = jqElement.attributes.indexOf(jqAttribute)\r\n\r\n\t\t\tif (indexOfAttr != -1)\r\n\t\t\t\tjqElement.attributes.splice(indexOfAttr, 1);\r\n\r\n\t\t\t/**@type {HTMLElement}*/ (jqElement.domNode).removeAttribute(jqAttribute.name)\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (jqElement.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqElement))\r\n\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - JqElement not found in its jqParent.childNodes\")\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1)\r\n\t\t\twhile (jqElement.childNodes.length) {\r\n\t\t\t\tconst childNode = jqElement.childNodes[0]\r\n\t\t\t\tchildNode.delete.deleteSelf()\r\n\t\t\t}\r\n\r\n\t\t\t/**@type {HTMLElement}*/ (jqElement.domNode).remove()\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} context \r\n\t * @param {string} name \r\n\t * @param {JqElementParameters} nodes\r\n\t */\r\n\tstatic custom = (context, name, nodes) => {\r\n\t\treturn new JqElement(name, { ...nodes, domNode: context })\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {JqNode} jqNode\r\n */\r\nconst isInvokableEffectNode = (jqNode) => jqNode instanceof JqEach\r\n\t|| jqNode instanceof JqCondition\r\n\t|| jqNode instanceof JqWatch\r\n\r\n/**\r\n * @param {Exclude<JqEffectNode, JqEvent>} effectNode \r\n * @param {JqElement | JqFragment | null} jqParent \r\n * @returns \r\n */\r\nfunction extractEffectReturn(effectNode, jqParent) {\r\n\tlet jqNode = effectNode.invoke()\r\n\r\n\twhile (isInvokableEffectNode(jqNode) || typeof jqNode == \"function\") {\r\n\t\tjqNode = convertToJqNode(jqNode, jqParent)\r\n\t\tjqNode = /**@type {JqEach<any> | JqCondition | JqWatch}*/ (jqNode).invoke()\r\n\t}\r\n\r\n\tconst childNode = /**@type {JqText | JqFragment | JqElement}*/ (convertToJqNode(jqNode, jqParent))\r\n\tchildNode.nodePosition = effectNode.nodePosition\r\n\t\r\n\treturn effectNode.returned = childNode\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element \r\n * @param {ResolveFn} callback\r\n */\r\nexport function observeElement(element, callback) {\r\n\r\n\t/**\r\n\t * @param {ResolveFn} callback \r\n\t * @returns {IntersectionObserverCallback}\r\n\t */\r\n\tconst observerCallback =\r\n\t\tcallback => (entries, observer) =>\r\n\t\t\tentries.forEach(entry => callback([entry, observer]))\r\n\r\n\treturn new IntersectionObserver(observerCallback(callback)).observe(element)\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n */\r\nexport function canHaveShadow(element) {\r\n\ttry {\r\n\t\treturn Boolean(/**@type {HTMLElement}*/(element.cloneNode()).attachShadow({ mode: \"open\" }))\r\n\t} catch {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n */\r\nexport const camelToKebab = (str) =>\r\n\tstr.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? \"-\" : \"\") + $.toLowerCase())\r\n\r\n/**\r\n * @param {string} errorMessage \r\n * @param {{ [x: string]: Primitive }} styleObject\r\n */\r\nexport function createPropertyListFromStyleObject(errorMessage, styleObject) {\r\n\t/**\r\n\t * @param {any} value\r\n\t */\r\n\tconst isObject = (value) => value !== null && typeof value == \"object\"\r\n\tif (!isObject(styleObject))\r\n\t\tthrow new Error(errorMessage)\r\n\r\n\t/**\r\n\t * @type {JqCSSProperty[]}\r\n\t */\r\n\tconst styleProperties = Object.entries(styleObject)\r\n\t\t.map(([key, value]) => new JqCSSProperty(key, value))\r\n\r\n\treturn new JqList(JqCSSProperty, styleProperties)\r\n}\r\n\r\n/**\r\n * @template {string} T\r\n * @param {HexColor<T>} col\r\n * @param {number} amt\r\n */\r\nexport function adjustColor(col, amt) {\r\n\r\n\tlet usePound = false\r\n\r\n\tif (col[0] == \"#\") {\r\n\t\tcol = /**@type {HexColor<T>}*/ (/**@type {string}*/ (col).slice(1))\r\n\t\tusePound = true\r\n\t}\r\n\r\n\tconst num = parseInt(col, 16)\r\n\r\n\tlet r = (num >> 16) + amt\r\n\r\n\tif (r > 255) r = 255\r\n\telse if (r < 0) r = 0\r\n\r\n\tlet b = ((num >> 8) & 0x00FF) + amt\r\n\r\n\tif (b > 255) b = 255\r\n\telse if (b < 0) b = 0\r\n\r\n\tlet g = (num & 0x0000FF) + amt\r\n\r\n\tif (g > 255) g = 255\r\n\telse if (g < 0) g = 0\r\n\r\n\treturn (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16)\r\n}\r\n\r\n/**\r\n * @param {JqNode} node1 \r\n * @param {JqNode} node2\r\n */\r\nfunction diff(node1, node2) {\r\n\tconst nodeComparison = compareJqNodes(node1, node2)\r\n\treturn nodeComparison\r\n\r\n\t/**\r\n\t * @param {CompareProps} affected1 \r\n\t * @param {CompareProps} affected2\r\n\t */\r\n\tfunction compareProps(affected1, affected2) {\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst diff = {\r\n\t\t\ttype: Object.getPrototypeOf(affected1.object).constructor,\r\n\t\t\tnode1: affected1.object,\r\n\t\t\tnode2: affected2.object,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tconst deletedProps = affected1.props.filter(prop =>\r\n\t\t\tisNullish(getPropertyValue(/**@type {any}*/(affected2.object), prop)))\r\n\r\n\t\tdiff[DELETED] = /**@type {any}*/ (deletedProps)\r\n\r\n\t\tconst createdProps = affected2.props.filter(prop =>\r\n\t\t\tisNullish(getPropertyValue(/**@type {any}*/(affected1.object), prop)))\r\n\r\n\t\tdiff[CREATED] = /**@type {any}*/ (createdProps)\r\n\r\n\t\tconst updatedProps = affected1.props.filter(prop =>\r\n\t\t\tgetPropertyValue(/**@type {any}*/(affected2.object), prop) !==\r\n\t\t\tgetPropertyValue(/**@type {any}*/(affected1.object), prop))\r\n\r\n\t\tdiff[UPDATED] = /**@type {any}*/ (updatedProps)\r\n\r\n\t\tconst unchangedProps = affected1.props.filter(prop =>\r\n\t\t\tgetPropertyValue(/**@type {any}*/(affected2.object), prop) ===\r\n\t\t\tgetPropertyValue(/**@type {any}*/(affected1.object), prop))\r\n\r\n\t\tdiff[UNCHANGED] = /**@type {any}*/ (unchangedProps)\r\n\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqText} node1 \r\n\t * @param {JqText} node2\r\n\t */\r\n\tfunction compareJqTexts(node1, node2) {\r\n\t\tconst affected1 = {\r\n\t\t\tobject: node1,\r\n\t\t\tprops: [[\"text\"]]\r\n\t\t}\r\n\r\n\t\tconst affected2 = {\r\n\t\t\tobject: node2,\r\n\t\t\tprops: [[\"text\"]]\r\n\t\t}\r\n\r\n\t\tconst diff = compareProps(affected1, affected2)\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqAttribute} jqAttribute1 \r\n\t * @param {JqAttribute} jqAttribute2\r\n\t */\r\n\tfunction compareJqAttributes(jqAttribute1, jqAttribute2) {\r\n\t\tconst affected1 = {\r\n\t\t\tobject: jqAttribute1,\r\n\t\t\tprops: [[\"name\"], [\"value\"]]\r\n\t\t}\r\n\r\n\t\tconst affected2 = {\r\n\t\t\tobject: jqAttribute2,\r\n\t\t\tprops: [[\"name\"], [\"value\"]]\r\n\t\t}\r\n\r\n\t\tconst diff = compareProps(affected1, affected2)\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqFragment} node1 \r\n\t * @param {JqFragment} node2\r\n\t */\r\n\tfunction compareJqFragments(node1, node2) {\r\n\t\tconst firstFragChildren = node1.childNodes\r\n\t\tconst secondFragChildren = node2.childNodes\r\n\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: node1,\r\n\t\t\tnode2: node2,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstFragChildren.length, secondFragChildren.length); i++) {\r\n\t\t\tconst firstFragChild = firstFragChildren[i]\r\n\t\t\tconst secondFragChild = secondFragChildren[i]\r\n\r\n\t\t\tif (firstFragChild === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"childNodes\", secondFragChild])\r\n\t\t\telse if (secondFragChild === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"childNodes\", firstFragChild])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstFragChild, secondFragChild))\r\n\t\t}\r\n\r\n\t\treturn _diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqElement} node1 \r\n\t * @param {JqElement} node2\r\n\t */\r\n\tfunction compareJqElements(node1, node2) {\r\n\t\tconst firstElemChildren = node1.childNodes\r\n\t\tconst secondElemChildren = node2.childNodes\r\n\r\n\t\tconst firstElemAttributes = node1.attributes\r\n\t\tconst secondElemAttributes = node2.attributes\r\n\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: node1,\r\n\t\t\tnode2: node2,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstElemChildren.length, secondElemChildren.length); i++) {\r\n\t\t\tconst firstElemChild = firstElemChildren[i]\r\n\t\t\tconst secondElemChild = secondElemChildren[i]\r\n\r\n\t\t\tif (firstElemChild === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"childNodes\", secondElemChild])\r\n\t\t\telse if (secondElemChild === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"childNodes\", firstElemChild])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstElemChild, secondElemChild))\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstElemAttributes.length, secondElemAttributes.length); i++) {\r\n\t\t\tconst firstElemAttribute = firstElemAttributes[i]\r\n\t\t\tconst secondElemAttribute = secondElemAttributes[i]\r\n\r\n\t\t\tif (firstElemAttribute === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"attributes\", secondElemAttribute])\r\n\t\t\telse if (secondElemAttribute === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"attributes\", firstElemAttribute])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstElemAttribute, secondElemAttribute))\r\n\t\t}\r\n\r\n\t\treturn _diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqNode} node1 \r\n\t * @param {JqNode} node2\r\n\t */\r\n\tfunction compareJqNodes(node1, node2) {\r\n\t\tif (isJqElement(node1) && isJqElement(node2))\r\n\t\t\treturn compareJqElements(/**@type {JqElement}*/(node1), /**@type {JqElement}*/(node2))\r\n\t\tif (isJqFragment(node1) && isJqFragment(node2))\r\n\t\t\treturn compareJqFragments(/**@type {JqFragment}*/(node1), /**@type {JqFragment}*/(node2))\r\n\t\tif (isJqAttribute(node1) && isJqAttribute(node2))\r\n\t\t\treturn compareJqAttributes(/**@type {JqAttribute}*/(node1), /**@type {JqAttribute}*/(node2))\r\n\t\tif (isJqText(node1) && isJqText(node2))\r\n\t\t\treturn compareJqTexts(/**@type {JqText}*/(node1), /**@type {JqText}*/(node2))\r\n\r\n\t\treturn compareJqGenericNodes(node1, node2)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqNode} [node1] \r\n\t * @param {JqNode} [node2]\r\n\t */\r\n\tfunction compareJqGenericNodes(node1, node2) {\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: /**@type {JqNode}*/ (node1),\r\n\t\t\tnode2: /**@type {JqNode}*/ (node2),\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tconst [isNode1, isNode2] = [isNullish(node1), isNullish(node2)]\r\n\r\n\t\tif (isNode1)\r\n\t\t\t_diff[CREATED].push([\"self\"])\r\n\t\tif (isNode2)\r\n\t\t\t_diff[DELETED].push([\"self\"])\r\n\r\n\t\tif (isNode1 || isNode2) return _diff\r\n\r\n\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (/**@type {JqElement | JqFragment}*/(node1).jqParent)\r\n\t\t_diff[UPDATED].push([\"childNodes\", /**@type {JqNode}*/ (node2)])\r\n\r\n\t\treturn _diff\r\n\t}\r\n}\r\n\r\nexport const validHTMLElements = /**@type {const}*/ ([\r\n\t\"a\",\r\n\t\"address\",\r\n\t\"article\",\r\n\t\"aside\",\r\n\t\"audio\",\r\n\t\"b\",\r\n\t\"base\",\r\n\t\"bdo\",\r\n\t\"br\",\r\n\t\"button\",\r\n\t\"canvas\",\r\n\t\"caption\",\r\n\t\"cite\",\r\n\t\"code\",\r\n\t\"col\",\r\n\t\"colgroup\",\r\n\t\"command\",\r\n\t\"data\",\r\n\t\"datalist\",\r\n\t\"dd\",\r\n\t\"del\",\r\n\t\"details\",\r\n\t\"dfn\",\r\n\t\"dialog\",\r\n\t\"div\",\r\n\t\"dl\",\r\n\t\"dt\",\r\n\t\"em\",\r\n\t\"embed\",\r\n\t\"fieldset\",\r\n\t\"figure\",\r\n\t\"figcaption\",\r\n\t\"footer\",\r\n\t\"form\",\r\n\t\"h1\",\r\n\t\"h2\",\r\n\t\"h3\",\r\n\t\"h4\",\r\n\t\"h5\",\r\n\t\"h6\",\r\n\t\"head\",\r\n\t\"header\",\r\n\t\"hgroup\",\r\n\t\"hr\",\r\n\t\"html\",\r\n\t\"i\",\r\n\t\"img\",\r\n\t\"input\",\r\n\t\"ins\",\r\n\t\"kbd\",\r\n\t\"label\",\r\n\t\"legend\",\r\n\t\"li\",\r\n\t\"link\",\r\n\t\"main\",\r\n\t\"map\",\r\n\t\"mark\",\r\n\t\"math\",\r\n\t\"meter\",\r\n\t\"nav\",\r\n\t\"noscript\",\r\n\t\"object\",\r\n\t\"ol\",\r\n\t\"optgroup\",\r\n\t\"option\",\r\n\t\"output\",\r\n\t\"p\",\r\n\t\"param\",\r\n\t\"pre\",\r\n\t\"progress\",\r\n\t\"portal\",\r\n\t\"q\",\r\n\t\"ruby\",\r\n\t\"s\",\r\n\t\"section\",\r\n\t\"small\",\r\n\t\"span\",\r\n\t\"strike\",\r\n\t\"tt\",\r\n\t\"u\",\r\n\t\"var\",\r\n\t\"video\",\r\n\t\"wbr\",\r\n\t\"abbr\",\r\n\t\"area\",\r\n\t\"bdi\",\r\n\t\"blockquote\",\r\n\t\"body\",\r\n\t\"iframe\",\r\n\t\"menu\",\r\n\t\"meta\",\r\n\t\"picture\",\r\n\t\"rb\",\r\n\t\"rp\",\r\n\t\"rt\",\r\n\t\"rtc\",\r\n\t\"samp\",\r\n\t\"script\",\r\n\t\"select\",\r\n\t\"slot\",\r\n\t\"source\",\r\n\t\"strong\",\r\n\t\"style\",\r\n\t\"sub\",\r\n\t\"summary\",\r\n\t\"sup\",\r\n\t\"table\",\r\n\t\"tbody\",\r\n\t\"td\",\r\n\t\"template\",\r\n\t\"textarea\",\r\n\t\"tfoot\",\r\n\t\"th\",\r\n\t\"thead\",\r\n\t\"time\",\r\n\t\"title\",\r\n\t\"tr\",\r\n\t\"track\",\r\n\t\"ul\",\r\n])\r\n\r\n/**\r\n * @typedef {null | undefined | boolean | number | string | symbol | bigint} Primitive\r\n * \r\n * @typedef {{ [styleName: string]: Primitive | Primitive[] }\r\n * | Map<string, Primitive>\r\n * | Array<{ [styleName: string]: Primitive | Primitive[] } | Map<string, Primitive>>} AnimationStyles\r\n * \r\n * @typedef {{\r\n *    duration?: string | number,\r\n *    easing?: string,\r\n *    complete?: (..._: unknown[]) => unknown,\r\n *    step?: (..._: unknown[]) => unknown,\r\n *    progress?: (..._: unknown[]) => unknown,\r\n *    specialEasing?: AnimationStyles,\r\n *    start?: (..._: unknown[]) => unknown,\r\n *    done?: (..._: unknown[]) => unknown,\r\n *    fail?: (..._: unknown[]) => unknown,\r\n *    always?: (..._: unknown[]) => unknown\r\n * }} AnimationOptions\r\n * \r\n * @typedef {(styles: AnimationStyles, ...options: ([speed?: number | \"fast\" | \"slow\", easing?: string, callback?: (..._: unknown[]) => unknown]) | [option: AnimationOptions]) => Animation} AnimateFn\r\n * \r\n * @typedef {(arg0: [IntersectionObserverEntry, IntersectionObserver]) => unknown} ResolveFn\r\n * \r\n * @typedef {(reason?: unknown) => unknown} RejectFn\r\n * \r\n * @typedef {{\r\n *    type: new (...a: any) => JqNode,\r\n *    node1: JqNode,\r\n *    node2: JqNode,\r\n *    [UPDATED]: [string, ...Array<string | JqNode>][],\r\n *    [DELETED]: [string, ...Array<string | JqNode>][],\r\n *    [CREATED]: [string, ...Array<string | JqNode>][],\r\n *    [UNCHANGED]: [string, ...Array<string | JqNode>][],\r\n *    childDiffs: Diff[]\r\n * }} Diff\r\n * \r\n * @typedef {JqElement | JqAttribute | JqCSSProperty | JqCSSRule | JqAnimation | JqEvent | JqState | JqFragment | JqText | JqWatch | JqCondition | JqEach<any> | JqLifecycle | JqPromise<any>} JqNode\r\n * \r\n * @typedef {'0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F'} HexDigit\r\n * \r\n * @typedef {{\r\n *    childNodes: Array<JqElement | JqFragment | JqText>,\r\n *    attributes: JqAttribute[], events: JqEvent[],\r\n *    animations: JqAnimation[], inlineStyles: Array<JqCSSProperty>, blockStyles: Array<JqCSSRule>,\r\n *    watchers: JqWatch[], conditions: JqCondition[], iterators: JqEach<any>[], domNode?: HTMLElement\r\n * }} JqElementParameters\r\n * \r\n * @typedef {JqText | JqAttribute | JqElement | JqFragment} DiffableJqNode\r\n * \r\n * @typedef {JqList<JqState, typeof JqState> | JqEach<any> | JqEvent | JqCondition | Event | boolean | [any, number, Iterable<any>]} CallbackArg\r\n * \r\n * @typedef {{ object: JqNode, props: string[][] }} CompareProps\r\n * \r\n * @typedef {JqWatch | JqEvent | JqCondition | JqEach<any>} JqEffectNode\r\n */\r\n\r\n/**\r\n * @template T\r\n * @typedef {{\r\n *    pending: Array<{\r\n *       subscriber: JqElement | JqFragment,\r\n *       callback: (x: Promise<T>) => any,\r\n *    }>,\r\n *    resolved: Array<{\r\n *       subscriber: JqElement | JqFragment,\r\n *       callback: (x: T) => any,\r\n *    }>,\r\n *    rejected: Array<{\r\n *       subscriber: JqElement | JqFragment,\r\n *       callback: (x: any) => any,\r\n *    }>\r\n * }} JqPromiseSubscription\r\n */\r\n\r\n/**\r\n * @template {string} T\r\n * @typedef { T extends `#${HexDigit}${HexDigit}${HexDigit}${infer Rest1}`\r\n *    ? (\r\n *       Rest1 extends ``\r\n *          ? T\r\n *          : (\r\n *             Rest1 extends `${HexDigit}${HexDigit}${HexDigit}`\r\n *                ? T\r\n *                : never\r\n *           )\r\n *      )\r\n *    : never\r\n * } HexColor\r\n */","import {\r\n\tJqEvent, JqEach, getNodes, escapeHTMLEntities,\r\n\tstringify, JqAnimation, isPrimitive, JqState, JqElement,\r\n\tJqCSSProperty, JqFragment, JqText, JqCSSRule, JqList,\r\n\tJqAttribute, StateReference, JqNodeReference, validHTMLElements,\r\n\tcamelToKebab, JqCondition, JqLifecycle, JqPromise, JqWatch,\r\n} from \"./utility.js\"\r\n\r\n/**\r\n * @type {WeakMap<HTMLElement, HTMLStyleElement>}\r\n */\r\nconst scopedStyleSheets = new WeakMap()\r\nconst CustomElements = Symbol(\"CustomElements\")\r\n\r\n/**\r\n * @type {Natives}\r\n */\r\nexport const natives = new Proxy(/** @type {Natives & {[k: string | symbol]: any}} */({}), {\r\n\t/**\r\n\t * @param {string | symbol} prop\r\n\t * @returns {unknown | typeof globalize | ((...nodes: JqNode[]) => JqElement)}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[prop]\r\n\r\n\t\tif (prop == \"globalize\")\r\n\t\t\treturn globalize\r\n\r\n\t\treturn (/** @type {import(\"./utility.js\").JqNode[]} */...nodes) => new JqElement(prop, getNodes(nodes))\r\n\t}\r\n})\r\n\r\n/**\r\n * @param {{[k: string | symbol]: any}} [_globalThis] \r\n */\r\nfunction globalize(_globalThis) {\r\n\tvalidHTMLElements\r\n\t\t// @ts-ignore\r\n\t\t.forEach(element => (_globalThis ?? globalThis)[element] = natives[element])\r\n}\r\n\r\n/**\r\n * @type {(strs: string[] | string, ...values: unknown[]) => JqText}\r\n */\r\nconst text = new Proxy(_text, {})\r\n\r\nconst attr = /**@type {AttrFn & AttrProps}*/ (new Proxy(_attr, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(value: unknown) => JqAttribute}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[/**@type {keyof typeof target}*/ (prop)]\r\n\r\n\t\treturn (value) => createAttribute(prop, value)\r\n\t}\r\n}))\r\n\r\nexport const on = /**@type {OnFn & OnProps}*/ (new Proxy(_on, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(handler: (event?: Event, ...a: unknown[]) => unknown) => JqEvent}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[/**@type {keyof typeof target}*/ (prop)]\r\n\r\n\t\treturn (handler) => new JqEvent(prop, handler)\r\n\t}\r\n}))\r\n\r\nexport const css = /**@type {CSSFn & CSSProps}*/ (new Proxy(_css, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(value: import(\"./utility.js\").Primitive) => JqCSSProperty}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[/**@type {keyof typeof target}*/ (prop)]\r\n\r\n\t\treturn (value) => {\r\n\t\t\tconst jqCSSProperty = new JqCSSProperty(prop, value)\r\n\t\t\treturn jqCSSProperty\r\n\t\t}\r\n\t}\r\n}))\r\n\r\n/**\r\n * @param {string} name \r\n * @param {typeof HTMLElement} parent\r\n * @returns {(...nodes: import(\"./utility.js\").JqNode[]) => JqElement}\r\n */\r\nconst customizer = (name, parent = HTMLElement) => {\r\n\tif (customElements.get(name))\r\n\t\tthrow new TypeError(`JqError - custom element '${name}' was already defined`);\r\n\r\n\t_custom[CustomElements].push(name)\r\n\tconst _JqElement = Symbol(\"_JqElement\")\r\n\r\n\tconst node = class extends parent {\r\n\t\t/**\r\n\t\t * @type {JqElement | null}\r\n\t\t */\r\n\t\tstatic [_JqElement] = null\r\n\t\t/**\r\n\t\t * @param {string} name \r\n\t\t * @param {import(\"./utility.js\").JqNode[]} nodes \r\n\t\t */\r\n\t\tconstructor(name, nodes) {\r\n\t\t\tsuper()\r\n\t\t\tnode[_JqElement] = JqElement.custom(this, name, getNodes(nodes))\r\n\t\t}\r\n\t}\r\n\r\n\tcustomElements.define(name, node)\r\n\treturn (...nodes) => /**@type {JqElement}*/(new node(name, nodes), node[_JqElement])\r\n}\r\n\r\nconst _custom = Object.assign(customizer, { [CustomElements]: /** @type {string[]} */ ([]) })\r\n\r\n/**\r\n * @type {Customs} custom\r\n*/\r\nexport const custom = new Proxy(_custom, {\r\n\t/**\r\n\t * @param {string | symbol} prop\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[/**@type {keyof typeof target}*/ (prop)]\r\n\r\n\t\treturn target(camelToKebab(prop))\r\n\t}\r\n})\r\n\r\n/**\r\n * @param {string} name \r\n * @param {unknown} value \r\n * @returns {JqAttribute}\r\n */\r\nfunction createAttribute(name, value) {\r\n\tconst _value = isPrimitive(value) ? String(value) : stringify(value)\r\n\treturn new JqAttribute(name, _value)\r\n}\r\n\r\n/**\r\n * @param {{ [x: string]: import(\"./utility.js\").Primitive }} attrObj \r\n * @returns {JqList<JqAttribute, typeof JqAttribute>}\r\n */\r\nfunction _attr(attrObj) {\r\n\tconst attrList = JqAttribute.objectToJqAttributes(attrObj)\r\n\treturn attrList\r\n}\r\n\r\n/**\r\n * @param {unknown} value \r\n * @returns {JqText}\r\n */\r\nfunction createTextNode(value) {\r\n\tconst text = isPrimitive(value) ? String(value) : stringify(value)\r\n\treturn new JqText(text)\r\n}\r\n\r\n/**\r\n * @param {string[] | string} strs \r\n * @param  {unknown[]} values\r\n */\r\nfunction _text(strs, ...values) {\r\n\tlet _strs = strs\r\n\r\n\tif (Array.isArray(strs))\r\n\t\t_strs = escapeHTMLEntities(strs.reduce((acc, curr, i) =>\r\n\t\t\t\"\" + acc + (curr ?? \"\") + (stringify(values[i]) ?? \"\"), \"\"))\r\n\telse if (typeof _strs == \"string\")\r\n\t\t_strs = escapeHTMLEntities(_strs)\r\n\r\n\treturn createTextNode(_strs)\r\n}\r\n\r\n/**\r\n * @param {Array<JqElement | JqFragment | JqText>} _childNodes \r\n * @returns {JqFragment}\r\n */\r\nfunction fragment(..._childNodes) {\r\n\tconst { childNodes } = getNodes(_childNodes)\r\n\treturn new JqFragment(childNodes)\r\n}\r\n\r\n/**\r\n * @param  {Parameters<import(\"./utility.js\").AnimateFn>} parameters \r\n * @returns {JqAnimation}\r\n */\r\nexport function animate(...parameters) {\r\n\treturn new JqAnimation(...parameters)\r\n}\r\n\r\n/**\r\n * @param  {[string | { [x: string]: import(\"./utility.js\").Primitive }, ...string[]]} args\r\n */\r\nfunction _css(...args) {\r\n\r\n\tconst [ruleName, ...ruleArgs] = args\r\n\r\n\tif (args.length == 1 && !isPrimitive(ruleName)) {\r\n\t\tconst rule = new JqCSSRule([\":host\", ...ruleArgs],\r\n\t\t\t/**@type {{ [x: string]: import(\"./utility.js\").Primitive }}*/(ruleName))\r\n\t\treturn rule\r\n\t}\r\n\r\n\t/**\r\n\t * @type {(...styleNodes: JqCSSRule[]) => JqCSSRule}\r\n\t */\r\n\treturn (...styleNodes) => {\r\n\t\tconst rule = new JqCSSRule([/** @type {string} */ (ruleName), ...ruleArgs], ...styleNodes)\r\n\t\treturn rule\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {{ [x: string | symbol]: unknown }} initialState\r\n * @returns {JqState}\r\n */\r\nexport function state(initialState = {}) {\r\n\tif (isPrimitive(initialState))\r\n\t\tthrow new TypeError(\"JqError - Expected an object as a value to state(...)\")\r\n\r\n\tconst isArray = Array.isArray(initialState)\r\n\tconst stateObj = new JqState(initialState)\r\n\t\r\n\tconst stateProxy = new Proxy(stateObj, {\r\n\t\tget(target, prop) {\r\n\t\t\tif (prop == JqNodeReference)\r\n\t\t\t\treturn target\r\n\r\n\t\t\treturn target[StateReference][prop]\r\n\t\t},\r\n\t\tset(target, prop, value) {\r\n\t\t\ttarget[StateReference][prop] = value\r\n\t\t\tif(isArray && prop == \"length\") return true\r\n\r\n\t\t\tfor(const watcher of target.watchers) {\r\n\t\t\t\twatcher.reconcile()\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t},\r\n\t\thas(target, prop) {\r\n\t\t\treturn Reflect.has(target[StateReference], prop)\r\n\t\t},\r\n\t})\r\n\r\n\treturn stateProxy\r\n}\r\n\r\n/**\r\n * @param {JqState[]} _states\r\n * @returns {JqList<JqState, typeof JqState>}\r\n */\r\nexport function watch(..._states) {\r\n\tthrow new JqWatch(..._states)\r\n}\r\n\r\n/**\r\n * @param {boolean} condition\r\n */\r\nexport function when(condition) {\r\n\tthrow new JqCondition(condition)\r\n}\r\n\r\n/**\r\n * @param {string} eventName\r\n * @returns {JqEvent}\r\n */\r\nfunction _on(eventName) {\r\n\tthrow new JqEvent(eventName)\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {{[Symbol.iterator]: () => IterableIterator<T>, [x: string | symbol | number]: any}} iterable \r\n */\r\nexport function each(iterable) {\r\n\tthrow new JqEach(iterable)\r\n}\r\n\r\n/**\r\n * @returns {JqElement | JqFragment}\r\n */\r\nexport function mount() {\r\n\tthrow new JqLifecycle()\r\n}\r\n\r\n/**\r\n * @returns {JqElement | JqFragment}\r\n */\r\nexport function unmount() {\r\n\tthrow new JqLifecycle()\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {() => Promise<T>} promisedCallback \r\n */\r\nexport function wait(promisedCallback) {\r\n\treturn new JqPromise(promisedCallback)\r\n}\r\n\r\nexport const nodes = { attr, text, fragment }\r\nexport { pathSetter, getNodes } from \"./utility.js\"\r\n\r\n/**\r\n * @typedef {{ [name: string]: (...nodes: Array<import(\"./utility.js\").JqNode>) => JqElement }} NativeConstructor\r\n * \r\n * @typedef {{ globalize: (_globalThis?: {}) => void }} Globalizer\r\n * \r\n * @typedef {NativeConstructor & Globalizer} Natives\r\n * \r\n * @typedef {(name: string, parent?: typeof HTMLElement) => (...nodes: import(\"./utility.js\").JqNode[]) => JqElement} CustomConstructor\r\n * \r\n * @typedef {{[CustomElements]: string[]}} Customizer\r\n * \r\n * @typedef {CustomConstructor & Customizer} Customs\r\n * \r\n * @typedef {(attrObj: { [x: string]: import(\"./utility.js\").Primitive }) => JqList<JqAttribute, typeof JqAttribute>} AttrFn\r\n * \r\n * @typedef {{ [x: string]: JqAttribute }} AttrProps\r\n * \r\n * @typedef {(styleObj: { [x: string]: import(\"./utility.js\").Primitive }) => JqCSSRule} CSSFn\r\n * \r\n * @typedef {{ [x: string]: JqCSSProperty }} CSSProps\r\n * \r\n * @typedef {(eventName: string) => JqEvent} OnFn\r\n * \r\n * @typedef {{ [eventName: string | symbol]: (handler: (event?: Event, ...a: unknown[]) => unknown) => JqEvent }} OnProps\r\n */"],"names":["CREATED","Symbol","UPDATED","DELETED","UNCHANGED","StateReference","PromisePending","PromiseResolved","PromiseRejected","pathSetter","rootPath","relativePath","replace","isPrimitive","test","Object","isJqElement","xs","every","x","JqElement","isJqAttribute","JqAttribute","isJqFragment","JqFragment","isJqText","JqText","getJqNodeConstructors","JqCSSProperty","JqCSSRule","JqAnimation","JqEvent","JqWatch","JqEach","JqCondition","JqLifecycle","JqList","JqPromise","throwError","e","errorClass","Error","JqNodeReference","getNodes","nodes","childNodes","attributes","events","animations","watchers","conditions","iterators","lifecycles","promiseStates","inlineStyles","blockStyles","i","node","classifyNode","nodePosition","push","nodeClass","attribute","JqPromiseState","Array","isArray","_node","convertToJqNode","getCallbackArg","callback","isJqEffectNode","TypeError","value","jqParent","values","jqNodes","length","jqFragment","promisesStates","convertToJqFragment","jqText","convertToJqText","jqEffectNode","convertToJqEffectNode","some","X","getPropertyValue","object","props","result","isNullish","escapeHTMLEntities","text","replacer","t","DOMParser","parseFromString","documentElement","textContent","stringify","String","JSON","state","jqPromise","constructor","this","subscriptions","pending","resolved","rejected","promise","invoke","forEach","sub","then","catch","subscribe","subscription","subscriber","type","iterable","_","returned","results","item","condition","event","attachHandler","element","addEventListener","detachHandler","removeEventListener","attachTo","HTMLElement","includes","jqStates","map","jqState","reconcile","oldNode","newNode","extractEffectReturn","_diff","diff","static","node1","node2","updatedChanges","createdChanges","deletedChanges","firstProp","nestedProps","updateText","updateAttribute","updateElement","createFragment","createElement","deleteJqFragmentChild","deleteJqElementChild","delete","deleteSelf","childDiffs","_node1","_node2","update","setAttribute","setText","replaceChild","_childNode","childNode","splice","JqState","domAnimation","parameters","animate","_styles","_options","_moreOptions","options","speed","easing","_callback","option","duration","fill","__styles","Map","fromEntries","styles","setInitialStyles","keys","filter","styleName","finalStyleValue","getComputedStyle","name","camelToKebab","style","setProperty","toString","indent","head","body","ruleName","ruleArgs","styleNodes","errorMessage","join","trim","flatMap","styleNode","styleObject","styleProperties","entries","key","createPropertyListFromStyleObject","space","repeat","pop","iterator","_name","_value","attrNode","attrName","attrValue","initial","createNode","setAttributeNode","context","jqAttribute","document","createAttribute","jqElement","removeAttribute","attrObj","attrList","domNode","primitives","primitive","alterDomNode","appendChild","shadowRoot","createTextNode","updateNode","nodeValue","delChildIdx","findIndex","is","remove","attachNode","attachChildren","ancestor","createDocumentFragment","cloneNode","jqEffectNodes","jqNode","maxLength","Math","max","_jqEffectNodes","Boolean","getEffectNodes","attachEffectNodes","getPrecedingEffectNodes","effectNodes","effectNode","_jqState","watcher","precedingJqEffectNodes","effectNodePos","oldChildNode","newChildNode","scopedStyleSheet","assign","attachStyles","attachAttributes","attachEventListeners","attachAnimations","hasElmStartIndent","emptyTagSelfClosure","childMarkup","selfAttrs","selfCallbacks","selfMarkupHead","selfMarkupTail","jqEvent","IntersectionObserver","observer","entry","observerCallback","isIntersecting","animation","disconnect","observe","attachShadow","mode","canHaveShadow","styleSheet","stylePropertiesStr","indexOfAttr","indexOf","isInvokableEffectNode","str","$","ofs","toLowerCase","nodeComparison","firstElemChildren","secondElemChildren","firstElemAttributes","secondElemAttributes","getPrototypeOf","firstElemChild","secondElemChild","undefined","firstElemAttribute","secondElemAttribute","compareJqElements","firstFragChildren","secondFragChildren","firstFragChild","secondFragChild","compareJqFragments","jqAttribute1","jqAttribute2","compareProps","compareJqAttributes","affected1","affected2","compareJqTexts","isNode1","isNode2","compareJqGenericNodes","compareJqNodes","deletedProps","prop","createdProps","updatedProps","unchangedProps","validHTMLElements","CustomElements","natives","Proxy","get","target","globalize","_globalThis","globalThis","strs","_strs","reduce","acc","curr","attr","objectToJqAttributes","on","eventName","handler","css","args","_custom","parent","customElements","_JqElement","super","custom","define","initialState","stateObj","set","has","Reflect","watch","_states","when","each","mount","unmount","wait","promisedCallback","fragment","_childNodes"],"mappings":"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MAAMzL,EAAO,CACZxB,KAAMxG,OAAOwS,eAAegB,EAAUhP,QAAQiB,YAC9CyC,MAAOsL,EAAUhP,OACjB2D,MAAOsL,EAAUjP,OACjBvF,CAACA,GAAU,GACXE,CAACA,GAAU,GACXC,CAACA,GAAU,GACXC,CAACA,GAAY,GACb6J,WAAY,IAGP6K,EAAeP,EAAU/O,MAAMuG,QAAOgJ,GAC3CrP,EAAUJ,EAAkCkP,EAAgB,OAAGO,MAEhEhM,EAAK5I,GAAQ,EAEb,MAAM6U,EAAeR,EAAUhP,MAAMuG,QAAOgJ,GAC3CrP,EAAUJ,EAAkCiP,EAAgB,OAAGQ,MAEhEhM,EAAK/I,GAAQ,EAEb,MAAMiV,EAAeV,EAAU/O,MAAMuG,QAAOgJ,GAC3CzP,EAAkCkP,EAAgB,OAAGO,KACrDzP,EAAkCiP,EAAgB,OAAGQ,KAEtDhM,EAAK7I,GAAQ,EAEb,MAAMgV,EAAiBX,EAAU/O,MAAMuG,QAAOgJ,GAC7CzP,EAAkCkP,EAAgB,OAAGO,KACrDzP,EAAkCiP,EAAgB,OAAGQ,KAItD,OAFAhM,EAAK3I,GAAU,EAER2I,CACP,CAmLF,CAEO,MAAMoM,EAAwC,CACpD,IACA,UACA,UACA,QACA,QACA,IACA,OACA,MACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,SACA,aACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,MACA,WACA,SACA,IACA,OACA,IACA,UACA,QACA,OACA,SACA,KACA,IACA,MACA,QACA,MACA,OACA,OACA,MACA,aACA,OACA,SACA,OACA,OACA,UACA,KACA,KACA,KACA,MACA,OACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,K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"}
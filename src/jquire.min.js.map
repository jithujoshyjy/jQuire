{"version":3,"file":"jquire.min.js","sources":["utility.js","jquire.js"],"sourcesContent":["\r\n/**\r\n * \r\n * @param {string} rootPath \r\n * @returns {(relativePath: string) => string}\r\n */\r\nexport function pathSetter(rootPath) {\r\n\treturn function (relativePath) {\r\n\t\treturn rootPath.replace(/\\/\\s*$/, '') + '/' +\r\n\t\t\trelativePath.replace(/^(?:\\s*\\.)?\\s*\\//, '');\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {unknown} test\r\n */\r\nexport function isPrimitive(test) {\r\n\treturn test !== Object(test);\r\n}\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nconst isJqElement = (...xs) => xs.every(x => x instanceof JqElement)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nconst isJqAttribute = (...xs) => xs.every(x => x instanceof JqAttribute)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nconst isJqFragment = (...xs) => xs.every(x => x instanceof JqFragment)\r\n\r\n/**\r\n * @param  {any[]} xs\r\n */\r\nconst isJqText = (...xs) => xs.every(x => x instanceof JqText)\r\n\r\nconst CREATED = Symbol(\"created\")\r\nconst UPDATED = Symbol(\"updated\")\r\nconst DELETED = Symbol(\"deleted\")\r\nconst UNCHANGED = Symbol(\"unchanged\")\r\n\r\nconst getJqNodeConstructors = () => [JqElement, JqAttribute, JqCSSProperty, JqCSSRule, JqAnimation, JqEvent, JqReference, JqFragment, JqText]\r\n\r\n/**\r\n * @param {string} e \r\n */\r\nexport const throwError = (e) => { throw new Error(e) }\r\nexport const JqNodeReference = Symbol(\"JqNodeReference\")\r\n\r\n/**\r\n * \r\n * @param {Array<JqNode | Primitive>} nodes \r\n * @returns {{\r\n *\t\tchildNodes: Array<JqElement | JqFragment | JqText>,\r\n *\t\tattributes: JqAttribute[],\r\n *\t\tevents: JqEvent[], references: JqReference[],\r\n *\t\tanimations: JqAnimation[], inlineStyles: JqCSSProperty[],\r\n *\t\tblockStyles: JqCSSRule[], callbacks: JqCallback[]\r\n * }}\r\n */\r\nexport function getNodes(nodes) {\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tconst childNodes = []\r\n\r\n\t/**\r\n\t * @type {JqAttribute[]}\r\n\t */\r\n\tconst attributes = []\r\n\r\n\t/**\r\n\t * @type {JqEvent[]}\r\n\t */\r\n\tconst events = []\r\n\r\n\t/**\r\n\t * @type {JqReference[]}\r\n\t */\r\n\tconst references = []\r\n\r\n\t/**\r\n\t * @type {JqAnimation[]}\r\n\t */\r\n\tconst animations = []\r\n\r\n\t/**\r\n\t * @type {JqCallback[]}\r\n\t */\r\n\tconst callbacks = []\r\n\r\n\t/**\r\n\t * @type {JqCSSProperty[]}\r\n\t */\r\n\tconst inlineStyles = []\r\n\r\n\t/**\r\n\t * @type {JqCSSRule[]}\r\n\t */\r\n\tconst blockStyles = []\r\n\tconst childNodeClasses = [JqElement, JqFragment, JqText]\r\n\r\n\tfor (const [i, node] of nodes.entries()) {\r\n\t\tif (childNodeClasses.some(childNodeClass => node instanceof childNodeClass)) {\r\n\t\t\tconst _node = /**@type {JqElement | JqFragment | JqText}*/ (node)\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tchildNodes.push(_node)\r\n\t\t}\r\n\t\telse if (node instanceof JqAttribute) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tattributes.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqList && node.nodeClass === JqAttribute) {\r\n\t\t\tnode.nodes.forEach((/**@type {JqAttribute}*/ attribute) => {\r\n\t\t\t\tattribute.nodePosition = i\r\n\t\t\t\tattributes.push(attribute)\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (node instanceof JqEvent) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tevents.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqReference) {\r\n\t\t\tconst _node = node[JqNodeReference]\r\n\t\t\t_node.nodePosition = i\r\n\t\t\treferences.push(_node)\r\n\t\t}\r\n\t\telse if (node instanceof JqAnimation) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tanimations.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqCSSProperty) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tinlineStyles.push(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqCSSRule) {\r\n\t\t\tnode.nodePosition = i\r\n\t\t\tblockStyles.push(node)\r\n\t\t}\r\n\t\telse if (Array.isArray(node)) {\r\n\t\t\tconst _node = /**@type {JqFragment}*/ (convertToJqNode(node, null))\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tchildNodes.push(_node)\r\n\t\t}\r\n\t\telse if (typeof node == \"function\") {\r\n\t\t\tconst _node = /**@type {JqCallback}*/ (convertToJqNode(node, null))\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tcallbacks.push(_node)\r\n\t\t}\r\n\t\telse if (isPrimitive(node)) {\r\n\t\t\tconst _node = /**@type {JqText}*/ (convertToJqNode(node, null))\r\n\t\t\t_node.nodePosition = i\r\n\t\t\tchildNodes.push(_node)\r\n\t\t}\r\n\t}\r\n\r\n\treturn /**@type {const}*/ ({\r\n\t\tchildNodes, attributes,\r\n\t\tevents, references,\r\n\t\tanimations, inlineStyles,\r\n\t\tblockStyles, callbacks\r\n\t})\r\n}\r\n\r\n/**\r\n * @param {any} value \r\n * @param {JqFragment | JqElement | null} jqNode \r\n * @returns {JqText | JqFragment | JqCallback}\r\n */\r\nexport function convertToJqNode(value, jqNode) {\r\n\t/**\r\n\t * @param {Primitive | Primitive[]} value\r\n\t */\r\n\tconst convertToJqText = (value) => {\r\n\t\tconst jqText = new JqText(/**@type {Primitive}*/ (value) ?? '')\r\n\t\tjqText.jqParent = jqNode\r\n\t\treturn jqText\r\n\t}\r\n\r\n\t/**\r\n\t * @param {(...a: any[]) => any} value\r\n\t */\r\n\tconst convertToJqCallback = (value) => {\r\n\t\tconst jqCallback = new JqCallback(value)\r\n\t\tjqCallback.jqParent = /**@type {any}*/ (jqNode)\r\n\t\treturn jqCallback\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Primitive[]} value\r\n\t */\r\n\tconst convertToJqFragment = (value) => {\r\n\t\tconst childNodes = value.map(x => /**@type {JqFragment | JqText}*/ (convertToJqNode(x, null)))\r\n\t\tconst jqFragment = new JqFragment(childNodes)\r\n\r\n\t\tchildNodes.forEach((childNode, i) => {\r\n\t\t\tchildNode.jqParent = jqFragment\r\n\t\t\tchildNode.nodePosition = i\r\n\t\t})\r\n\r\n\t\tjqFragment.jqParent = jqNode\r\n\t\treturn jqFragment\r\n\t}\r\n\r\n\tif (Array.isArray(value))\r\n\t\treturn convertToJqFragment(value)\r\n\tif (isPrimitive(value))\r\n\t\treturn convertToJqText(value)\r\n\tif (typeof value == \"function\")\r\n\t\treturn convertToJqCallback(value)\r\n\r\n\tif (getJqNodeConstructors().some(ctor => value instanceof ctor))\r\n\t\treturn /**@type {JqText | JqFragment | JqCallback}*/ (value)\r\n\r\n\treturn throwError(`JqError - Unexpected value found in place of a JqNode`)\r\n}\r\n\r\n/**\r\n * @param {{[x: string | symbol | number]: unknown}} object \r\n * @param {string[]} props \r\n * @returns {Primitive | { [x: string | symbol]: any }}\r\n */\r\nconst getPropertyValue = (object, props) => {\r\n\tlet result = object\r\n\tfor (let i = 0; i < props.length; i++) {\r\n\t\tresult = /**@type {any}*/ (result?.[props[i]])\r\n\t\tif (isNullish(result)) return result\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @returns {string}\r\n */\r\nexport function escapeHTMLEntities(text) {\r\n\tconst entityRegex1 = /(&#x[0-9A-F]{2,6};)/gi\r\n\tconst entityRegex2 = /(&[a-z0-9]+;)/gi\r\n\r\n\t/**\r\n\t * @param {string} t \r\n\t * @param {string} e \r\n\t * @returns \r\n\t */\r\n\tconst replacer = (t, e) =>\r\n\t\tnew DOMParser().parseFromString(e, \"text/html\").documentElement.textContent ?? ''\r\n\r\n\tconst _text = text.replace(entityRegex1, replacer)\r\n\t\t.replace(entityRegex2, replacer)\r\n\r\n\treturn _text\r\n}\r\n\r\n/**\r\n * @param {unknown} value\r\n */\r\nexport function stringify(value) {\r\n\treturn isPrimitive(value) ? String(value ?? '') : JSON.stringify(value)\r\n}\r\n\r\n/**\r\n * @param  {unknown[]} values\r\n */\r\nexport function isNullish(...values) {\r\n\treturn values.every(x => x === null || x === undefined)\r\n}\r\n\r\n/**\r\n * @typedef {JqText | JqAttribute | JqElement | JqFragment} DiffableJqNode\r\n */\r\nexport class JqCallback {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {JqNode | null}\r\n\t */\r\n\treturned = null\r\n\t/**\r\n\t * @param {{ [x: string | symbol]: unknown }} _ \r\n\t * @returns {JqNode | Primitive}\r\n\t */\r\n\tcallback = (_) => null\r\n\r\n\trefProxy = new Proxy({ context: this }, {\r\n\t\tget(target, prop) {\r\n\t\t\treturn target.context.jqParent?.getStateRefValue(prop)\r\n\t\t},\r\n\t\tset(target, prop, value) {\r\n\t\t\ttarget.context.jqParent?.setStateRefValue(prop, value)\r\n\t\t\treturn true\r\n\t\t}\r\n\t})\r\n\r\n\t/**\r\n\t * @param {(a: { [x: string | symbol]: unknown }) => JqNode | Primitive} callback \r\n\t */\r\n\tconstructor(callback) {\r\n\t\tthis.callback = callback\r\n\t}\r\n\r\n\tinvoke() {\r\n\t\tconst returned = this.callback(this.refProxy)\r\n\t\tconst node = /**@type {JqNode}*/ (Array.isArray(returned) || isPrimitive(returned)\r\n\t\t\t? convertToJqNode(returned, this.jqParent)\r\n\t\t\t: returned)\r\n\r\n\t\tnode.nodePosition = this.nodePosition\r\n\t\tnode.jqParent = this.jqParent\r\n\r\n\t\treturn node\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tconst childNode = this.invoke()\r\n\t\t\tchildNode.attachTo(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tthis.returned = this.invoke()\r\n\t\t\tthis.returned.attachTo(node)\r\n\r\n\t\t\tlet retNodeInsertPos = node.childNodes\r\n\t\t\t\t.findIndex(childNode => this.nodePosition == childNode.nodePosition)\r\n\r\n\t\t\tretNodeInsertPos = retNodeInsertPos == -1 ? (node.childNodes.length || 1) - 1 : retNodeInsertPos\r\n\t\t\tnode.childNodes.splice(retNodeInsertPos, 0, /**@type {JqElement | JqFragment | JqText}*/ (this.returned))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqCallback to a node not of instance JqElement or JqText or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 0) {\r\n\t\treturn this.returned?.toString(indent) ?? ''\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateCallback() {\r\n\t\t\tconst jqCallback = this.context\r\n\t\t\tif (jqCallback.returned === null) return this\r\n\r\n\t\t\tconst oldNode = jqCallback.returned\r\n\t\t\tconst newNode = jqCallback.invoke()\r\n\t\t\tconst rootNode = oldNode, parentNode = oldNode\r\n\r\n\t\t\treconcile(rootNode, parentNode, oldNode, newNode)\r\n\t\t\treturn this\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {JqNode} rootNode \r\n\t\t\t * @param {JqNode} parentNode \r\n\t\t\t * @param {JqNode} oldNode \r\n\t\t\t * @param {JqNode} newNode \r\n\t\t\t */\r\n\t\t\tfunction reconcile(rootNode, parentNode, oldNode, newNode) {\r\n\t\t\t\tconst _diff = diff(oldNode, newNode)\r\n\r\n\t\t\t\tconst node1 = _diff.node1\r\n\t\t\t\tconst node2 = _diff.node2\r\n\r\n\t\t\t\tconst updatedChanges = _diff[UPDATED]\r\n\t\t\t\tconst createdChanges = _diff[CREATED]\r\n\t\t\t\tconst deletedChanges = _diff[DELETED]\r\n\r\n\t\t\t\tfor (const [firstProp, ...nestedProps] of updatedChanges) {\r\n\t\t\t\t\tif (isJqText(node1, node2)) {\r\n\t\t\t\t\t\tif (firstProp == \"text\")\r\n\t\t\t\t\t\t\tupdateText(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqAttribute(node1, node2)) {\r\n\t\t\t\t\t\tif (firstProp == \"value\")\r\n\t\t\t\t\t\t\tupdateAttribute(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (!isNullish(node1) && !isNullish(node2)) {\r\n\t\t\t\t\t\tupdateElement(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t\tjqCallback.returned = node2\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const [firstProp, ...nestedProps] of createdChanges) {\r\n\t\t\t\t\tif (isJqText(node1, node2)) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqAttribute(node1, node2)) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqFragment(node1, node2)) {\r\n\t\t\t\t\t\tif (firstProp == \"childNodes\")\r\n\t\t\t\t\t\t\tcreateFragment(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqElement(node1, node2)) {\r\n\t\t\t\t\t\tif (firstProp == \"childNodes\")\r\n\t\t\t\t\t\t\tcreateElement(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const [firstProp, ...nestedProps] of deletedChanges) {\r\n\t\t\t\t\tif (isJqFragment(node1, node2)) {\r\n\t\t\t\t\t\tdeleteJqFragmentChild(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isJqElement(node1, node2)) {\r\n\t\t\t\t\t\tdeleteJqElementChild(_diff, [firstProp, ...nestedProps])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t/**@type {DiffableJqNode}*/(node1).delete.deleteSelf()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const childDiff of _diff.childDiffs)\r\n\t\t\t\t\treconcile(rootNode, _diff.node1, childDiff.node1, childDiff.node2)\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} props\r\n\t\t\t */\r\n\t\t\tfunction updateAttribute(diff, props) {\r\n\t\t\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqAttribute))\r\n\t\t\t\t\treturn this\r\n\t\t\t\tconst _node1 = /**@type {JqAttribute}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqAttribute}*/ (diff.node2)\r\n\t\t\t\treturn _node1.update.setAttribute(_node2.value)\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} props\r\n\t\t\t */\r\n\t\t\tfunction updateText(diff, props) {\r\n\t\t\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqText))\r\n\t\t\t\t\treturn this\r\n\t\t\t\tconst _node1 = /**@type {JqText}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqText}*/ (diff.node2)\r\n\t\t\t\t_node1.update.setText(_node2.text)\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} props \r\n\t\t\t */\r\n\t\t\tfunction updateElement(diff, props) {\r\n\t\t\t\tconst _node1 = /**@type {JqElement | JqFragment | JqText}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqElement | JqFragment | JqText}*/ (diff.node2)\r\n\t\t\t\tconst _node1Parent = /**@type {JqElement | JqFragment}*/ (diff.node1.jqParent)\r\n\r\n\t\t\t\t_node2 instanceof JqText ? _node2.initial.createNode() : _node2.attachTo(null)\r\n\t\t\t\t_node1Parent.update.replaceChild(_node1, _node2)\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} param2\r\n\t\t\t */\r\n\t\t\tfunction createElement(diff, [firstProp, _childNode]) {\r\n\t\t\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqElement))\r\n\t\t\t\t\treturn this\r\n\r\n\t\t\t\tconst _node1 = /**@type {JqElement}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqElement}*/ (diff.node2)\r\n\t\t\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\r\n\t\t\t\tchildNode.jqParent = _node1.jqParent\r\n\t\t\t\tchildNode.nodePosition = _node1.childNodes.length\r\n\r\n\t\t\t\t_node1.childNodes.splice(_node1.childNodes.length, 0, childNode)\r\n\t\t\t\tchildNode.attachTo(_node1)\r\n\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} param2\r\n\t\t\t */\r\n\t\t\tfunction createFragment(diff, [firstProp, _childNode]) {\r\n\t\t\t\tif (![diff.node1, diff.node2].every(node => node instanceof JqFragment))\r\n\t\t\t\t\treturn this\r\n\r\n\t\t\t\tconst _node1 = /**@type {JqFragment}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqFragment}*/ (diff.node2)\r\n\t\t\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\r\n\t\t\t\tchildNode.jqParent = _node1.jqParent\r\n\t\t\t\tchildNode.nodePosition = _node1.childNodes.length\r\n\r\n\t\t\t\t_node1.childNodes.splice(_node1.childNodes.length, 0, childNode)\r\n\t\t\t\tchildNode.attachTo(_node1)\r\n\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} param2 \r\n\t\t\t */\r\n\t\t\tfunction deleteJqFragmentChild(diff, [firstProp, _childNode]) {\r\n\t\t\t\tconst _node1 = /**@type {JqFragment}*/(diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqFragment}*/ (diff.node2)\r\n\r\n\t\t\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/(_childNode)\r\n\t\t\t\tchildNode.delete.deleteSelf()\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Diff} diff \r\n\t\t\t * @param {[string, ...Array<string | JqNode>]} param2 \r\n\t\t\t */\r\n\t\t\tfunction deleteJqElementChild(diff, [firstProp, _childNode]) {\r\n\t\t\t\tconst _node1 = /**@type {JqElement}*/ (diff.node1)\r\n\t\t\t\tconst _node2 = /**@type {JqElement}*/ (diff.node2)\r\n\r\n\t\t\t\tconst childNode = /**@type {JqElement | JqFragment | JqText}*/ (_childNode)\r\n\t\t\t\tchildNode.delete.deleteSelf()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class JqEvent {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tevent\r\n\r\n\t/**\r\n\t * @param {Event} [_]\r\n\t * @param {unknown[]} a\r\n\t * @returns {void}\r\n\t */\r\n\thandler = (_, ...a) => { }\r\n\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} event\r\n\t * @param {(event?: Event, ...a: unknown[]) => void} handler \r\n\t */\r\n\tconstructor(event, handler) {\r\n\t\tthis.event = event\r\n\t\tthis.handler = handler\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t */\r\n\tattachHandler(element) {\r\n\t\telement.addEventListener(this.event, this.handler)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t */\r\n\tdetachHandler(element) {\r\n\t\telement.removeEventListener(this.event, this.handler)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tthis.attachHandler(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.attachHandler(/**@type {HTMLElement}*/ (node.htmlNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqEvent '${this.event}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\nexport const ElementReference = Symbol(\"ElementReference\")\r\nexport const StateReference = Symbol(\"StateReference\")\r\n\r\nexport class JqReference {\r\n\t/**\r\n\t * @type {any}\r\n\t */\r\n\t[JqNodeReference];\r\n\t/**\r\n\t * @type {{ [x: string | symbol]: unknown }}\r\n\t */\r\n\t[StateReference];\r\n\t/**\r\n\t * @type {HTMLElement | null}\r\n\t */\r\n\t[ElementReference] = null;\r\n\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {{ [x: string | symbol]: unknown }} state \r\n\t */\r\n\tconstructor(state = {}) {\r\n\t\tthis[StateReference] = state\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo = (node) => {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tthis[ElementReference] = node\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tthis[ElementReference] = node.htmlNode\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqReference to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {HTMLElement | null}\r\n\t */\r\n\tderef = () => {\r\n\t\treturn this[ElementReference]\r\n\t}\r\n\r\n\t/**\r\n\t * @param {(x: { [x: string | symbol]: unknown }, ...a: any[]) => any} callback\r\n\t */\r\n\trefresh = async (callback) => {\r\n\t\tconst result = await callback(this[StateReference])\r\n\t\t/**@type {JqElement}*/ (this.jqParent).update.updateNode()\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\nexport class JqAnimation {\r\n\t/**\r\n\t * @type {Animation | null}\r\n\t */\r\n\tdomAnimation = null\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {Parameters<AnimateFn>}\r\n\t */\r\n\t#parameters\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * \r\n\t * @param  {Parameters<AnimateFn>} parameters \r\n\t */\r\n\tconstructor(...parameters) {\r\n\t\tthis.#parameters = parameters\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tthis.animate(node)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t\tthis.animate(/**@type {HTMLElement}*/ (node.htmlNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqAnimation to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} element \r\n\t * @returns {ReturnType<AnimateFn>}\r\n\t */\r\n\tanimate(element) {\r\n\r\n\t\tconst [_styles, _options, ..._moreOptions] = this.#parameters\r\n\r\n\t\t/**\r\n\t\t * @param {{ [styleName: string]: Primitive | Primitive[] }} styles \r\n\t\t * @param  {unknown[]} _ \r\n\t\t * @returns \r\n\t\t */\r\n\t\tconst setStartStyles = (styles, ..._) => {\r\n\t\t\tconst styleNames = Object.keys(styles).filter(styleName => !Array.isArray(styles[styleName]))\r\n\t\t\tconst _styles = styleNames.map(styleName => {\r\n\t\t\t\tconst finalStyleValue = /**@type {Primitive}*/ (styles[styleName])\r\n\t\t\t\tconst initialStyleValue = getComputedStyle(element).getPropertyValue(styleName)\r\n\r\n\t\t\t\treturn [styleName, [initialStyleValue, finalStyleValue]]\r\n\t\t\t})\r\n\r\n\t\t\tconst x = { ...styles, ...Object.fromEntries(_styles) }\r\n\t\t\treturn x\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {((..._: unknown[]) => unknown) | null}\r\n\t\t */\r\n\t\tlet callback = null\r\n\t\tlet options = /**@type {Parameters<Element[\"animate\"]>[1]}*/ (isPrimitive(_options) ? null : _options)\r\n\r\n\t\toptions ??= (() => {\r\n\t\t\tconst [speed, easing, _callback] = [_options, ..._moreOptions]\r\n\t\t\tif (_callback) callback = _callback\r\n\t\t\tconst option = {\r\n\t\t\t\tduration: speed ?? 400,\r\n\t\t\t\teasing: easing ?? \"linear\",\r\n\t\t\t\tfill: \"forwards\"\r\n\t\t\t}\r\n\t\t\treturn /**@type {Parameters<Element[\"animate\"]>[1]}*/ (option)\r\n\t\t})()\r\n\r\n\t\tconst __styles = (Array.isArray(_styles)\r\n\t\t\t? _styles.map(x => x instanceof Map ? Object.fromEntries(x) : x)\r\n\t\t\t: _styles instanceof Map ? Object.fromEntries(_styles) : _styles)\r\n\r\n\t\tconst styles = /**@type {Parameters<Element[\"animate\"]>[0]}*/ (Array.isArray(__styles)\r\n\t\t\t? __styles.map(setStartStyles)\r\n\t\t\t: setStartStyles(__styles))\r\n\r\n\t\tthis.domAnimation = element.animate(styles, options)\r\n\t\tcallback && this.domAnimation.addEventListener(\"finish\", callback)\r\n\r\n\t\treturn this.domAnimation\r\n\t}\r\n}\r\n\r\nexport class JqCSSProperty {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tname\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tvalue\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {unknown} value \r\n\t */\r\n\tconstructor(name, value) {\r\n\t\tthis.name = camelToKebab(name).replace(/_/g, '-')\r\n\t\tthis.value = String(value)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tnode.style.setProperty(this.name, this.value)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqCSS.Property to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 1) {\r\n\t\treturn `${this.name}: ${this.value};`\r\n\t}\r\n}\r\n\r\nexport class JqCSSRule {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {[string, ...string[]]}\r\n\t */\r\n\thead\r\n\t/**\r\n\t * @type {Array<JqCSSProperty | JqCSSRule>}\r\n\t */\r\n\tbody = []\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {[string, ...string[]]} param0 \r\n\t * @param  {(Array<JqCSSProperty | JqCSSRule> | { [x: string]: Primitive }[])} styleNodes \r\n\t */\r\n\tconstructor([ruleName, ...ruleArgs], ...styleNodes) {\r\n\r\n\t\tthis.head = [ruleName, ...ruleArgs]\r\n\r\n\t\tconst errorMessage = `JqError - Invalid argument passed to ${this.head.join(' ').trim()}(...)`\r\n\t\tthis.body = styleNodes.flatMap(styleNode =>\r\n\t\t\tstyleNode instanceof JqCSSProperty || styleNode instanceof JqCSSRule\r\n\t\t\t\t? styleNode\r\n\t\t\t\t: createPropertyListFromStyleObject(errorMessage, styleNode).nodes\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\t// node.style.setProperty(this.name, this.value)\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqCSS.Rule to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 1) {\r\n\t\tconst space = '\\t'.repeat(indent)\r\n\t\tlet head = this.head.join(' ').trim()\r\n\t\treturn `${head} {\\n${space}${this.body.map(styleNode => styleNode.toString(indent + 1)).join('\\n' + space)}\\n${'\\t'.repeat(indent - 1)}}`\r\n\t}\r\n}\r\n\r\nexport class JqAttribute {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\t#name = ''\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\t#value = ''\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {Attr | null}\r\n\t */\r\n\tattrNode = null\r\n\t/**\r\n\t * @type {JqElement | null}\r\n\t */\r\n\tjqParent = null\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {string} value \r\n\t */\r\n\tconstructor(name, value) {\r\n\t\tthis.name = camelToKebab(name).replace(/_/g, '-')\r\n\t\tthis.value = value\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn this.#name\r\n\t}\r\n\t/**\r\n\t * @param {string} attrName\r\n\t */\r\n\tset name(attrName) {\r\n\t\tthis.#name = attrName\r\n\t}\r\n\tget value() {\r\n\t\treturn this.#value\r\n\t}\r\n\t/**\r\n\t * @param {string} attrValue\r\n\t */\r\n\tset value(attrValue) {\r\n\t\tthis.#value = attrValue\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tthis.initial.createNode()\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tnode.setAttributeNode(/**@type {Attr}*/ (this.attrNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node;\r\n\t\t\t/**@type {HTMLElement}*/ (node.htmlNode).setAttributeNode(/**@type {Attr}*/ (this.attrNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqAttribute '${this.name}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ [x: string]: Primitive }} attrObj\r\n\t */\r\n\tstatic objectToJqAttributes(attrObj) {\r\n\t\tconst errorMessage = `JqError - Invalid argument passed to attr(...)`\r\n\r\n\t\tif (attrObj === null || typeof attrObj !== \"object\")\r\n\t\t\tthrow new Error(errorMessage)\r\n\r\n\t\tconst attrList = Object.entries(attrObj)\r\n\t\t\t.map(([key, value]) => {\r\n\t\t\t\tconst _name = camelToKebab(key).replace(/_/g, '-')\r\n\t\t\t\tconst _value = String(value)\r\n\r\n\t\t\t\tconst attribute = new JqAttribute(_name, _value)\r\n\t\t\t\treturn attribute\r\n\t\t\t})\r\n\r\n\t\treturn new JqList(JqAttribute, attrList)\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tjqAttribute.attrNode = document.createAttribute(jqAttribute.name)\r\n\t\t\tjqAttribute.attrNode.value = jqAttribute.value\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateAttribute() {\r\n\t\t\tconst jqAttribute = this.context;\r\n\t\t\t/**@type {Attr}*/ (jqAttribute.attrNode).value = jqAttribute.value\r\n\t\t\treturn this\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {string} value\r\n\t\t */\r\n\t\tsetAttribute(value) {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tif (value === jqAttribute.value) return this\r\n\r\n\t\t\tjqAttribute.value = value;\r\n\t\t\t/**@type {Attr}*/ (jqAttribute.attrNode).value = value\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqAttribute = this.context\r\n\t\t\tconst jqElement = jqAttribute.jqParent\r\n\r\n\t\t\tif (!jqElement) return this\r\n\t\t\tjqElement.delete.removeAttribute(jqAttribute)\r\n\r\n\t\t\tjqAttribute.attrNode = null\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tstatic List = {\r\n\t\t/**\r\n\t\t * @param {{ [x: string]: Primitive }} attrObject\r\n\t\t */\r\n\t\tfrom(attrObject) {\r\n\r\n\t\t\tif (attrObject === null || typeof attrObject !== \"object\")\r\n\t\t\t\tthrow new Error(`JqError - Invalid argument passed to attr(...); expected an object.`)\r\n\r\n\r\n\t\t\tconst attributes = Object.entries(attrObject)\r\n\t\t\t\t.map(([key, value]) => {\r\n\t\t\t\t\tconst _name = camelToKebab(key).replace(/_/g, '-')\r\n\t\t\t\t\tconst _value = String(value)\r\n\r\n\t\t\t\t\tconst attribute = new JqAttribute(_name, _value)\r\n\t\t\t\t\treturn attribute\r\n\t\t\t\t})\r\n\r\n\t\t\treturn new JqList(JqAttribute, attributes)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class JqFragment {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {Node | null}\r\n\t */\r\n\thtmlNode = null\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tchildNodes = []\r\n\r\n\t/**\r\n\t * @param {Array<JqElement | JqFragment | JqText>} childNodes \r\n\t */\r\n\tconstructor(childNodes) {\r\n\t\tthis.childNodes = childNodes\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tconst attachNode = () => this.initial\r\n\t\t\t.createNode()\r\n\t\t\t.attachChildren()\r\n\r\n\t\tif (node === null) {\r\n\t\t\tattachNode()\r\n\t\t}\r\n\t\telse if (node instanceof HTMLElement) {\r\n\t\t\tattachNode()\r\n\t\t\tnode.appendChild(/**@type {Node}*/ (this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node, attachNode();\r\n\t\t\t(node.shadowRoot ?? /**@type {Node}*/ (node.htmlNode)).appendChild(/**@type {Node}*/ (this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node, attachNode();\r\n\t\t\t/**@type {Node}*/ (node.htmlNode).appendChild(/**@type {Node}*/ (this.htmlNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqFragment to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {any}\r\n\t */\r\n\tgetStateRefValue(prop) {\r\n\t\treturn this.jqParent?.getStateRefValue(prop)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @param {unknown} value \r\n\t * @returns {any}\r\n\t */\r\n\tsetStateRefValue(prop, value) {\r\n\t\treturn this.jqParent?.setStateRefValue(prop, value)\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 0) {\r\n\t\treturn this.childNodes.map(x => x.toString(indent)).join('\\n' + '\\t'.repeat(indent))\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tjqFragment.htmlNode = document.createDocumentFragment().cloneNode()\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachChildren() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tfor (const childNode of jqFragment.childNodes) {\r\n\t\t\t\tchildNode.attachTo(jqFragment)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateNode() {\r\n\t\t\tthis.updateChildren()\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tupdateChildren() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tfor (const childNode of jqFragment.childNodes) {\r\n\t\t\t\tchildNode.update.updateNode()\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {JqElement | JqFragment | JqText} childNode\r\n\t\t */\r\n\t\tattachChild(childNode) {\r\n\t\t\tconst jqFragment = this.context\r\n\r\n\t\t\tif (jqFragment.jqParent instanceof JqFragment) {\r\n\t\t\t\tjqFragment.jqParent.update.attachChild(childNode)\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\tif (jqFragment.jqParent instanceof JqElement) {\r\n\t\t\t\tconst node = jqFragment.jqParent.shadowRoot ?? /**@type {HTMLElement}*/ (jqFragment.jqParent.htmlNode);\r\n\t\t\t\tnode.appendChild(/**@type {HTMLElement}*/ (childNode.htmlNode))\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\treturn this\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @param {JqElement | JqFragment | JqText} oldChildNode \r\n\t\t * @param {JqElement | JqFragment | JqText} newChildNode\r\n\t\t */\r\n\t\treplaceChild(oldChildNode, newChildNode) {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tconst delChildIdx = jqFragment.childNodes.findIndex(childNode => Object.is(childNode, oldChildNode))\r\n\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - childNode not found in jqFragment.childNodes\")\r\n\r\n\t\t\tjqFragment.childNodes.splice(delChildIdx, 1, newChildNode)\r\n\r\n\t\t\tif (!(oldChildNode instanceof JqText))\r\n\t\t\t\toldChildNode.childNodes.forEach(childNode => childNode.delete.deleteSelf());\r\n\r\n\t\t\t\r\n\t\t\tconst jqParent = /**@type {JqFragment | JqElement}*/ (oldChildNode.jqParent)\r\n\t\t\tconst htmlNode = /**@type {Node | HTMLElement}*/ (jqParent?.htmlNode)\r\n\t\t\thtmlNode.replaceChild(\r\n\t\t\t\t/**@type {Node | HTMLElement}*/ (newChildNode.htmlNode),\r\n\t\t\t\t/**@type {Node | HTMLElement}*/ (oldChildNode.htmlNode)\r\n\t\t\t)\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqFragment = this.context\r\n\t\t\tconst jqParent = /**@type {JqFragment | JqElement}*/ (jqFragment.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqFragment))\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - JqFragment not found in its jqParent.childNodes\")\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1)\r\n\t\t\tjqFragment.childNodes.forEach(childNode => childNode.delete.deleteSelf())\r\n\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class JqText {\r\n\tnodePosition = -1\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {Text | null}\r\n\t */\r\n\thtmlNode = null\r\n\ttext = ''\r\n\r\n\t/**\r\n\t * @param  {Array<Primitive>} primitives\r\n\t */\r\n\tconstructor(...primitives) {\r\n\t\tthis.text = primitives.map(primitive => String(primitive ?? '')).join('')\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node \r\n\t * @returns \r\n\t */\r\n\tattachTo(node) {\r\n\r\n\t\tif (node === null) {\r\n\t\t\treturn this.toString()\r\n\t\t}\r\n\r\n\t\tthis.initial.createNode()\r\n\t\tif (node instanceof HTMLElement) {\r\n\t\t\tnode.appendChild(/**@type {Text}*/ (this.htmlNode))\r\n\t\t\treturn this.toString()\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node;\r\n\t\t\t(node.shadowRoot ?? /**@type {HTMLElement}*/ (node.htmlNode))\r\n\t\t\t\t.appendChild(/**@type {Text}*/ (this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node;\r\n\t\t\t/**@type {Node}*/ (node.htmlNode).appendChild(/**@type {Node}*/ (this.htmlNode))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqText to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\ttoString(indent = 0) {\r\n\t\treturn /**@type {Text}*/ (this.htmlNode).nodeValue ?? ''\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tjqElement.htmlNode = document.createTextNode(jqElement.text)\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateNode() {\r\n\t\t\treturn this\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {string} text \r\n\t\t */\r\n\t\tsetText(text) {\r\n\t\t\tconst jqText = this.context;\r\n\t\t\t/**@type {Text}*/ (jqText.htmlNode).nodeValue = jqText.text = text\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqText = this.context\r\n\t\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (jqText.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqText))\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1);\r\n\t\t\t/**@type {Text}*/ (jqText.htmlNode).remove()\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @template {JqNode} U\r\n * @template {{ new(...x: any[]): U }} T\r\n */\r\nexport class JqList {\r\n\t/**\r\n\t * @type {U[]}\r\n\t */\r\n\tnodes = []\r\n\t/**\r\n\t * @type {T}\r\n\t */\r\n\tnodeClass\r\n\r\n\t/**\r\n\t * @param {T} nodeClass \r\n\t * @param {U[]} nodes \r\n\t */\r\n\tconstructor(nodeClass, nodes) {\r\n\t\tthis.nodeClass = nodeClass\r\n\t\tthis.nodes = nodes\r\n\t}\r\n\r\n\t/**\r\n\t * @param {U} node \r\n\t */\r\n\tpush(node) {\r\n\t\tif (!(node instanceof this.nodeClass))\r\n\t\t\tthrow new Error(`JqError - Cannot push node not of instance '${this.nodeClass.name}' into JqList<${this.nodeClass.name}>`)\r\n\t\tthis.nodes.push(node)\r\n\t}\r\n\r\n\tpop() {\r\n\t\treturn this.nodes.pop()\r\n\t}\r\n}\r\n\r\n/**\r\n * @typedef {{\r\n * childNodes: Array<JqElement | JqFragment | JqText>,\r\n * attributes: JqAttribute[], events: JqEvent[],\r\n * animations: JqAnimation[], references: JqReference[],\r\n * inlineStyles: Array<JqCSSProperty>, blockStyles: Array<JqCSSRule>,\r\n * callbacks: JqCallback[], htmlNode?: HTMLElement\r\n * }} JqElementParameters\r\n */\r\n\r\nexport class JqElement {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\tname\r\n\t/**\r\n\t * @type {JqElement | JqFragment | null}\r\n\t */\r\n\tjqParent = null\r\n\t/**\r\n\t * @type {ShadowRoot | null}\r\n\t */\r\n\tshadowRoot = null\r\n\t/**\r\n\t * @type {HTMLElement | null}\r\n\t */\r\n\thtmlNode = null\r\n\t/**\r\n\t * @type {Array<JqElement | JqFragment | JqText>}\r\n\t */\r\n\tchildNodes = []\r\n\t/**\r\n\t * @type {JqAttribute[]}\r\n\t */\r\n\tattributes = []\r\n\t/**\r\n\t * @type {JqEvent[]}\r\n\t */\r\n\tevents = []\r\n\t/**\r\n\t * @type {JqAnimation[]}\r\n\t */\r\n\tanimations = []\r\n\t/**\r\n\t * @type {JqReference[]}\r\n\t */\r\n\treferences = []\r\n\t/**\r\n\t * @type {Array<JqCSSProperty>}\r\n\t */\r\n\tinlineStyles = []\r\n\t/**\r\n\t * @type {Array<JqCSSRule>}\r\n\t */\r\n\tblockStyles = []\r\n\t/**\r\n\t * @type {JqCallback[]}\r\n\t */\r\n\tcallbacks = []\r\n\t/**\r\n\t * @type {HTMLStyleElement | null}\r\n\t */\r\n\tscopedStyleSheet = null\r\n\tnodePosition = -1\r\n\r\n\t/**\r\n\t * @param {string} name \r\n\t * @param {JqElementParameters} props \r\n\t */\r\n\tconstructor(name, props) {\r\n\t\tthis.name = name\r\n\t\tObject.assign(this, props)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Node | JqElement | JqFragment | null} node\r\n\t */\r\n\tattachTo(node) {\r\n\t\tconst attachNode = () => this.initial\r\n\t\t\t.createNode(isNullish(this.htmlNode))\r\n\t\t\t.attachReferences()\r\n\t\t\t.attachStyles()\r\n\t\t\t.attachAttributes()\r\n\t\t\t.attachChildren()\r\n\t\t\t.attachEventListeners()\r\n\t\t\t.attachAnimations()\r\n\r\n\t\tif (node === null) {\r\n\t\t\tattachNode()\r\n\t\t}\r\n\t\telse if (node instanceof HTMLElement) {\r\n\t\t\tattachNode()\r\n\t\t\tnode.appendChild(/**@type {HTMLElement}*/ (this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqElement) {\r\n\t\t\tthis.jqParent = node, attachNode();\r\n\t\t\t(node.shadowRoot ?? /**@type {HTMLElement}*/ (node.htmlNode))\r\n\t\t\t\t.appendChild(/**@type {HTMLElement}*/ (this.htmlNode))\r\n\t\t}\r\n\t\telse if (node instanceof JqFragment) {\r\n\t\t\tthis.jqParent = node, attachNode();\r\n\t\t\t/**@type {Node}*/ (node.htmlNode).appendChild(/**@type {HTMLElement}*/ (this.htmlNode))\r\n\t\t\tnode.update.attachChild(this)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(`JqError - Cannot attach JqElement '${this.name}' to a node not of instance JqElement or JqFragment or HTMLElement`)\r\n\t\t}\r\n\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {any}\r\n\t */\r\n\tgetStateRefValue(prop) {\r\n\t\tconst reference = this.references?.find(reference => prop in reference[StateReference])\r\n\t\treturn reference?.[StateReference][prop] ?? this.jqParent?.getStateRefValue(prop)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @param {unknown} value \r\n\t * @returns {any}\r\n\t */\r\n\tsetStateRefValue(prop, value) {\r\n\t\tconst reference = this.references?.find(reference => prop in reference[StateReference])\r\n\t\tif (reference) {\r\n\t\t\treference[StateReference][prop] = value\r\n\t\t\tthis.update.updateNode()\r\n\t\t\treturn value\r\n\t\t}\r\n\r\n\t\tconst _value = this.jqParent?.setStateRefValue(prop, value)\r\n\t\treturn _value\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(indent = 0) {\r\n\t\tconst emptyTags = [\r\n\t\t\t\"area\", \"base\", \"br\",\r\n\t\t\t\"col\", \"embed\", \"hr\",\r\n\t\t\t\"img\", \"input\", \"link\",\r\n\t\t\t\"meta\", \"param\", \"source\",\r\n\t\t\t\"track\", \"wbr\"\r\n\t\t]\r\n\r\n\t\t/**\r\n\t\t * @param {number} length\r\n\t\t */\r\n\t\tconst hasElmStartIndent = (length) => length > 0 ? '\\n' + '\\t'.repeat(indent + 1) : ''\r\n\r\n\t\t/**\r\n\t\t * @param {number} length\r\n\t\t */\r\n\t\tconst hasElmEndIndent = (length) => length > 0 ? '\\n' + '\\t'.repeat(indent) : ''\r\n\t\tconst emptyTagSelfClosure = emptyTags.includes(this.name) ? '/' : ''\r\n\r\n\t\tconst childMarkup = this.childNodes.map(x => x.toString(indent + 1)).join('\\n' + '\\t'.repeat(indent + 1))\r\n\t\tconst selfAttrs = this.attributes.map(x => `${x.name} = \"${stringify(x.value)}\"`).join(\" \")\r\n\t\tconst selfCallbacks = this.callbacks.map(x => x.toString(indent + 1)).join('\\n' + '\\t'.repeat(indent))\r\n\r\n\t\tconst selfMarkupHead = `<${this.name}${selfAttrs.length ? ' ' : ''}${selfAttrs}${emptyTagSelfClosure}>`\r\n\t\tconst selfMarkupTail = `${hasElmStartIndent(childMarkup.length || selfCallbacks.length) +\r\n\t\t\tchildMarkup +\r\n\t\t\t(selfCallbacks.length ? hasElmStartIndent(childMarkup.length) + selfCallbacks : '') +\r\n\t\t\thasElmEndIndent(childMarkup.length || selfCallbacks.length)}</${this.name}>`\r\n\t\tconst selfMarkup = `${selfMarkupHead}${!emptyTagSelfClosure ? selfMarkupTail : ''}`\r\n\r\n\t\treturn selfMarkup\r\n\t}\r\n\r\n\tinitial = {\r\n\t\tcontext: this,\r\n\t\tcreateNode(recreate = true) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tif (recreate)\r\n\t\t\t\tjqElement.htmlNode = document.createElement(jqElement.name)\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachAttributes() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const attribute of jqElement.attributes) {\r\n\t\t\t\tattribute.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachChildren() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst callbackPosNodePairs = jqElement.callbacks.map(callback =>\r\n\t\t\t\t/**@type {const}*/ ([callback.nodePosition, callback]))\r\n\r\n\t\t\tfor (const childNode of jqElement.childNodes) {\r\n\t\t\t\tcallbackPosNodePairs.forEach(([pos, callback], idx) =>\r\n\t\t\t\t\tattachCallback(idx, childNode.nodePosition, pos, callback))\r\n\r\n\t\t\t\tchildNode.attachTo(jqElement)\r\n\t\t\t}\r\n\r\n\t\t\tcallbackPosNodePairs.forEach(([pos, callback], idx) =>\r\n\t\t\t\tattachCallback(idx, -1, pos, callback, true))\r\n\r\n\t\t\treturn this\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {number} idx \r\n\t\t\t * @param {number} childNodePos \r\n\t\t\t * @param {number} callbackPos \r\n\t\t\t * @param {JqCallback} callback \r\n\t\t\t * @param {boolean} ignorePos\r\n\t\t\t */\r\n\t\t\tfunction attachCallback(idx, childNodePos, callbackPos, callback, ignorePos = false) {\r\n\t\t\t\tif (!ignorePos && callbackPos >= childNodePos) return\r\n\t\t\t\tcallback.attachTo(jqElement)\r\n\t\t\t\tcallbackPosNodePairs.splice(idx, 1)\r\n\t\t\t}\r\n\t\t},\r\n\t\tattachEventListeners() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const jqEvent of jqElement.events) {\r\n\t\t\t\tjqEvent.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachAnimations() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tif (jqElement.animations.length == 0) return this\r\n\r\n\t\t\tobserveElement(/**@type {HTMLElement}*/ (jqElement.htmlNode), ([entry, observer]) => {\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tfor (const animation of jqElement.animations) {\r\n\t\t\t\t\t\tanimation.attachTo(jqElement)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tobserver.disconnect()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachStyles() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tif (jqElement.inlineStyles.length == 0 && jqElement.blockStyles.length == 0) return this\r\n\t\t\tif (canHaveShadow(/**@type {HTMLElement}*/ (jqElement.htmlNode))) {\r\n\t\t\t\tjqElement.shadowRoot = /**@type {HTMLElement}*/ (jqElement.htmlNode).attachShadow({ mode: \"open\" })\r\n\t\t\t\tconst styleSheet = document.createElement(\"style\")\r\n\t\t\t\tstyleSheet.textContent = ''\r\n\r\n\t\t\t\tjqElement.scopedStyleSheet = styleSheet\r\n\t\t\t\tjqElement.shadowRoot.appendChild(styleSheet)\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {JqCSSProperty[]}\r\n\t\t\t\t */\r\n\t\t\t\tconst styleProperties = []\r\n\t\t\t\tfor (const style of jqElement.inlineStyles) {\r\n\t\t\t\t\tstyle.attachTo(jqElement)\r\n\t\t\t\t\tstyleProperties.push(style)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const style of jqElement.blockStyles) {\r\n\t\t\t\t\tstyle.attachTo(jqElement)\r\n\t\t\t\t\tstyleSheet.textContent += '\\n' + style.toString()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stylePropertiesStr = styleProperties.join(\"\\n\\t\")\r\n\t\t\t\tif (stylePropertiesStr.length > 0)\r\n\t\t\t\t\tstyleSheet.textContent += `\\n:host {\\n\\t${stylePropertiesStr}\\n}`\r\n\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(`JqError - scoped styles are not supported for '${jqElement.name}' element.`)\r\n\t\t},\r\n\t\tattachReferences() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const reference of jqElement.references) {\r\n\t\t\t\treference.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tattachCallbacks() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const callback of jqElement.callbacks) {\r\n\t\t\t\tcallback.attachTo(jqElement)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tupdate = {\r\n\t\tcontext: this,\r\n\t\tupdateNode() {\r\n\t\t\tthis\r\n\t\t\t\t.updateAttributes()\r\n\t\t\t\t.updateChildren()\r\n\t\t\t\t.updateCallbacks()\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tupdateAttributes() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const attribute of jqElement.attributes) {\r\n\t\t\t\tattribute.update.setAttribute(attribute.value)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tupdateChildren() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const childNode of jqElement.childNodes) {\r\n\t\t\t\tchildNode.update.updateNode()\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tupdateStyles() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const style of jqElement.inlineStyles) {\r\n\t\t\t\t// style.update.updateNode()\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tupdateCallbacks() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tfor (const callback of jqElement.callbacks) {\r\n\t\t\t\tcallback.update.updateCallback()\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {JqElement | JqFragment | JqText} oldChildNode \r\n\t\t * @param {JqElement | JqFragment | JqText} newChildNode\r\n\t\t */\r\n\t\treplaceChild(oldChildNode, newChildNode) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst delChildIdx = jqElement.childNodes.findIndex(childNode => Object.is(childNode, oldChildNode))\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - childNode not found in jqElement.childNodes\")\r\n\r\n\t\t\tjqElement.childNodes.splice(delChildIdx, 1, newChildNode)\r\n\r\n\t\t\tif (!(oldChildNode instanceof JqText))\r\n\t\t\t\toldChildNode.childNodes.forEach(childNode => childNode.delete.deleteSelf())\r\n\r\n\t\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (oldChildNode.jqParent)\r\n\t\t\tconst htmlNode = /**@type {Node | HTMLElement}*/ (jqParent.htmlNode)\r\n\t\t\thtmlNode.replaceChild(\r\n\t\t\t\t/**@type {Node | HTMLElement | Text}*/ (newChildNode.htmlNode),\r\n\t\t\t\t/**@type {Node | HTMLElement | Text}*/ (oldChildNode.htmlNode)\r\n\t\t\t)\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\tdelete = {\r\n\t\tcontext: this,\r\n\t\t/**\r\n\t\t * @param {JqAttribute} jqAttribute\r\n\t\t */\r\n\t\tremoveAttribute(jqAttribute) {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst indexOfAttr = jqElement.attributes.indexOf(jqAttribute)\r\n\r\n\t\t\tif (indexOfAttr != -1)\r\n\t\t\t\tjqElement.attributes.splice(indexOfAttr, 1);\r\n\r\n\t\t\t/**@type {HTMLElement}*/ (jqElement.htmlNode).removeAttribute(jqAttribute.name)\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tdeleteSelf() {\r\n\t\t\tconst jqElement = this.context\r\n\t\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (jqElement.jqParent)\r\n\r\n\t\t\tconst delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqElement))\r\n\r\n\t\t\tif (delChildIdx == -1)\r\n\t\t\t\tthrowError(\"JqInternalError - JqElement not found in its jqParent.childNodes\")\r\n\r\n\t\t\tjqParent.childNodes.splice(delChildIdx, 1)\r\n\t\t\tjqElement.childNodes.forEach(childNode => childNode.delete.deleteSelf());\r\n\t\t\t/**@type {HTMLElement}*/ (jqElement.htmlNode).remove()\r\n\t\t\treturn this\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLElement} context \r\n\t * @param {string} name \r\n\t * @param {JqElementParameters} nodes\r\n\t */\r\n\tstatic custom = (context, name, nodes) => {\r\n\t\treturn new JqElement(name, { ...nodes, htmlNode: context })\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {boolean} condition \r\n * @returns {true | null}\r\n */\r\nexport function showIf(condition) {\r\n\treturn condition || null\r\n}\r\n\r\n/**\r\n * @typedef {null | undefined | number | string | symbol | bigint} Primitive\r\n * @typedef {{ [styleName: string]: Primitive | Primitive[] } | Map<string, Primitive>\r\n * | Array<{ [styleName: string]: Primitive | Primitive[] } | Map<string, Primitive>>} AnimationStyles\r\n * @typedef {{\r\n *    duration?: string | number,\r\n *    easing?: string,\r\n *    complete?: (..._: unknown[]) => unknown,\r\n *    step?: (..._: unknown[]) => unknown,\r\n *    progress?: (..._: unknown[]) => unknown,\r\n *    specialEasing?: AnimationStyles,\r\n *    start?: (..._: unknown[]) => unknown,\r\n *    done?: (..._: unknown[]) => unknown,\r\n *    fail?: (..._: unknown[]) => unknown,\r\n *    always?: (..._: unknown[]) => unknown\r\n * }} AnimationOptions\r\n * \r\n * @typedef {(styles: AnimationStyles, ...options: ([speed?: number | \"fast\" | \"slow\", easing?: string, callback?: (..._: unknown[]) => unknown]) | [option: AnimationOptions]) => Animation} AnimateFn\r\n * \r\n * @typedef {(arg0: [IntersectionObserverEntry, IntersectionObserver]) => unknown} ResolveFn\r\n * \r\n * @typedef {(reason?: unknown) => unknown} RejectFn\r\n */\r\n\r\n/**\r\n * @param {HTMLElement} element \r\n * @param {ResolveFn} callback\r\n */\r\nexport function observeElement(element, callback) {\r\n\r\n\t/**\r\n\t * \r\n\t * @param {ResolveFn} callback \r\n\t * @returns {IntersectionObserverCallback}\r\n\t */\r\n\tconst observerCallback =\r\n\t\tcallback => (entries, observer) =>\r\n\t\t\tentries.forEach(entry => callback([entry, observer]))\r\n\r\n\treturn new IntersectionObserver(observerCallback(callback)).observe(element)\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n */\r\nexport function canHaveShadow(element) {\r\n\ttry {\r\n\t\treturn Boolean(/**@type {HTMLElement}*/ (element.cloneNode()).attachShadow({ mode: \"open\" }))\r\n\t} catch {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n */\r\nexport const camelToKebab = (str) =>\r\n\tstr.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? \"-\" : \"\") + $.toLowerCase())\r\n\r\n/**\r\n * @param {string} errorMessage \r\n * @param {{ [x: string]: Primitive }} styleObject\r\n */\r\nexport function createPropertyListFromStyleObject(errorMessage, styleObject) {\r\n\t/**\r\n\t * @param {any} value\r\n\t */\r\n\tconst isObject = (value) => value !== null && typeof value == \"object\"\r\n\tif (!isObject(styleObject))\r\n\t\tthrow new Error(errorMessage)\r\n\r\n\t/**\r\n\t * @type {JqCSSProperty[]}\r\n\t */\r\n\tconst styleProperties = Object.entries(styleObject)\r\n\t\t.map(([key, value]) => new JqCSSProperty(key, value))\r\n\r\n\treturn new JqList(JqCSSProperty, styleProperties)\r\n}\r\n\r\n/**\r\n * @typedef {JqElement | JqAttribute | JqCSSProperty | JqCSSRule | JqAnimation | JqEvent | JqReference | JqFragment | JqText | JqCallback} JqNode\r\n * @typedef {'0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F'} HexDigit\r\n */\r\n\r\n/**\r\n * @template {string} T\r\n * @typedef { T extends `#${HexDigit}${HexDigit}${HexDigit}${infer Rest1}`\r\n *       ? (Rest1 extends ``\r\n *           ? T\r\n *             : (\r\n *                    Rest1 extends `${HexDigit}${HexDigit}${HexDigit}`\r\n *                        ? T\r\n *                        : never\r\n *               )\r\n *         )\r\n *      : never\r\n * } HexColor\r\n */\r\n\r\n/**\r\n * @template {string} T\r\n * @param {HexColor<T>} col\r\n * @param {number} amt\r\n */\r\nexport function adjustColor(col, amt) {\r\n\r\n\tlet usePound = false\r\n\r\n\tif (col[0] == \"#\") {\r\n\t\tcol = /**@type {HexColor<T>}*/ (/**@type {string}*/ (col).slice(1))\r\n\t\tusePound = true\r\n\t}\r\n\r\n\tconst num = parseInt(col, 16)\r\n\r\n\tlet r = (num >> 16) + amt\r\n\r\n\tif (r > 255) r = 255\r\n\telse if (r < 0) r = 0\r\n\r\n\tlet b = ((num >> 8) & 0x00FF) + amt\r\n\r\n\tif (b > 255) b = 255\r\n\telse if (b < 0) b = 0\r\n\r\n\tlet g = (num & 0x0000FF) + amt\r\n\r\n\tif (g > 255) g = 255\r\n\telse if (g < 0) g = 0\r\n\r\n\treturn (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16)\r\n}\r\n\r\n/**\r\n * @typedef {{\r\n * type: new (...a: any) => JqNode,\r\n * node1: JqNode,\r\n * node2: JqNode,\r\n * [UPDATED]: [string, ...Array<string | JqNode>][],\r\n * [DELETED]: [string, ...Array<string | JqNode>][],\r\n * [CREATED]: [string, ...Array<string | JqNode>][],\r\n * [UNCHANGED]: [string, ...Array<string | JqNode>][],\r\n * childDiffs: Diff[]\r\n * }} Diff\r\n */\r\n\r\n/**\r\n * @param {JqNode} node1 \r\n * @param {JqNode} node2\r\n */\r\nfunction diff(node1, node2) {\r\n\tconst nodeComparison = compareJqNodes(node1, node2)\r\n\treturn nodeComparison\r\n\r\n\t/**\r\n\t * @typedef {{ object: JqNode, props: string[][] }} CompareProps\r\n\t */\r\n\r\n\t/**\r\n\t * @param {CompareProps} affected1 \r\n\t * @param {CompareProps} affected2\r\n\t */\r\n\tfunction compareProps(affected1, affected2) {\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst diff = {\r\n\t\t\ttype: Object.getPrototypeOf(affected1.object).constructor,\r\n\t\t\tnode1: affected1.object,\r\n\t\t\tnode2: affected2.object,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tconst deletedProps = affected1.props.filter(prop =>\r\n\t\t\tisNullish(getPropertyValue(/**@type {any}*/ (affected2.object), prop)))\r\n\r\n\t\tdiff[DELETED] = /**@type {any}*/ (deletedProps)\r\n\r\n\t\tconst createdProps = affected2.props.filter(prop =>\r\n\t\t\tisNullish(getPropertyValue(/**@type {any}*/ (affected1.object), prop)))\r\n\r\n\t\tdiff[CREATED] = /**@type {any}*/ (createdProps)\r\n\r\n\t\tconst updatedProps = affected1.props.filter(prop =>\r\n\t\t\tgetPropertyValue(/**@type {any}*/ (affected2.object), prop) !==\r\n\t\t\tgetPropertyValue(/**@type {any}*/ (affected1.object), prop))\r\n\r\n\t\tdiff[UPDATED] = /**@type {any}*/ (updatedProps)\r\n\r\n\t\tconst unchangedProps = affected1.props.filter(prop =>\r\n\t\t\tgetPropertyValue(/**@type {any}*/ (affected2.object), prop) ===\r\n\t\t\tgetPropertyValue(/**@type {any}*/ (affected1.object), prop))\r\n\r\n\t\tdiff[UNCHANGED] = /**@type {any}*/ (unchangedProps)\r\n\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqText} node1 \r\n\t * @param {JqText} node2\r\n\t */\r\n\tfunction compareJqTexts(node1, node2) {\r\n\t\tconst affected1 = {\r\n\t\t\tobject: node1,\r\n\t\t\tprops: [[\"text\"]]\r\n\t\t}\r\n\r\n\t\tconst affected2 = {\r\n\t\t\tobject: node2,\r\n\t\t\tprops: [[\"text\"]]\r\n\t\t}\r\n\r\n\t\tconst diff = compareProps(affected1, affected2)\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqAttribute} jqAttribute1 \r\n\t * @param {JqAttribute} jqAttribute2\r\n\t */\r\n\tfunction compareJqAttributes(jqAttribute1, jqAttribute2) {\r\n\t\tconst affected1 = {\r\n\t\t\tobject: jqAttribute1,\r\n\t\t\tprops: [[\"name\"], [\"value\"]]\r\n\t\t}\r\n\r\n\t\tconst affected2 = {\r\n\t\t\tobject: jqAttribute2,\r\n\t\t\tprops: [[\"name\"], [\"value\"]]\r\n\t\t}\r\n\r\n\t\tconst diff = compareProps(affected1, affected2)\r\n\t\treturn diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqFragment} node1 \r\n\t * @param {JqFragment} node2\r\n\t */\r\n\tfunction compareJqFragments(node1, node2) {\r\n\t\tconst firstFragChildren = node1.childNodes\r\n\t\tconst secondFragChildren = node2.childNodes\r\n\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: node1,\r\n\t\t\tnode2: node2,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstFragChildren.length, secondFragChildren.length); i++) {\r\n\t\t\tconst firstFragChild = firstFragChildren[i]\r\n\t\t\tconst secondFragChild = secondFragChildren[i]\r\n\r\n\t\t\tif (firstFragChild === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"childNodes\", secondFragChild])\r\n\t\t\telse if (secondFragChild === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"childNodes\", firstFragChild])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstFragChild, secondFragChild))\r\n\t\t}\r\n\r\n\t\treturn _diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqElement} node1 \r\n\t * @param {JqElement} node2\r\n\t */\r\n\tfunction compareJqElements(node1, node2) {\r\n\t\tconst firstElemChildren = node1.childNodes\r\n\t\tconst secondElemChildren = node2.childNodes\r\n\r\n\t\tconst firstElemAttributes = node1.attributes\r\n\t\tconst secondElemAttributes = node2.attributes\r\n\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: node1,\r\n\t\t\tnode2: node2,\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstElemChildren.length, secondElemChildren.length); i++) {\r\n\t\t\tconst firstElemChild = firstElemChildren[i]\r\n\t\t\tconst secondElemChild = secondElemChildren[i]\r\n\r\n\t\t\tif (firstElemChild === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"childNodes\", i + \"\"])\r\n\t\t\telse if (secondElemChild === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"childNodes\", i + \"\"])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstElemChild, secondElemChild))\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < Math.max(firstElemAttributes.length, secondElemAttributes.length); i++) {\r\n\t\t\tconst firstElemAttribute = firstElemAttributes[i]\r\n\t\t\tconst secondElemAttribute = secondElemAttributes[i]\r\n\r\n\t\t\tif (firstElemAttribute === undefined)\r\n\t\t\t\t_diff[CREATED].push([\"attributes\", i + ''])\r\n\t\t\telse if (secondElemAttribute === undefined)\r\n\t\t\t\t_diff[DELETED].push([\"attributes\", i + ''])\r\n\t\t\telse\r\n\t\t\t\t_diff.childDiffs.push(diff(firstElemAttribute, secondElemAttribute))\r\n\t\t}\r\n\r\n\t\treturn _diff\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqNode} node1 \r\n\t * @param {JqNode} node2\r\n\t */\r\n\tfunction compareJqNodes(node1, node2) {\r\n\t\tif (isJqElement(node1) && isJqElement(node2))\r\n\t\t\treturn compareJqElements(/**@type {JqElement}*/ (node1), /**@type {JqElement}*/ (node2))\r\n\t\tif (isJqFragment(node1) && isJqFragment(node2))\r\n\t\t\treturn compareJqFragments(/**@type {JqFragment}*/ (node1), /**@type {JqFragment}*/ (node2))\r\n\t\tif (isJqAttribute(node1) && isJqAttribute(node2))\r\n\t\t\treturn compareJqAttributes(/**@type {JqAttribute}*/ (node1), /**@type {JqAttribute}*/ (node2))\r\n\t\tif (isJqText(node1) && isJqText(node2))\r\n\t\t\treturn compareJqTexts(/**@type {JqText}*/ (node1), /**@type {JqText}*/ (node2))\r\n\r\n\t\treturn compareJqGenericNodes(node1, node2)\r\n\t}\r\n\r\n\t/**\r\n\t * @param {JqNode} [node1] \r\n\t * @param {JqNode} [node2]\r\n\t */\r\n\tfunction compareJqGenericNodes(node1, node2) {\r\n\t\t/**\r\n\t\t * @type {Diff}\r\n\t\t */\r\n\t\tconst _diff = {\r\n\t\t\ttype: Object.getPrototypeOf(node1).constructor,\r\n\t\t\tnode1: /**@type {JqNode}*/ (node1),\r\n\t\t\tnode2: /**@type {JqNode}*/ (node2),\r\n\t\t\t[CREATED]: [],\r\n\t\t\t[UPDATED]: [],\r\n\t\t\t[DELETED]: [],\r\n\t\t\t[UNCHANGED]: [],\r\n\t\t\tchildDiffs: [],\r\n\t\t}\r\n\r\n\t\tconst [isNode1, isNode2] = [isNullish(node1), isNullish(node2)]\r\n\r\n\t\tif (isNode1)\r\n\t\t\t_diff[CREATED].push([\"self\"])\r\n\t\tif (isNode2)\r\n\t\t\t_diff[DELETED].push([\"self\"])\r\n\r\n\t\tif (isNode1 || isNode2)\r\n\t\t\treturn _diff\r\n\r\n\t\tconst jqParent = /**@type {JqElement | JqFragment}*/ (/**@type {JqNode}*/(node1).jqParent)\r\n\t\tconst indexOfNode1 = jqParent.childNodes.findIndex(x => Object.is(node1, x))\r\n\t\t_diff[UPDATED].push([\"childNodes\", /**@type {JqNode}*/ (node2)])\r\n\r\n\t\treturn _diff\r\n\t}\r\n}\r\n\r\nexport const validHTMLElements = /**@type {const}*/ ([\r\n\t\"a\",\r\n\t\"address\",\r\n\t\"article\",\r\n\t\"aside\",\r\n\t\"audio\",\r\n\t\"b\",\r\n\t\"base\",\r\n\t\"bdo\",\r\n\t\"br\",\r\n\t\"button\",\r\n\t\"canvas\",\r\n\t\"caption\",\r\n\t\"cite\",\r\n\t\"code\",\r\n\t\"col\",\r\n\t\"colgroup\",\r\n\t\"command\",\r\n\t\"data\",\r\n\t\"datalist\",\r\n\t\"dd\",\r\n\t\"del\",\r\n\t\"details\",\r\n\t\"dfn\",\r\n\t\"dialog\",\r\n\t\"div\",\r\n\t\"dl\",\r\n\t\"dt\",\r\n\t\"em\",\r\n\t\"embed\",\r\n\t\"fieldset\",\r\n\t\"figure\",\r\n\t\"figcaption\",\r\n\t\"footer\",\r\n\t\"form\",\r\n\t\"h1\",\r\n\t\"h2\",\r\n\t\"h3\",\r\n\t\"h4\",\r\n\t\"h5\",\r\n\t\"h6\",\r\n\t\"head\",\r\n\t\"header\",\r\n\t\"hgroup\",\r\n\t\"hr\",\r\n\t\"html\",\r\n\t\"i\",\r\n\t\"img\",\r\n\t\"input\",\r\n\t\"ins\",\r\n\t\"kbd\",\r\n\t\"label\",\r\n\t\"legend\",\r\n\t\"li\",\r\n\t\"link\",\r\n\t\"main\",\r\n\t\"map\",\r\n\t\"mark\",\r\n\t\"math\",\r\n\t\"meter\",\r\n\t\"nav\",\r\n\t\"noscript\",\r\n\t\"object\",\r\n\t\"ol\",\r\n\t\"optgroup\",\r\n\t\"option\",\r\n\t\"output\",\r\n\t\"p\",\r\n\t\"param\",\r\n\t\"pre\",\r\n\t\"progress\",\r\n\t\"portal\",\r\n\t\"q\",\r\n\t\"ruby\",\r\n\t\"s\",\r\n\t\"section\",\r\n\t\"small\",\r\n\t\"span\",\r\n\t\"strike\",\r\n\t\"tt\",\r\n\t\"u\",\r\n\t\"var\",\r\n\t\"video\",\r\n\t\"wbr\",\r\n\t\"abbr\",\r\n\t\"area\",\r\n\t\"bdi\",\r\n\t\"blockquote\",\r\n\t\"body\",\r\n\t\"iframe\",\r\n\t\"menu\",\r\n\t\"meta\",\r\n\t\"picture\",\r\n\t\"rb\",\r\n\t\"rp\",\r\n\t\"rt\",\r\n\t\"rtc\",\r\n\t\"samp\",\r\n\t\"script\",\r\n\t\"select\",\r\n\t\"slot\",\r\n\t\"source\",\r\n\t\"strong\",\r\n\t\"style\",\r\n\t\"sub\",\r\n\t\"summary\",\r\n\t\"sup\",\r\n\t\"table\",\r\n\t\"tbody\",\r\n\t\"td\",\r\n\t\"template\",\r\n\t\"textarea\",\r\n\t\"tfoot\",\r\n\t\"th\",\r\n\t\"thead\",\r\n\t\"time\",\r\n\t\"title\",\r\n\t\"tr\",\r\n\t\"track\",\r\n\t\"ul\",\r\n])","import {\r\n\tJqEvent, getNodes, escapeHTMLEntities,\r\n\tstringify, JqAnimation, JqCallback,\r\n\tisPrimitive, JqReference, JqElement,\r\n\tJqCSSProperty, JqFragment, JqText, JqCSSRule, JqList,\r\n\tJqAttribute, StateReference, JqNodeReference, validHTMLElements, camelToKebab\r\n} from \"./utility.js\"\r\n\r\n/**\r\n * @type {WeakMap<HTMLElement, HTMLStyleElement>}\r\n */\r\nconst scopedStyleSheets = new WeakMap()\r\nconst CustomElements = Symbol(\"CustomElements\")\r\n\r\n/**\r\n * @typedef {null | undefined | number | string | symbol | bigint} Primitive\r\n * \r\n * @typedef {JqElement | JqAttribute | JqCSSProperty | JqCSSRule | JqAnimation | JqEvent | JqReference | JqFragment | JqText | JqCallback} JqNode\r\n * \r\n * @typedef {{ [name: string]: (...nodes: Array<JqNode>) => JqElement }} NativeConstructor\r\n * \r\n * @typedef {{ globalize: (_globalThis?: {}) => void }} Globalizer\r\n * \r\n * @typedef {NativeConstructor & Globalizer} Natives\r\n * \r\n * @typedef {(name: string, parent?: typeof HTMLElement) => (...nodes: JqNode[]) => JqElement} CustomConstructor\r\n * \r\n * @typedef {{[CustomElements]: string[]}} Customizer\r\n * \r\n * @typedef {CustomConstructor & Customizer} Customs\r\n */\r\n\r\n/**\r\n * @type {Natives}\r\n */\r\nexport const natives = new Proxy(/** @type {Natives & {[k: string | symbol]: any}} */ ({}), {\r\n\t/**\r\n\t * @param {string | symbol} prop\r\n\t * @returns {unknown | typeof globalize | ((...nodes: JqNode[]) => JqElement)}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[prop]\r\n\r\n\t\tif (prop == \"globalize\")\r\n\t\t\treturn globalize\r\n\r\n\t\treturn (...nodes) => new JqElement(prop, getNodes(nodes))\r\n\t}\r\n})\r\n\r\n/**\r\n * @param {{[k: string | symbol]: any}} [_globalThis] \r\n */\r\nfunction globalize(_globalThis) {\r\n\tvalidHTMLElements\r\n\t\t.forEach(element => (_globalThis ?? globalThis)[element] = natives[element])\r\n}\r\n\r\n/**\r\n * @type {(strs: string[] | string, ...values: unknown[]) => JqText}\r\n */\r\nconst text = new Proxy(_text, {})\r\n\r\n/**\r\n * @type {\r\n * ((attrObj: { [x: string]: Primitive }) => JqList<JqAttribute, typeof JqAttribute>) & {\r\n *\t\t[x: string]: JqAttribute\r\n * }}\r\n */\r\nconst attr = new Proxy(_attr, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(value: unknown) => JqAttribute}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[prop]\r\n\r\n\t\treturn (value) => createAttribute(prop, value)\r\n\t}\r\n})\r\n\r\n/**\r\n * @type {{ [eventName: string | symbol]: (handler: (event?: Event, ...a: unknown[]) => unknown) => JqEvent }}\r\n */\r\nconst onObject = {}\r\n\r\n/**\r\n * @type {\r\n * ((event?: Event, ...a: unknown[]) => JqEvent) & {\r\n * \t\t[eventName: string]: (handler: (event?: Event, ...a: unknown[]) => unknown) => JqEvent\r\n * }}\r\n */\r\nexport const on = new Proxy(onObject, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(handler: (event?: Event, ...a: unknown[]) => unknown) => JqEvent}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[prop]\r\n\r\n\t\treturn (handler) =>\r\n\t\t\tnew JqEvent(prop, handler)\r\n\t}\r\n})\r\n\r\n/**\r\n * @type {\r\n * ((styleObj: { [x: string]: Primitive }) => JqCSSRule) & {\r\n*\t\t[x: string]: JqCSSProperty\r\n* }}\r\n */\r\nexport const css = new Proxy(_css, {\r\n\t/**\r\n\t * @param {string | symbol} prop \r\n\t * @returns {(value: Primitive) => JqCSSProperty}\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[prop]\r\n\r\n\t\treturn (value) => {\r\n\t\t\tconst jqCSSProperty = new JqCSSProperty(prop, value)\r\n\t\t\treturn jqCSSProperty\r\n\t\t}\r\n\t}\r\n})\r\n\r\n/**\r\n * @param {string} name \r\n * @param {typeof HTMLElement} parent\r\n * @returns {(...nodes: JqNode[]) => JqElement}\r\n */\r\nconst customizer = (name, parent = HTMLElement) => {\r\n\tif (customElements.get(name))\r\n\t\tthrow new Error(`JqError - custom element '${name}' was already defined`);\r\n\r\n\t_custom[CustomElements].push(name)\r\n\tconst _JqElement = Symbol(\"_JqElement\")\r\n\r\n\tconst node = class extends parent {\r\n\t\t/**\r\n\t\t * @type {JqElement | null}\r\n\t\t */\r\n\t\tstatic [_JqElement] = null\r\n\t\t/**\r\n\t\t * @param {string} name \r\n\t\t * @param {JqNode[]} nodes \r\n\t\t */\r\n\t\tconstructor(name, nodes) {\r\n\t\t\tsuper()\r\n\t\t\tnode[_JqElement] = JqElement.custom(this, name, getNodes(nodes))\r\n\t\t}\r\n\t}\r\n\r\n\tcustomElements.define(name, node)\r\n\treturn (...nodes) => /**@type {JqElement}*/ (new node(name, nodes), node[_JqElement])\r\n}\r\n\r\nconst _custom = Object.assign(customizer, { [CustomElements]: /** @type {string[]} */ ([]) })\r\n\r\n/**\r\n * @type {Customs} custom\r\n*/\r\nexport const custom = new Proxy(_custom, {\r\n\t/**\r\n\t * @param {string | symbol} prop\r\n\t */\r\n\tget(target, prop) {\r\n\t\tif (typeof prop == \"symbol\")\r\n\t\t\treturn target[prop]\r\n\r\n\t\treturn target(camelToKebab(prop))\r\n\t}\r\n})\r\n\r\n/**\r\n * @param {string} name \r\n * @param {unknown} value \r\n * @returns {JqAttribute}\r\n */\r\nfunction createAttribute(name, value) {\r\n\tconst _value = isPrimitive(value) ? String(value) : stringify(value)\r\n\treturn new JqAttribute(name, _value)\r\n}\r\n\r\n/**\r\n * @param {{ [x: string]: Primitive }} attrObj \r\n * @returns {JqList<JqAttribute, typeof JqAttribute>}\r\n */\r\nfunction _attr(attrObj) {\r\n\tconst attrList = JqAttribute.objectToJqAttributes(attrObj)\r\n\treturn attrList\r\n}\r\n\r\n/**\r\n * @param {unknown} value \r\n * @returns {JqText}\r\n */\r\nfunction createTextNode(value) {\r\n\tconst text = isPrimitive(value) ? String(value) : stringify(value)\r\n\treturn new JqText(text)\r\n}\r\n\r\n/**\r\n * @param {string[] | string} strs \r\n * @param  {unknown[]} values\r\n */\r\nfunction _text(strs, ...values) {\r\n\tlet _strs = strs\r\n\r\n\tif (Array.isArray(strs))\r\n\t\t_strs = escapeHTMLEntities(strs.reduce((acc, curr, i) =>\r\n\t\t\t\"\" + acc + (curr ?? \"\") + (stringify(values[i]) ?? \"\"), \"\"))\r\n\telse if (typeof _strs == \"string\")\r\n\t\t_strs = escapeHTMLEntities(_strs)\r\n\r\n\treturn createTextNode(_strs)\r\n}\r\n\r\n/**\r\n * @param {Array<JqElement | JqFragment | JqText>} _childNodes \r\n * @returns {JqFragment}\r\n */\r\nfunction fragment(..._childNodes) {\r\n\tconst { childNodes } = getNodes(_childNodes)\r\n\treturn new JqFragment(childNodes)\r\n}\r\n\r\n/**\r\n * @param  {Parameters<import(\"./utility.js\").AnimateFn>} parameters \r\n * @returns {JqAnimation}\r\n */\r\nexport function animate(...parameters) {\r\n\treturn new JqAnimation(...parameters)\r\n}\r\n\r\n/**\r\n * @param  {[string | { [x: string]: Primitive }, ...string[]]} args\r\n */\r\nfunction _css(...args) {\r\n\r\n\tconst [ruleName, ...ruleArgs] = args\r\n\r\n\tif (args.length == 1 && !isPrimitive(ruleName)) {\r\n\t\tconst rule = new JqCSSRule([\":host\", ...ruleArgs], /**@type {{ [x: string]: Primitive }}*/ (ruleName))\r\n\t\treturn rule\r\n\t}\r\n\r\n\t/**\r\n\t * @type {(...styleNodes: JqCSSRule[]) => JqCSSRule}\r\n\t */\r\n\treturn (...styleNodes) => {\r\n\t\tconst rule = new JqCSSRule([/** @type {string} */ (ruleName), ...ruleArgs], ...styleNodes)\r\n\t\treturn rule\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {{ [x: string | symbol]: unknown }} state\r\n * @returns {JqReference}\r\n */\r\nexport function ref(state) {\r\n\tconst refObj = new JqReference(state ?? {})\r\n\r\n\tconst refProxy = new Proxy(refObj, {\r\n\t\tget(target, prop) {\r\n\t\t\tif (prop == JqNodeReference)\r\n\t\t\t\treturn target\r\n\t\t\tif (typeof prop == \"symbol\")\r\n\t\t\t\treturn target[prop]\r\n\t\t\telse if (prop == \"deref\")\r\n\t\t\t\treturn target.deref\r\n\t\t\telse if (prop == \"refresh\")\r\n\t\t\t\treturn target.refresh\r\n\t\t\telse if (prop == \"attachTo\")\r\n\t\t\t\treturn target.attachTo\r\n\t\t\telse {\r\n\t\t\t\treturn target[StateReference][prop]\r\n\t\t\t}\r\n\t\t},\r\n\t\tset(target, prop, value) {\r\n\t\t\tif (typeof prop == \"symbol\")\r\n\t\t\t\treturn target[prop] = value\r\n\r\n\t\t\ttarget.jqParent?.setStateRefValue(prop, value)\r\n\t\t\treturn true\r\n\t\t}\r\n\t})\r\n\r\n\treturn refProxy\r\n}\r\n\r\nexport const nodes = { attr, text, fragment }\r\nexport { pathSetter, showIf, getNodes } from \"./utility.js\""],"names":["pathSetter","rootPath","relativePath","replace","isPrimitive","test","Object","isJqElement","xs","every","x","JqElement","isJqAttribute","JqAttribute","isJqFragment","JqFragment","isJqText","JqText","CREATED","Symbol","UPDATED","DELETED","UNCHANGED","getJqNodeConstructors","JqCSSProperty","JqCSSRule","JqAnimation","JqEvent","JqReference","throwError","e","Error","JqNodeReference","getNodes","nodes","childNodes","attributes","events","references","animations","callbacks","inlineStyles","blockStyles","childNodeClasses","i","node","entries","some","childNodeClass","_node","nodePosition","push","JqList","nodeClass","forEach","attribute","Array","isArray","convertToJqNode","value","jqNode","map","jqFragment","childNode","jqParent","convertToJqFragment","jqText","convertToJqText","jqCallback","JqCallback","convertToJqCallback","ctor","getPropertyValue","object","props","result","length","isNullish","escapeHTMLEntities","text","replacer","t","DOMParser","parseFromString","documentElement","textContent","stringify","String","JSON","values","returned","callback","_","refProxy","Proxy","context","this","get","target","prop","getStateRefValue","set","setStateRefValue","constructor","invoke","attachTo","HTMLElement","retNodeInsertPos","findIndex","splice","toString","indent","update","updateCallback","oldNode","reconcile","rootNode","parentNode","newNode","_diff","diff","node1","node2","updatedChanges","createdChanges","deletedChanges","firstProp","nestedProps","updateText","updateAttribute","updateElement","createFragment","createElement","deleteJqFragmentChild","deleteJqElementChild","delete","deleteSelf","childDiff","childDiffs","_node1","_node2","setAttribute","setText","_node1Parent","initial","createNode","replaceChild","_childNode","event","handler","a","attachHandler","element","addEventListener","detachHandler","removeEventListener","ElementReference","StateReference","state","htmlNode","deref","refresh","async","updateNode","domAnimation","parameters","animate","_styles","_options","_moreOptions","setStartStyles","styles","keys","filter","styleName","finalStyleValue","getComputedStyle","fromEntries","options","speed","easing","_callback","duration","fill","__styles","Map","name","camelToKebab","style","setProperty","head","body","ruleName","ruleArgs","styleNodes","errorMessage","join","trim","flatMap","styleNode","styleObject","styleProperties","key","createPropertyListFromStyleObject","space","repeat","attrNode","attrName","attrValue","setAttributeNode","static","attrObj","attrList","_name","_value","jqAttribute","document","createAttribute","jqElement","removeAttribute","from","attrObject","attachNode","attachChildren","appendChild","shadowRoot","createDocumentFragment","cloneNode","updateChildren","attachChild","oldChildNode","newChildNode","delChildIdx","is","primitives","primitive","nodeValue","createTextNode","remove","pop","scopedStyleSheet","assign","attachReferences","attachStyles","attachAttributes","attachEventListeners","attachAnimations","reference","find","hasElmStartIndent","emptyTagSelfClosure","includes","childMarkup","selfAttrs","selfCallbacks","selfMarkupHead","selfMarkupTail","recreate","callbackPosNodePairs","pos","idx","attachCallback","childNodePos","callbackPos","ignorePos","jqEvent","IntersectionObserver","observer","entry","observerCallback","isIntersecting","animation","disconnect","observe","Boolean","attachShadow","mode","canHaveShadow","styleSheet","stylePropertiesStr","attachCallbacks","updateAttributes","updateCallbacks","updateStyles","indexOfAttr","indexOf","showIf","condition","str","$","ofs","toLowerCase","nodeComparison","firstElemChildren","secondElemChildren","firstElemAttributes","secondElemAttributes","type","getPrototypeOf","Math","max","firstElemChild","secondElemChild","undefined","firstElemAttribute","secondElemAttribute","compareJqElements","firstFragChildren","secondFragChildren","firstFragChild","secondFragChild","compareJqFragments","jqAttribute1","jqAttribute2","compareProps","compareJqAttributes","affected1","affected2","compareJqTexts","isNode1","isNode2","compareJqGenericNodes","compareJqNodes","deletedProps","createdProps","updatedProps","unchangedProps","validHTMLElements","CustomElements","natives","globalize","_globalThis","globalThis","strs","_strs","reduce","acc","curr","attr","objectToJqAttributes","on","css","args","_custom","parent","customElements","_JqElement","super","custom","define","ref","refObj","fragment","_childNodes"],"mappings":"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"}
import{JqEvent,getNodes,escapeHTMLEntities,stringify,isNullish,JqAnimation,isPrimitive,JqReference,JqElement,JqCSSProperty,JqFragment,JqText,JqCSSRule,JqAttribute,StateReference,JqNodeReference,validHTMLElements}from"./utility.js";const scopedStyleSheets=new WeakMap;export const natives=new Proxy({},{get(e,c){if(typeof c=="symbol")return e[c];if(c=="globalize")return t;return(...e)=>{const{childNodes:t,attributes:r,inlineStyles:n,blockStyles:i,animations:s,events:o,references:u,callbacks:a}=getNodes(e);return new JqElement(c,t,r,o,s,u,n,i,a)};function t(t){validHTMLElements.forEach(e=>(t??globalThis)[e]=natives[e])}}});const text=new Proxy(_text,{});const attr=new Proxy(_attr,{get(e,t){if(typeof t=="symbol")return e[t];return e=>createAttribute(t,e)}});export const on=new Proxy({},{get(e,t){if(typeof t=="symbol")return e[t];return e=>new JqEvent(t,e)}});export const css=new Proxy(_css,{get(e,r){if(typeof r=="symbol")return e[r];return e=>{const t=new JqCSSProperty(r,e);return t}}});function createAttribute(e,t){const r=isPrimitive(t)?String(t):stringify(t);return new JqAttribute(e,r)}function _attr(e,...t){if(!Array.isArray(e)){const f=JqAttribute.objectToJqAttributes(e);return f}const r=/^(?<attrName>\p{L}[\d\p{L}]*)(?:\s*(?<eq>=)(?:\s*(?<attrValue>.*)))?\s*$/u;const n=e.join("").trim().match(r);if(n==null||t.length>1){throw new Error(`JqError - Invalid attribute syntax`)}const{attrName:i,eq:s,attrValue:o}=n.groups;const u=o!==""&&!isNullish(o)&&!isNullish(t[0]);const a=s&&(o===""||isNullish(o))&&isNullish(t[0]);if(!i||u||a){throw new Error(`JqError - Invalid attribute syntax`)}const c=(o===""?null:o)??t[0]??i;return createAttribute(i,c)}function createTextNode(e){const t=isPrimitive(e)?String(e):stringify(e);return new JqText(t)}function _text(e,...n){let t=e;if(Array.isArray(e))t=escapeHTMLEntities(e.reduce((e,t,r)=>""+e+(t??"")+(stringify(n[r])??""),""));else if(typeof t=="string")t=escapeHTMLEntities(t);return createTextNode(t)}function fragment(...e){const{childNodes:t}=getNodes(e);return new JqFragment(t)}export function animate(...e){return new JqAnimation(...e)}function _css(...e){const[r,...n]=e;if(e.length==1&&!isPrimitive(r)){const t=new JqCSSRule([":host",...n],r);return t}return(...e)=>{const t=new JqCSSRule([r,...n],...e);return t}}export function ref(e){const t=new JqReference(e??{});const r=new Proxy(t,{get(e,t){if(t==JqNodeReference)return e;if(typeof t=="symbol")return e[t];else if(t=="deref")return e.deref;else if(t=="refresh")return e.refresh;else if(t=="attachTo")return e.attachTo;else{return e[StateReference][t]}},set(e,t,r){if(typeof t=="symbol")return e[t]=r;e.jqParent?.setStateRefValue(t,r);return true}});return r}export const nodes={attr:attr,text:text,fragment:fragment};export{pathSetter,showIf,getNodes}from"./utility.js";
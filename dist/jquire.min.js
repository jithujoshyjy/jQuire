import{JqEvent,getNodes,escapeHTMLEntities,stringify,JqAnimation,isPrimitive,JqReference,JqElement,JqCSSProperty,JqFragment,JqText,JqCSSRule,JqAttribute,StateReference,JqNodeReference,validHTMLElements}from"./utility.js";const scopedStyleSheets=new WeakMap;export const natives=new Proxy({},{get(e,t){if(typeof t=="symbol")return e[t];if(t=="globalize")return globalize;return(...e)=>new JqElement(t,getNodes(e))}});function globalize(t){validHTMLElements.forEach(e=>(t??globalThis)[e]=natives[e])}const text=new Proxy(_text,{});const attr=new Proxy(_attr,{get(e,t){if(typeof t=="symbol")return e[t];return e=>createAttribute(t,e)}});export const on=new Proxy({},{get(e,t){if(typeof t=="symbol")return e[t];return e=>new JqEvent(t,e)}});export const css=new Proxy(_css,{get(e,r){if(typeof r=="symbol")return e[r];return e=>{const t=new JqCSSProperty(r,e);return t}}});function createAttribute(e,t){const r=isPrimitive(t)?String(t):stringify(t);return new JqAttribute(e,r)}function _attr(e){const t=JqAttribute.objectToJqAttributes(e);return t}function createTextNode(e){const t=isPrimitive(e)?String(e):stringify(e);return new JqText(t)}function _text(e,...n){let t=e;if(Array.isArray(e))t=escapeHTMLEntities(e.reduce((e,t,r)=>""+e+(t??"")+(stringify(n[r])??""),""));else if(typeof t=="string")t=escapeHTMLEntities(t);return createTextNode(t)}function fragment(...e){const{childNodes:t}=getNodes(e);return new JqFragment(t)}export function animate(...e){return new JqAnimation(...e)}function _css(...e){const[r,...n]=e;if(e.length==1&&!isPrimitive(r)){const t=new JqCSSRule([":host",...n],r);return t}return(...e)=>{const t=new JqCSSRule([r,...n],...e);return t}}export function ref(e){const t=new JqReference(e??{});const r=new Proxy(t,{get(e,t){if(t==JqNodeReference)return e;if(typeof t=="symbol")return e[t];else if(t=="deref")return e.deref;else if(t=="refresh")return e.refresh;else if(t=="attachTo")return e.attachTo;else{return e[StateReference][t]}},set(e,t,r){if(typeof t=="symbol")return e[t]=r;e.jqParent?.setStateRefValue(t,r);return true}});return r}export const nodes={attr:attr,text:text,fragment:fragment};export{pathSetter,showIf,getNodes}from"./utility.js";
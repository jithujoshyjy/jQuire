{"version":3,"file":"jquire.min.js","sources":["utility.js","jquire.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _JqAnimation_parameters, _JqAttribute_name, _JqAttribute_value;\n/**\n *\n * @param {string} rootPath\n * @returns {(relativePath: string) => string}\n */\nexport function pathSetter(rootPath) {\n    return function (relativePath) {\n        return rootPath.replace(/\\/\\s*$/, '') + '/' +\n            relativePath.replace(/^(?:\\s*\\.)?\\s*\\//, '');\n    };\n}\nexport function isPrimitive(test) {\n    return test !== Object(test);\n}\nconst isJqElement = (...xs) => xs.every(x => x instanceof JqElement);\nconst isJqAttribute = (...xs) => xs.every(x => x instanceof JqAttribute);\nconst isJqFragment = (...xs) => xs.every(x => x instanceof JqFragment);\nconst isJqText = (...xs) => xs.every(x => x instanceof JqText);\nconst CREATED = Symbol(\"created\");\nconst UPDATED = Symbol(\"updated\");\nconst DELETED = Symbol(\"deleted\");\nconst UNCHANGED = Symbol(\"unchanged\");\nconst getJqNodeConstructors = () => [JqElement, JqAttribute, JqCSSProperty, JqCSSRule, JqAnimation, JqEvent, JqReference, JqFragment, JqText];\nexport const throwError = (e) => { throw new Error(e); };\nexport const JqNodeReference = Symbol(\"JqNodeReference\");\n/**\n *\n * @param {Array<JqNode | Primitive>} nodes\n * @returns {{\n *\t\tchildNodes: Array<JqElement | JqFragment | JqText>,\n *\t\tattributes: JqAttribute[],\n *\t\tevents: JqEvent[], references: JqReference[],\n *\t\tanimations: JqAnimation[], inlineStyles: JqCSSProperty[],\n *\t\tblockStyles: JqCSSRule[], callbacks: JqCallback[]\n * }}\n */\nexport function getNodes(nodes) {\n    const childNodes = [];\n    const attributes = [];\n    const events = [];\n    const references = [];\n    const animations = [];\n    const callbacks = [];\n    const inlineStyles = [];\n    const blockStyles = [];\n    const childNodeClasses = [JqElement, JqFragment, JqText];\n    for (const [i, node] of nodes.entries()) {\n        if (childNodeClasses.some(childNodeClass => node instanceof childNodeClass)) {\n            const _node = node;\n            _node.nodePosition = i;\n            childNodes.push(_node);\n        }\n        else if (node instanceof JqAttribute) {\n            node.nodePosition = i;\n            attributes.push(node);\n        }\n        else if (node instanceof JqList && node.nodeClass === JqAttribute) {\n            node.nodes.forEach((attribute) => {\n                attribute.nodePosition = i;\n                attributes.push(attribute);\n            });\n        }\n        else if (node instanceof JqEvent) {\n            node.nodePosition = i;\n            events.push(node);\n        }\n        else if (node instanceof JqReference) {\n            const _node = node[JqNodeReference];\n            _node.nodePosition = i;\n            references.push(_node);\n        }\n        else if (node instanceof JqAnimation) {\n            node.nodePosition = i;\n            animations.push(node);\n        }\n        else if (node instanceof JqCSSProperty) {\n            node.nodePosition = i;\n            inlineStyles.push(node);\n        }\n        else if (node instanceof JqCSSRule) {\n            node.nodePosition = i;\n            blockStyles.push(node);\n        }\n        else if (Array.isArray(node)) {\n            const _node = convertToJqNode(node, null);\n            _node.nodePosition = i;\n            childNodes.push(_node);\n        }\n        else if (typeof node == \"function\") {\n            const _node = convertToJqNode(node, null);\n            _node.nodePosition = i;\n            callbacks.push(_node);\n        }\n        else if (isPrimitive(node)) {\n            const _node = convertToJqNode(node, null);\n            _node.nodePosition = i;\n            childNodes.push(_node);\n        }\n    }\n    return {\n        childNodes, attributes,\n        events, references,\n        animations, inlineStyles,\n        blockStyles, callbacks\n    };\n}\nexport function convertToJqNode(value, jqNode) {\n    const convertToJqText = (value) => {\n        const jqText = new JqText(value ?? '');\n        jqText.jqParent = jqNode;\n        return jqText;\n    };\n    const convertToJqCallback = (value) => {\n        const jqCallback = new JqCallback(value);\n        jqCallback.jqParent = jqNode;\n        return jqCallback;\n    };\n    const convertToJqFragment = (value) => {\n        const childNodes = value.map(x => convertToJqNode(x, null));\n        const jqFragment = new JqFragment(childNodes);\n        childNodes.forEach((childNode, i) => {\n            childNode.jqParent = jqFragment;\n            childNode.nodePosition = i;\n        });\n        jqFragment.jqParent = jqNode;\n        return jqFragment;\n    };\n    if (Array.isArray(value))\n        return convertToJqFragment(value);\n    if (isPrimitive(value))\n        return convertToJqText(value);\n    if (typeof value == \"function\")\n        return convertToJqCallback(value);\n    if (getJqNodeConstructors().some(ctor => value instanceof ctor))\n        return value;\n    return throwError(`JqError - Unexpected value found in place of a JqNode`);\n}\nconst getPropertyValue = (object, props) => {\n    let result = object;\n    for (let i = 0; i < props.length; i++) {\n        result = result?.[props[i]];\n        if (isNullish(result))\n            return result;\n    }\n    return result;\n};\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function escapeHTMLEntities(text) {\n    const entityRegex1 = /(&#x[0-9A-F]{2,6};)/gi;\n    const entityRegex2 = /(&[a-z0-9]+;)/gi;\n    const replacer = (t, e) => new DOMParser().parseFromString(e, \"text/html\").documentElement.textContent ?? '';\n    const _text = text.replace(entityRegex1, replacer)\n        .replace(entityRegex2, replacer);\n    return _text;\n}\nexport function stringify(value) {\n    return isPrimitive(value) ? String(value ?? '') : JSON.stringify(value);\n}\nexport function isNullish(...values) {\n    return values.every(x => x === null || x === undefined);\n}\nexport class JqCallback {\n    constructor(callback) {\n        this.nodePosition = -1;\n        this.jqParent = null;\n        this.returned = null;\n        this.callback = (_) => null;\n        this.refProxy = new Proxy({ context: this }, {\n            get(target, prop) {\n                return target.context.jqParent?.getStateRefValue(prop);\n            },\n            set(target, prop, value) {\n                target.context.jqParent?.setStateRefValue(prop, value);\n                return true;\n            }\n        });\n        this.update = {\n            context: this,\n            updateCallback() {\n                const jqCallback = this.context;\n                if (jqCallback.returned === null)\n                    return this;\n                const oldNode = jqCallback.returned;\n                const newNode = jqCallback.invoke();\n                const rootNode = oldNode, parentNode = oldNode;\n                reconcile(rootNode, parentNode, oldNode, newNode);\n                return this;\n                function reconcile(rootNode, parentNode, oldNode, newNode) {\n                    const _diff = diff(oldNode, newNode);\n                    const node1 = _diff.node1;\n                    const node2 = _diff.node2;\n                    const updatedChanges = _diff[UPDATED];\n                    const createdChanges = _diff[CREATED];\n                    const deletedChanges = _diff[DELETED];\n                    for (const [firstProp, ...nestedProps] of updatedChanges) {\n                        if (isJqText(node1, node2)) {\n                            if (firstProp == \"text\")\n                                updateText(_diff, [firstProp, ...nestedProps]);\n                        }\n                        else if (isJqAttribute(node1, node2)) {\n                            if (firstProp == \"value\")\n                                updateAttribute(_diff, [firstProp, ...nestedProps]);\n                        }\n                        else if (!isNullish(node1) && !isNullish(node2)) {\n                            updateElement(_diff, [firstProp, ...nestedProps]);\n                            jqCallback.returned = node2;\n                        }\n                    }\n                    for (const [firstProp, ...nestedProps] of createdChanges) {\n                        if (isJqText(node1, node2)) {\n                        }\n                        else if (isJqAttribute(node1, node2)) {\n                        }\n                        else if (isJqFragment(node1, node2)) {\n                            if (firstProp == \"childNodes\")\n                                createFragment(_diff, [firstProp, ...nestedProps]);\n                        }\n                        else if (isJqElement(node1, node2)) {\n                            if (firstProp == \"childNodes\")\n                                createElement(_diff, [firstProp, ...nestedProps]);\n                        }\n                    }\n                    for (const [firstProp, ...nestedProps] of deletedChanges) {\n                        if (isJqFragment(node1, node2)) {\n                            deleteJqFragmentChild(_diff, [firstProp, ...nestedProps]);\n                        }\n                        else if (isJqElement(node1, node2)) {\n                            deleteJqElementChild(_diff, [firstProp, ...nestedProps]);\n                        }\n                        else {\n                            node1.delete.deleteSelf();\n                        }\n                    }\n                    for (const childDiff of _diff.childDiffs)\n                        reconcile(rootNode, _diff.node1, childDiff.node1, childDiff.node2);\n                }\n                function updateAttribute(diff, props) {\n                    if (![diff.node1, diff.node2].every(node => node instanceof JqAttribute))\n                        return this;\n                    const _node1 = diff.node1;\n                    const _node2 = diff.node2;\n                    return _node1.update.setAttribute(_node2.value);\n                }\n                function updateText(diff, props) {\n                    if (![diff.node1, diff.node2].every(node => node instanceof JqText))\n                        return this;\n                    const _node1 = diff.node1;\n                    const _node2 = diff.node2;\n                    _node1.update.setText(_node2.text);\n                }\n                function updateElement(diff, props) {\n                    const _node1 = diff.node1;\n                    const _node2 = diff.node2;\n                    const _node1Parent = diff.node1.jqParent;\n                    _node2 instanceof JqText ? _node2.initial.createNode() : _node2.attachTo(null);\n                    _node1Parent.update.replaceChild(_node1, _node2);\n                }\n                function createElement(diff, [firstProp, _childNode]) {\n                    if (![diff.node1, diff.node2].every(node => node instanceof JqElement))\n                        return this;\n                    const _node1 = diff.node1;\n                    const _node2 = diff.node2;\n                    const childNode = _childNode;\n                    childNode.jqParent = _node1.jqParent;\n                    childNode.nodePosition = _node1.childNodes.length;\n                    _node1.childNodes.splice(_node1.childNodes.length, 0, childNode);\n                    childNode.attachTo(_node1);\n                    return this;\n                }\n                function createFragment(diff, [firstProp, _childNode]) {\n                    if (![diff.node1, diff.node2].every(node => node instanceof JqFragment))\n                        return this;\n                    const _node1 = diff.node1;\n                    const _node2 = diff.node2;\n                    const childNode = _childNode;\n                    childNode.jqParent = _node1.jqParent;\n                    childNode.nodePosition = _node1.childNodes.length;\n                    _node1.childNodes.splice(_node1.childNodes.length, 0, childNode);\n                    childNode.attachTo(_node1);\n                    return this;\n                }\n                function deleteJqFragmentChild(diff, [firstProp, _childNode]) {\n                    const _node1 = diff.node1;\n                    const _node2 = diff.node2;\n                    const childNode = _childNode;\n                    childNode.delete.deleteSelf();\n                }\n                function deleteJqElementChild(diff, [firstProp, _childNode]) {\n                    const _node1 = diff.node1;\n                    const _node2 = diff.node2;\n                    const childNode = _childNode;\n                    childNode.delete.deleteSelf();\n                }\n            }\n        };\n        this.callback = callback;\n    }\n    invoke() {\n        const returned = this.callback(this.refProxy);\n        const node = Array.isArray(returned) || isPrimitive(returned)\n            ? convertToJqNode(returned, this.jqParent)\n            : returned;\n        node.nodePosition = this.nodePosition;\n        node.jqParent = this.jqParent;\n        return node;\n    }\n    attachTo(node) {\n        if (node instanceof HTMLElement) {\n            const childNode = this.invoke();\n            childNode.attachTo(node);\n        }\n        else if (node instanceof JqElement) {\n            this.jqParent = node;\n            this.returned = this.invoke();\n            this.returned.attachTo(node);\n            let retNodeInsertPos = node.childNodes\n                .findIndex(childNode => this.nodePosition == childNode.nodePosition);\n            retNodeInsertPos = retNodeInsertPos == -1 ? (node.childNodes.length || 1) - 1 : retNodeInsertPos;\n            node.childNodes.splice(retNodeInsertPos, 0, this.returned);\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqCallback to a node not of instance JqElement or JqText or JqFragment or HTMLElement`);\n        }\n        return this;\n    }\n    toString(indent = 0) {\n        return this.returned?.toString(indent) ?? '';\n    }\n}\nexport class JqEvent {\n    constructor(event, handler) {\n        this.nodePosition = -1;\n        this.handler = (_) => { };\n        this.jqParent = null;\n        this.event = event;\n        this.handler = handler;\n    }\n    attachHandler(element) {\n        element.addEventListener(this.event, this.handler);\n    }\n    detachHandler(element) {\n        element.removeEventListener(this.event, this.handler);\n    }\n    attachTo(node) {\n        if (node instanceof HTMLElement) {\n            this.attachHandler(node);\n        }\n        else if (node instanceof JqElement) {\n            this.attachHandler(node.htmlNode);\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqEvent '${this.event}' to a node not of instance JqElement or JqFragment or HTMLElement`);\n        }\n        return this;\n    }\n}\nexport const ElementReference = Symbol(\"ElementReference\");\nexport const StateReference = Symbol(\"StateReference\");\nexport class JqReference {\n    constructor(state = {}) {\n        this[_a] = null;\n        this.nodePosition = -1;\n        this.jqParent = null;\n        this.attachTo = (node) => {\n            if (node instanceof HTMLElement) {\n                this[ElementReference] = node;\n            }\n            else if (node instanceof JqElement) {\n                this.jqParent = node;\n                this[ElementReference] = node.htmlNode;\n            }\n            else {\n                throw new Error(`JqError - Cannot attach JqReference to a node not of instance JqElement or JqFragment or HTMLElement`);\n            }\n            return this;\n        };\n        this.deref = () => {\n            return this[ElementReference];\n        };\n        this.refresh = async (callback) => {\n            const result = await callback(this[StateReference]);\n            this.jqParent.update.updateNode();\n            return result;\n        };\n        this[StateReference] = state;\n    }\n}\n_a = ElementReference;\nexport class JqAnimation {\n    constructor(...parameters) {\n        this.domAnimation = null;\n        this.nodePosition = -1;\n        _JqAnimation_parameters.set(this, void 0);\n        this.jqParent = null;\n        __classPrivateFieldSet(this, _JqAnimation_parameters, parameters, \"f\");\n    }\n    attachTo(node) {\n        if (node instanceof HTMLElement) {\n            this.animate(node);\n        }\n        else if (node instanceof JqElement) {\n            this.jqParent = node;\n            this.animate(node.htmlNode);\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqAnimation to a node not of instance JqElement or JqFragment or HTMLElement`);\n        }\n        return this;\n    }\n    animate(element) {\n        const [_styles, _options, ..._moreOptions] = __classPrivateFieldGet(this, _JqAnimation_parameters, \"f\");\n        const setStartStyles = (styles, ..._) => {\n            const styleNames = Object.keys(styles).filter(styleName => !Array.isArray(styles[styleName]));\n            const _styles = styleNames.map(styleName => {\n                const finalStyleValue = styles[styleName];\n                const initialStyleValue = getComputedStyle(element).getPropertyValue(styleName);\n                return [styleName, [initialStyleValue, finalStyleValue]];\n            });\n            const x = { ...styles, ...Object.fromEntries(_styles) };\n            return x;\n        };\n        let callback = null;\n        let options = (isPrimitive(_options) ? null : _options);\n        options ?? (options = (() => {\n            const [speed, easing, _callback] = [_options, ..._moreOptions];\n            if (_callback)\n                callback = _callback;\n            const option = {\n                duration: speed ?? 400,\n                easing: easing ?? \"linear\",\n                fill: \"forwards\"\n            };\n            return option;\n        })());\n        const __styles = (Array.isArray(_styles)\n            ? _styles.map(x => x instanceof Map ? Object.fromEntries(x) : x)\n            : _styles instanceof Map ? Object.fromEntries(_styles) : _styles);\n        const styles = (Array.isArray(__styles)\n            ? __styles.map(setStartStyles)\n            : setStartStyles(__styles));\n        this.domAnimation = element.animate(styles, options);\n        callback && this.domAnimation.addEventListener(\"finish\", callback);\n        return this.domAnimation;\n    }\n}\n_JqAnimation_parameters = new WeakMap();\nexport class JqCSSProperty {\n    constructor(name, value) {\n        this.nodePosition = -1;\n        this.jqParent = null;\n        this.name = camelToKebab(name).replace(/_/g, '-');\n        this.value = String(value);\n    }\n    attachTo(node) {\n        if (node instanceof HTMLElement) {\n            node.style.setProperty(this.name, this.value);\n        }\n        else if (node instanceof JqElement) {\n            this.jqParent = node;\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqCSS.Property to a node not of instance JqElement or JqFragment or HTMLElement`);\n        }\n        return this;\n    }\n    toString(indent = 1) {\n        return `${this.name}: ${this.value};`;\n    }\n}\nexport class JqCSSRule {\n    constructor([ruleName, ...ruleArgs], ...styleNodes) {\n        this.nodePosition = -1;\n        this.body = [];\n        this.jqParent = null;\n        this.head = [ruleName, ...ruleArgs];\n        const errorMessage = `JqError - Invalid argument passed to ${this.head.join(' ').trim()}(...)`;\n        this.body = styleNodes.flatMap(styleNode => styleNode instanceof JqCSSProperty || styleNode instanceof JqCSSRule\n            ? styleNode\n            : createPropertyListFromStyleObject(errorMessage, styleNode).nodes);\n    }\n    attachTo(node) {\n        if (node instanceof HTMLElement) {\n            // node.style.setProperty(this.name, this.value)\n        }\n        else if (node instanceof JqElement) {\n            this.jqParent = node;\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqCSS.Rule to a node not of instance JqElement or JqFragment or HTMLElement`);\n        }\n        return this;\n    }\n    toString(indent = 1) {\n        const space = '\\t'.repeat(indent);\n        let head = this.head.join(' ').trim();\n        return `${head} {\\n${space}${this.body.map(styleNode => styleNode.toString(indent + 1)).join('\\n' + space)}\\n${'\\t'.repeat(indent - 1)}}`;\n    }\n}\nclass JqAttribute {\n    constructor(name, value) {\n        _JqAttribute_name.set(this, '');\n        _JqAttribute_value.set(this, '');\n        this.nodePosition = -1;\n        this.attrNode = null;\n        this.jqParent = null;\n        this.initial = {\n            context: this,\n            createNode() {\n                const jqAttribute = this.context;\n                jqAttribute.attrNode = document.createAttribute(jqAttribute.name);\n                jqAttribute.attrNode.value = jqAttribute.value;\n                return this;\n            }\n        };\n        this.update = {\n            context: this,\n            updateAttribute() {\n                const jqAttribute = this.context;\n                jqAttribute.attrNode.value = jqAttribute.value;\n                return this;\n            },\n            setAttribute(value) {\n                const jqAttribute = this.context;\n                if (value === jqAttribute.value)\n                    return this;\n                jqAttribute.value = value;\n                jqAttribute.attrNode.value = value;\n                return this;\n            }\n        };\n        this.delete = {\n            context: this,\n            deleteSelf() {\n                const jqAttribute = this.context;\n                const jqElement = jqAttribute.jqParent;\n                if (!jqElement)\n                    return this;\n                jqElement.delete.removeAttribute(jqAttribute);\n                jqAttribute.attrNode = null;\n                return this;\n            }\n        };\n        this.name = camelToKebab(name).replace(/_/g, '-');\n        this.value = value;\n    }\n    get name() {\n        return __classPrivateFieldGet(this, _JqAttribute_name, \"f\");\n    }\n    set name(attrName) {\n        __classPrivateFieldSet(this, _JqAttribute_name, attrName, \"f\");\n    }\n    get value() {\n        return __classPrivateFieldGet(this, _JqAttribute_value, \"f\");\n    }\n    set value(attrValue) {\n        __classPrivateFieldSet(this, _JqAttribute_value, attrValue, \"f\");\n    }\n    attachTo(node) {\n        this.initial.createNode();\n        if (node instanceof HTMLElement) {\n            node.setAttributeNode(this.attrNode);\n        }\n        else if (node instanceof JqElement) {\n            this.jqParent = node;\n            node.htmlNode.setAttributeNode(this.attrNode);\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqAttribute '${this.name}' to a node not of instance JqElement or JqFragment or HTMLElement`);\n        }\n        return this;\n    }\n    static objectToJqAttributes(attrObj) {\n        const errorMessage = `JqError - Invalid argument passed to attr(...)`;\n        if (attrObj === null || typeof attrObj !== \"object\")\n            throw new Error(errorMessage);\n        const attrList = Object.entries(attrObj)\n            .map(([key, value]) => {\n            const _name = camelToKebab(key).replace(/_/g, '-');\n            const _value = String(value);\n            const attribute = new JqAttribute(_name, _value);\n            return attribute;\n        });\n        return new JqList(JqAttribute, attrList);\n    }\n}\n_JqAttribute_name = new WeakMap(), _JqAttribute_value = new WeakMap();\nJqAttribute.List = {\n    from(attrObject) {\n        if (attrObject === null || typeof attrObject !== \"object\")\n            throw new Error(`JqError - Invalid argument passed to attr(...); expected an object.`);\n        const attributes = Object.entries(attrObject)\n            .map(([key, value]) => {\n            const _name = camelToKebab(key).replace(/_/g, '-');\n            const _value = String(value);\n            const attribute = new JqAttribute(_name, _value);\n            return attribute;\n        });\n        return new JqList(JqAttribute, attributes);\n    }\n};\nexport { JqAttribute };\nexport class JqFragment {\n    constructor(childNodes) {\n        this.nodePosition = -1;\n        this.jqParent = null;\n        this.htmlNode = null;\n        this.childNodes = [];\n        this.initial = {\n            context: this,\n            createNode() {\n                const jqFragment = this.context;\n                jqFragment.htmlNode = document.createDocumentFragment().cloneNode();\n                return this;\n            },\n            attachChildren() {\n                const jqFragment = this.context;\n                for (const childNode of jqFragment.childNodes) {\n                    childNode.attachTo(jqFragment);\n                }\n                return this;\n            }\n        };\n        this.update = {\n            context: this,\n            updateNode() {\n                this.updateChildren();\n                return this;\n            },\n            updateChildren() {\n                const jqFragment = this.context;\n                for (const childNode of jqFragment.childNodes) {\n                    childNode.update.updateNode();\n                }\n                return this;\n            },\n            attachChild(childNode) {\n                const jqFragment = this.context;\n                if (jqFragment.jqParent instanceof JqFragment) {\n                    jqFragment.jqParent.update.attachChild(childNode);\n                    return this;\n                }\n                if (jqFragment.jqParent instanceof JqElement) {\n                    const node = jqFragment.jqParent.shadowRoot ?? jqFragment.jqParent.htmlNode;\n                    node.appendChild(childNode.htmlNode);\n                    return this;\n                }\n                return this;\n            },\n            replaceChild(oldChildNode, newChildNode) {\n                const jqFragment = this.context;\n                const delChildIdx = jqFragment.childNodes.findIndex(childNode => Object.is(childNode, oldChildNode));\n                if (delChildIdx == -1)\n                    throwError(\"JqInternalError - childNode not found in jqFragment.childNodes\");\n                jqFragment.childNodes.splice(delChildIdx, 1, newChildNode);\n                if (!(oldChildNode instanceof JqText))\n                    oldChildNode.childNodes.forEach(childNode => childNode.delete.deleteSelf());\n                oldChildNode.jqParent.htmlNode.replaceChild(newChildNode.htmlNode, oldChildNode.htmlNode);\n                return this;\n            }\n        };\n        this.delete = {\n            context: this,\n            deleteSelf() {\n                const jqFragment = this.context;\n                const jqParent = jqFragment.jqParent;\n                const delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqFragment));\n                if (delChildIdx == -1)\n                    throwError(\"JqInternalError - JqFragment not found in its jqParent.childNodes\");\n                jqParent.childNodes.splice(delChildIdx, 1);\n                jqFragment.childNodes.forEach(childNode => childNode.delete.deleteSelf());\n                return this;\n            }\n        };\n        this.childNodes = childNodes;\n    }\n    attachTo(node) {\n        const attachNode = () => this.initial\n            .createNode()\n            .attachChildren();\n        if (node === null) {\n            attachNode();\n        }\n        else if (node instanceof HTMLElement) {\n            attachNode();\n            node.appendChild(this.htmlNode);\n        }\n        else if (node instanceof JqElement) {\n            this.jqParent = node, attachNode();\n            (node.shadowRoot ?? node.htmlNode).appendChild(this.htmlNode);\n        }\n        else if (node instanceof JqFragment) {\n            this.jqParent = node, attachNode();\n            node.htmlNode.appendChild(this.htmlNode);\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqFragment to a node not of instance JqElement or JqFragment or HTMLElement`);\n        }\n        return this.toString();\n    }\n    getStateRefValue(prop) {\n        return this.jqParent?.getStateRefValue(prop);\n    }\n    setStateRefValue(prop, value) {\n        return this.jqParent?.setStateRefValue(prop, value);\n    }\n    toString(indent = 0) {\n        return this.childNodes.map(x => x.toString(indent)).join('\\n' + '\\t'.repeat(indent));\n    }\n}\nexport class JqText {\n    constructor(...primitives) {\n        this.nodePosition = -1;\n        this.jqParent = null;\n        this.htmlNode = null;\n        this.text = '';\n        this.initial = {\n            context: this,\n            createNode() {\n                const jqElement = this.context;\n                jqElement.htmlNode = document.createTextNode(jqElement.text);\n                return this;\n            }\n        };\n        this.update = {\n            context: this,\n            updateNode() {\n                return this;\n            },\n            setText(text) {\n                const jqText = this.context;\n                jqText.htmlNode.nodeValue = jqText.text = text;\n            }\n        };\n        this.delete = {\n            context: this,\n            deleteSelf() {\n                const jqText = this.context;\n                const jqParent = jqText.jqParent;\n                const delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqText));\n                jqParent.childNodes.splice(delChildIdx, 1);\n                jqText.htmlNode.remove();\n                return this;\n            }\n        };\n        this.text = primitives.map(primitive => String(primitive ?? '')).join('');\n    }\n    attachTo(node) {\n        if (node === null) {\n            return this.toString();\n        }\n        this.initial.createNode();\n        if (node instanceof HTMLElement) {\n            node.appendChild(this.htmlNode);\n            return this.toString();\n        }\n        else if (node instanceof JqElement) {\n            this.jqParent = node;\n            (node.shadowRoot ?? node.htmlNode).appendChild(this.htmlNode);\n        }\n        else if (node instanceof JqFragment) {\n            this.jqParent = node;\n            node.htmlNode.appendChild(this.htmlNode);\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqText to a node not of instance JqElement or JqFragment or HTMLElement`);\n        }\n        return this.toString();\n    }\n    toString(indent = 0) {\n        return this.htmlNode.nodeValue ?? '';\n    }\n}\nexport class JqList {\n    constructor(nodeClass, nodes) {\n        this.nodes = [];\n        this.nodeClass = nodeClass;\n        this.nodes = nodes;\n    }\n    push(node) {\n        if (!(node instanceof this.nodeClass))\n            throw new Error(`JqError - Cannot push node not of instance '${this.nodeClass.name}' into JqList<${this.nodeClass.name}>`);\n        this.nodes.push(node);\n    }\n    pop() {\n        return this.nodes.pop();\n    }\n}\nclass JqElement {\n    constructor(name, props) {\n        this.jqParent = null;\n        this.shadowRoot = null;\n        this.htmlNode = null;\n        this.childNodes = [];\n        this.attributes = [];\n        this.events = [];\n        this.animations = [];\n        this.references = [];\n        this.inlineStyles = [];\n        this.blockStyles = [];\n        this.callbacks = [];\n        this.scopedStyleSheet = null;\n        this.nodePosition = -1;\n        this.initial = {\n            context: this,\n            createNode(recreate = true) {\n                const jqElement = this.context;\n                if (recreate)\n                    jqElement.htmlNode = document.createElement(jqElement.name);\n                return this;\n            },\n            attachAttributes() {\n                const jqElement = this.context;\n                for (const attribute of jqElement.attributes) {\n                    attribute.attachTo(jqElement);\n                }\n                return this;\n            },\n            attachChildren() {\n                const jqElement = this.context;\n                const callbackPosNodePairs = jqElement.callbacks.map(callback => [callback.nodePosition, callback]);\n                for (const childNode of jqElement.childNodes) {\n                    callbackPosNodePairs.forEach(([pos, callback], idx) => attachCallback(idx, childNode.nodePosition, pos, callback));\n                    childNode.attachTo(jqElement);\n                }\n                callbackPosNodePairs.forEach(([pos, callback], idx) => attachCallback(idx, -1, pos, callback, true));\n                return this;\n                function attachCallback(idx, childNodePos, callbackPos, callback, ignorePos = false) {\n                    if (!ignorePos && callbackPos >= childNodePos)\n                        return;\n                    callback.attachTo(jqElement);\n                    callbackPosNodePairs.splice(idx, 1);\n                }\n            },\n            attachEventListeners() {\n                const jqElement = this.context;\n                for (const jqEvent of jqElement.events) {\n                    jqEvent.attachTo(jqElement);\n                }\n                return this;\n            },\n            attachAnimations() {\n                const jqElement = this.context;\n                if (jqElement.animations.length == 0)\n                    return this;\n                observeElement(jqElement.htmlNode, ([entry, observer]) => {\n                    if (entry.isIntersecting) {\n                        for (const animation of jqElement.animations) {\n                            animation.attachTo(jqElement);\n                        }\n                        observer.disconnect();\n                    }\n                });\n                return this;\n            },\n            attachStyles() {\n                const jqElement = this.context;\n                if (jqElement.inlineStyles.length == 0 && jqElement.blockStyles.length == 0)\n                    return this;\n                if (canHaveShadow(jqElement.htmlNode)) {\n                    jqElement.shadowRoot = jqElement.htmlNode.attachShadow({ mode: \"open\" });\n                    const styleSheet = document.createElement(\"style\");\n                    styleSheet.textContent = '';\n                    jqElement.scopedStyleSheet = styleSheet;\n                    jqElement.shadowRoot.appendChild(styleSheet);\n                    const styleProperties = [];\n                    for (const style of jqElement.inlineStyles) {\n                        style.attachTo(jqElement);\n                        styleProperties.push(style);\n                    }\n                    for (const style of jqElement.blockStyles) {\n                        style.attachTo(jqElement);\n                        styleSheet.textContent += '\\n' + style.toString();\n                    }\n                    const stylePropertiesStr = styleProperties.join(\"\\n\\t\");\n                    if (stylePropertiesStr.length > 0)\n                        styleSheet.textContent += `\\n:host {\\n\\t${stylePropertiesStr}\\n}`;\n                    return this;\n                }\n                throw new Error(`JqError - scoped styles are not supported for '${jqElement.name}' element.`);\n            },\n            attachReferences() {\n                const jqElement = this.context;\n                for (const reference of jqElement.references) {\n                    reference.attachTo(jqElement);\n                }\n                return this;\n            },\n            attachCallbacks() {\n                const jqElement = this.context;\n                for (const callback of jqElement.callbacks) {\n                    callback.attachTo(jqElement);\n                }\n                return this;\n            }\n        };\n        this.update = {\n            context: this,\n            updateNode() {\n                this\n                    .updateAttributes()\n                    .updateChildren()\n                    .updateCallbacks();\n                return this;\n            },\n            updateAttributes() {\n                const jqElement = this.context;\n                for (const attribute of jqElement.attributes) {\n                    attribute.update.setAttribute(attribute.value);\n                }\n                return this;\n            },\n            updateChildren() {\n                const jqElement = this.context;\n                for (const childNode of jqElement.childNodes) {\n                    childNode.update.updateNode();\n                }\n                return this;\n            },\n            updateStyles() {\n                const jqElement = this.context;\n                for (const style of jqElement.inlineStyles) {\n                    // style.update.updateNode()\n                }\n                return this;\n            },\n            updateCallbacks() {\n                const jqElement = this.context;\n                for (const callback of jqElement.callbacks) {\n                    callback.update.updateCallback();\n                }\n                return this;\n            },\n            replaceChild(oldChildNode, newChildNode) {\n                const jqElement = this.context;\n                const delChildIdx = jqElement.childNodes.findIndex(childNode => Object.is(childNode, oldChildNode));\n                if (delChildIdx == -1)\n                    throwError(\"JqInternalError - childNode not found in jqElement.childNodes\");\n                jqElement.childNodes.splice(delChildIdx, 1, newChildNode);\n                if (!(oldChildNode instanceof JqText))\n                    oldChildNode.childNodes.forEach(childNode => childNode.delete.deleteSelf());\n                oldChildNode.jqParent.htmlNode.replaceChild(newChildNode.htmlNode, oldChildNode.htmlNode);\n                return this;\n            }\n        };\n        this.delete = {\n            context: this,\n            removeAttribute(jqAttribute) {\n                const jqElement = this.context;\n                const indexOfAttr = jqElement.attributes.indexOf(jqAttribute);\n                if (indexOfAttr != -1)\n                    jqElement.attributes.splice(indexOfAttr, 1);\n                jqElement.htmlNode.removeAttribute(jqAttribute.name);\n                return this;\n            },\n            deleteSelf() {\n                const jqElement = this.context;\n                const jqParent = jqElement.jqParent;\n                const delChildIdx = jqParent.childNodes.findIndex(childNode => Object.is(childNode, jqElement));\n                if (delChildIdx == -1)\n                    throwError(\"JqInternalError - JqElement not found in its jqParent.childNodes\");\n                jqParent.childNodes.splice(delChildIdx, 1);\n                jqElement.childNodes.forEach(childNode => childNode.delete.deleteSelf());\n                jqElement.htmlNode.remove();\n                return this;\n            }\n        };\n        this.name = name;\n        Object.assign(this, props);\n    }\n    attachTo(node) {\n        const attachNode = () => this.initial\n            .createNode(isNullish(this.htmlNode))\n            .attachReferences()\n            .attachStyles()\n            .attachAttributes()\n            .attachChildren()\n            .attachEventListeners()\n            .attachAnimations();\n        if (node === null) {\n            attachNode();\n        }\n        else if (node instanceof HTMLElement) {\n            attachNode();\n            node.appendChild(this.htmlNode);\n        }\n        else if (node instanceof JqElement) {\n            this.jqParent = node, attachNode();\n            (node.shadowRoot ?? node.htmlNode).appendChild(this.htmlNode);\n        }\n        else if (node instanceof JqFragment) {\n            this.jqParent = node, attachNode();\n            node.htmlNode.appendChild(this.htmlNode);\n            node.update.attachChild(this);\n        }\n        else {\n            throw new Error(`JqError - Cannot attach JqElement '${this.name}' to a node not of instance JqElement or JqFragment or HTMLElement`);\n        }\n        return this.toString();\n    }\n    getStateRefValue(prop) {\n        const reference = this.references?.find(reference => prop in reference[StateReference]);\n        return reference?.[StateReference][prop] ?? this.jqParent?.getStateRefValue(prop);\n    }\n    setStateRefValue(prop, value) {\n        const reference = this.references?.find(reference => prop in reference[StateReference]);\n        if (reference) {\n            reference[StateReference][prop] = value;\n            this.update.updateNode();\n            return value;\n        }\n        const _value = this.jqParent?.setStateRefValue(prop, value);\n        return _value;\n    }\n    toString(indent = 0) {\n        const emptyTags = [\n            \"area\", \"base\", \"br\",\n            \"col\", \"embed\", \"hr\",\n            \"img\", \"input\", \"link\",\n            \"meta\", \"param\", \"source\",\n            \"track\", \"wbr\"\n        ];\n        const hasElmStartIndent = (length) => length > 0 ? '\\n' + '\\t'.repeat(indent + 1) : '';\n        const hasElmEndIndent = (length) => length > 0 ? '\\n' + '\\t'.repeat(indent) : '';\n        const emptyTagSelfClosure = emptyTags.includes(this.name) ? '/' : '';\n        const childMarkup = this.childNodes.map(x => x.toString(indent + 1)).join('\\n' + '\\t'.repeat(indent + 1));\n        const selfAttrs = this.attributes.map(x => `${x.name} = \"${stringify(x.value)}\"`).join(\" \");\n        const selfCallbacks = this.callbacks.map(x => x.toString(indent + 1)).join('\\n' + '\\t'.repeat(indent));\n        const selfMarkupHead = `<${this.name}${selfAttrs.length ? ' ' : ''}${selfAttrs}${emptyTagSelfClosure}>`;\n        const selfMarkupTail = `${hasElmStartIndent(childMarkup.length || selfCallbacks.length) +\n            childMarkup +\n            (selfCallbacks.length ? hasElmStartIndent(childMarkup.length) + selfCallbacks : '') +\n            hasElmEndIndent(childMarkup.length || selfCallbacks.length)}</${this.name}>`;\n        const selfMarkup = `${selfMarkupHead}${!emptyTagSelfClosure ? selfMarkupTail : ''}`;\n        return selfMarkup;\n    }\n}\nJqElement.custom = (context, name, nodes) => {\n    return new JqElement(name, { ...nodes, htmlNode: context });\n};\nexport { JqElement };\n/**\n *\n * @param {boolean} condition\n * @returns {true | null}\n */\nexport function showIf(condition) {\n    return condition || null;\n}\nexport function observeElement(element, callback) {\n    const observerCallback = callback => (entries, observer) => entries.forEach(entry => callback([entry, observer]));\n    return new IntersectionObserver(observerCallback(callback)).observe(element);\n}\nexport function canHaveShadow(element) {\n    try {\n        return Boolean(element.cloneNode().attachShadow({ mode: \"open\" }));\n    }\n    catch {\n        return false;\n    }\n}\nexport const camelToKebab = (str) => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? \"-\" : \"\") + $.toLowerCase());\nexport function createPropertyListFromStyleObject(errorMessage, styleObject) {\n    const isObject = (value) => value !== null && typeof value == \"object\";\n    if (!isObject(styleObject))\n        throw new Error(errorMessage);\n    const styleProperties = Object.entries(styleObject)\n        .map(([key, value]) => new JqCSSProperty(key, value));\n    return new JqList(JqCSSProperty, styleProperties);\n}\nexport function adjustColor(col, amt) {\n    let usePound = false;\n    if (col[0] == \"#\") {\n        col = col.slice(1);\n        usePound = true;\n    }\n    const num = parseInt(col, 16);\n    let r = (num >> 16) + amt;\n    if (r > 255)\n        r = 255;\n    else if (r < 0)\n        r = 0;\n    let b = ((num >> 8) & 0x00FF) + amt;\n    if (b > 255)\n        b = 255;\n    else if (b < 0)\n        b = 0;\n    let g = (num & 0x0000FF) + amt;\n    if (g > 255)\n        g = 255;\n    else if (g < 0)\n        g = 0;\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\nfunction diff(node1, node2) {\n    const nodeComparison = compareJqNodes(node1, node2);\n    return nodeComparison;\n    function compareProps(affected1, affected2) {\n        const diff = {\n            type: Object.getPrototypeOf(affected1.object).constructor,\n            node1: affected1.object,\n            node2: affected2.object,\n            [CREATED]: [],\n            [UPDATED]: [],\n            [DELETED]: [],\n            [UNCHANGED]: [],\n            childDiffs: [],\n        };\n        const deletedProps = affected1.props.filter(prop => isNullish(getPropertyValue(affected2.object, prop)));\n        diff[DELETED] = deletedProps;\n        const createdProps = affected2.props.filter(prop => isNullish(getPropertyValue(affected1.object, prop)));\n        diff[CREATED] = createdProps;\n        const updatedProps = affected1.props.filter(prop => getPropertyValue(affected2.object, prop) !== getPropertyValue(affected1.object, prop));\n        diff[UPDATED] = updatedProps;\n        const unchangedProps = affected1.props.filter(prop => getPropertyValue(affected2.object, prop) === getPropertyValue(affected1.object, prop));\n        diff[UNCHANGED] = unchangedProps;\n        return diff;\n    }\n    function compareJqTexts(node1, node2) {\n        const affected1 = {\n            object: node1,\n            props: [[\"text\"]]\n        };\n        const affected2 = {\n            object: node2,\n            props: [[\"text\"]]\n        };\n        const diff = compareProps(affected1, affected2);\n        return diff;\n    }\n    function compareJqAttributes(jqAttribute1, jqAttribute2) {\n        const affected1 = {\n            object: jqAttribute1,\n            props: [[\"name\"], [\"value\"]]\n        };\n        const affected2 = {\n            object: jqAttribute2,\n            props: [[\"name\"], [\"value\"]]\n        };\n        const diff = compareProps(affected1, affected2);\n        return diff;\n    }\n    function compareJqFragments(node1, node2) {\n        const firstFragChildren = node1.childNodes;\n        const secondFragChildren = node2.childNodes;\n        const _diff = {\n            type: Object.getPrototypeOf(node1).constructor,\n            node1: node1,\n            node2: node2,\n            [CREATED]: [],\n            [UPDATED]: [],\n            [DELETED]: [],\n            [UNCHANGED]: [],\n            childDiffs: [],\n        };\n        for (let i = 0; i < Math.max(firstFragChildren.length, secondFragChildren.length); i++) {\n            const firstFragChild = firstFragChildren[i];\n            const secondFragChild = secondFragChildren[i];\n            if (firstFragChild === undefined)\n                _diff[CREATED].push([\"childNodes\", secondFragChild]);\n            else if (secondFragChild === undefined)\n                _diff[DELETED].push([\"childNodes\", firstFragChild]);\n            else\n                _diff.childDiffs.push(diff(firstFragChild, secondFragChild));\n        }\n        return _diff;\n    }\n    function compareJqElements(node1, node2) {\n        const firstElemChildren = node1.childNodes;\n        const secondElemChildren = node2.childNodes;\n        const firstElemAttributes = node1.attributes;\n        const secondElemAttributes = node2.attributes;\n        const _diff = {\n            type: Object.getPrototypeOf(node1).constructor,\n            node1: node1,\n            node2: node2,\n            [CREATED]: [],\n            [UPDATED]: [],\n            [DELETED]: [],\n            [UNCHANGED]: [],\n            childDiffs: [],\n        };\n        for (let i = 0; i < Math.max(firstElemChildren.length, secondElemChildren.length); i++) {\n            const firstElemChild = firstElemChildren[i];\n            const secondElemChild = secondElemChildren[i];\n            if (firstElemChild === undefined)\n                _diff[CREATED].push([\"childNodes\", i + \"\"]);\n            else if (secondElemChild === undefined)\n                _diff[DELETED].push([\"childNodes\", i + \"\"]);\n            else\n                _diff.childDiffs.push(diff(firstElemChild, secondElemChild));\n        }\n        for (let i = 0; i < Math.max(firstElemAttributes.length, secondElemAttributes.length); i++) {\n            const firstElemAttribute = firstElemAttributes[i];\n            const secondElemAttribute = secondElemAttributes[i];\n            if (firstElemAttribute === undefined)\n                _diff[CREATED].push([\"attributes\", i + '']);\n            else if (secondElemAttribute === undefined)\n                _diff[DELETED].push([\"attributes\", i + '']);\n            else\n                _diff.childDiffs.push(diff(firstElemAttribute, secondElemAttribute));\n        }\n        return _diff;\n    }\n    function compareJqNodes(node1, node2) {\n        if (isJqElement(node1) && isJqElement(node2))\n            return compareJqElements(node1, node2);\n        if (isJqFragment(node1) && isJqFragment(node2))\n            return compareJqFragments(node1, node2);\n        if (isJqAttribute(node1) && isJqAttribute(node2))\n            return compareJqAttributes(node1, node2);\n        if (isJqText(node1) && isJqText(node2))\n            return compareJqTexts(node1, node2);\n        return compareJqGenericNodes(node1, node2);\n    }\n    function compareJqGenericNodes(node1, node2) {\n        const _diff = {\n            type: Object.getPrototypeOf(node1).constructor,\n            node1: node1,\n            node2: node2,\n            [CREATED]: [],\n            [UPDATED]: [],\n            [DELETED]: [],\n            [UNCHANGED]: [],\n            childDiffs: [],\n        };\n        const [isNode1, isNode2] = [isNullish(node1), isNullish(node2)];\n        if (isNode1)\n            _diff[CREATED].push([\"self\"]);\n        if (isNode2)\n            _diff[DELETED].push([\"self\"]);\n        if (isNode1 || isNode2)\n            return _diff;\n        const indexOfNode1 = node1.jqParent.childNodes.findIndex(x => Object.is(node1, x));\n        _diff[UPDATED].push([\"childNodes\", node2]);\n        return _diff;\n    }\n}\nexport const validHTMLElements = [\n    \"a\",\n    \"address\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"base\",\n    \"bdo\",\n    \"br\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"cite\",\n    \"code\",\n    \"col\",\n    \"colgroup\",\n    \"command\",\n    \"data\",\n    \"datalist\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"dialog\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"fieldset\",\n    \"figure\",\n    \"figcaption\",\n    \"footer\",\n    \"form\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"head\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"html\",\n    \"i\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"kbd\",\n    \"label\",\n    \"legend\",\n    \"li\",\n    \"link\",\n    \"main\",\n    \"map\",\n    \"mark\",\n    \"math\",\n    \"meter\",\n    \"nav\",\n    \"noscript\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"output\",\n    \"p\",\n    \"param\",\n    \"pre\",\n    \"progress\",\n    \"portal\",\n    \"q\",\n    \"ruby\",\n    \"s\",\n    \"section\",\n    \"small\",\n    \"span\",\n    \"strike\",\n    \"tt\",\n    \"u\",\n    \"var\",\n    \"video\",\n    \"wbr\",\n    \"abbr\",\n    \"area\",\n    \"bdi\",\n    \"blockquote\",\n    \"body\",\n    \"iframe\",\n    \"menu\",\n    \"meta\",\n    \"picture\",\n    \"rb\",\n    \"rp\",\n    \"rt\",\n    \"rtc\",\n    \"samp\",\n    \"script\",\n    \"select\",\n    \"slot\",\n    \"source\",\n    \"strong\",\n    \"style\",\n    \"sub\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"template\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"title\",\n    \"tr\",\n    \"track\",\n    \"ul\",\n];\n","var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\nimport { JqEvent, getNodes, escapeHTMLEntities, stringify, JqAnimation, isPrimitive, JqReference, JqElement, JqCSSProperty, JqFragment, JqText, JqCSSRule, JqAttribute, StateReference, JqNodeReference, validHTMLElements, camelToKebab } from \"./utility.js\";\nconst scopedStyleSheets = new WeakMap();\nconst CustomElements = Symbol(\"CustomElements\");\n/**\n * @preserve\n * @typedef {import(\"./utility.js\").JqElement} JqElement\n * @typedef {import(\"./utility.js\").JqAttribute} JqAttribute\n * @typedef {import(\"./utility.js\").JqCSSProperty} JqCSSProperty\n * @typedef {import(\"./utility.js\").JqCSSRule} JqCSSRule\n * @typedef {import(\"./utility.js\").JqReference} JqReference\n * @typedef {import(\"./utility.js\").JqFragment} JqFragment\n * @typedef {import(\"./utility.js\").JqAnimation} JqAnimation\n * @typedef {import(\"./utility.js\").JqCallback} JqCallback\n * @typedef {import(\"./utility.js\").JqEvent} JqEvent\n * @typedef {import(\"./utility.js\").JqText} JqText\n * @typedef {import(\"./utility.js\").JqList} JqList\n * @typedef {null | undefined | number | string | symbol | bigint} Primitive\n * @typedef {JqElement | JqAttribute | JqCSSProperty | JqCSSRule | JqAnimation | JqEvent | JqReference | JqFragment | JqText | JqCallback} JqNode\n * @typedef {{\n *\t\tglobalize: (_globalThis?: object) => void,\n *\t\t[name: string]: (...nodes: Array<JqNode>) => JqElement\n *\t}} Natives\n * @typedef {\n *\t((name: string, parent?: typeof HTMLElement) => (...nodes: JqNode[]) => JqElement) &\n *\t{[CustomElements]: string[]}\n * } Customs\n */\n/**\n * @preserve\n * @type {Natives}\n */\nexport const natives = new Proxy({}, {\n    get(target, prop) {\n        if (typeof prop == \"symbol\")\n            return target[prop];\n        if (prop == \"globalize\")\n            return globalize;\n        return (...nodes) => new JqElement(prop, getNodes(nodes));\n    }\n});\nfunction globalize(_globalThis) {\n    validHTMLElements\n        .forEach(element => (_globalThis ?? globalThis)[element] = natives[element]);\n}\n/**\n * @preserve\n * @type {(text: Primitive) => JqText}\n */\nconst text = new Proxy(_text, {});\n/**\n * @preserve\n * @type {\n * ((attrObj: { [x: string]: Primitive }) => JqList<JqAttribute, typeof JqAttribute>) & {\n *\t\t[x: string]: JqAttribute\n * }}\n */\nconst attr = new Proxy(_attr, {\n    get(target, prop) {\n        if (typeof prop == \"symbol\")\n            return target[prop];\n        return (value) => createAttribute(prop, value);\n    }\n});\n/**\n * @preserve\n * @type {\n * ((event?: Event, ...a: unknown[]) => JqEvent) & {\n * \t\t[eventName: string]: (handler: (event?: Event, ...a: unknown[]) => unknown) => JqEvent\n * }}\n */\nexport const on = new Proxy({}, {\n    get(target, prop) {\n        if (typeof prop == \"symbol\")\n            return target[prop];\n        return (handler) => new JqEvent(prop, handler);\n    }\n});\n/**\n * @preserve\n * @type {\n * ((styleObj: { [x: string]: Primitive }) => JqCSSRule) & {\n*\t\t[x: string]: JqCSSProperty\n* }}\n */\nexport const css = new Proxy(_css, {\n    get(target, prop) {\n        if (typeof prop == \"symbol\")\n            return target[prop];\n        return (value) => {\n            const jqCSSProperty = new JqCSSProperty(prop, value);\n            return jqCSSProperty;\n        };\n    }\n});\nconst _custom = Object.assign(((name, parent = HTMLElement) => {\n    var _a, _b;\n    if (customElements.get(name))\n        throw new Error(`JqError - custom element '${name}' was already defined`);\n    _custom[CustomElements].push(name);\n    const _JqElement = Symbol(\"_JqElement\");\n    const node = (_b = class extends parent {\n            constructor(name, nodes) {\n                super();\n                node[_JqElement] = JqElement.custom(this, name, getNodes(nodes));\n            }\n        },\n        _a = _JqElement,\n        __setFunctionName(_b, \"node\"),\n        _b[_a] = null,\n        _b);\n    customElements.define(name, node);\n    return (...nodes) => (new node(name, nodes), node[_JqElement]);\n}), { [CustomElements]: [] });\n/**\n * @preserve\n * @type {Customs} custom\n*/\nexport const custom = new Proxy(_custom, {\n    get(target, prop) {\n        if (typeof prop == \"symbol\")\n            return target[prop];\n        return target(camelToKebab(prop));\n    }\n});\nfunction createAttribute(name, value) {\n    const _value = isPrimitive(value) ? String(value) : stringify(value);\n    return new JqAttribute(name, _value);\n}\nfunction _attr(attrObj) {\n    const attrList = JqAttribute.objectToJqAttributes(attrObj);\n    return attrList;\n}\nfunction createTextNode(value) {\n    const text = isPrimitive(value) ? String(value) : stringify(value);\n    return new JqText(text);\n}\nfunction _text(strs, ...values) {\n    let _strs = strs;\n    if (Array.isArray(strs))\n        _strs = escapeHTMLEntities(strs.reduce((acc, curr, i) => \"\" + acc + (curr ?? \"\") + (stringify(values[i]) ?? \"\"), \"\"));\n    else if (typeof _strs == \"string\")\n        _strs = escapeHTMLEntities(_strs);\n    return createTextNode(_strs);\n}\n/**\n * @preserve\n * @param {Array<Primitive | JqElement | JqText | JqFragment>} childNodes\n * @returns {JqFragment}\n */\nfunction fragment(..._childNodes) {\n    const { childNodes } = getNodes(_childNodes);\n    return new JqFragment(childNodes);\n}\n/**\n * @preserve\n * @type {(styles: AnimationStyles, ...options: [speed?: number | \"fast\" | \"slow\" | undefined, easing?: string | undefined, callback?: ((..._: unknown[]) => unknown) | undefined] | [option: AnimationOptions])) => JqAnimation}\n */\nexport function animate(...parameters) {\n    return new JqAnimation(...parameters);\n}\nfunction _css(...args) {\n    const [ruleName, ...ruleArgs] = args;\n    if (args.length == 1 && !isPrimitive(ruleName)) {\n        const rule = new JqCSSRule([\":host\", ...ruleArgs], ruleName);\n        return rule;\n    }\n    return (...styleNodes) => {\n        const rule = new JqCSSRule([ruleName, ...ruleArgs], ...styleNodes);\n        return rule;\n    };\n}\n/**\n * @preserve\n * @param {{ [x: string | symbol]: unknown } | undefined} state\n * @returns {JqReference}\n */\nexport function ref(state) {\n    const refObj = new JqReference(state ?? {});\n    const refProxy = new Proxy(refObj, {\n        get(target, prop) {\n            if (prop == JqNodeReference)\n                return target;\n            if (typeof prop == \"symbol\")\n                return target[prop];\n            else if (prop == \"deref\")\n                return target.deref;\n            else if (prop == \"refresh\")\n                return target.refresh;\n            else if (prop == \"attachTo\")\n                return target.attachTo;\n            else {\n                return target[StateReference][prop];\n            }\n        },\n        set(target, prop, value) {\n            if (typeof prop == \"symbol\")\n                return target[prop] = value;\n            target.jqParent?.setStateRefValue(prop, value);\n            return true;\n        }\n    });\n    return refProxy;\n}\nexport const nodes = { attr, text, fragment };\nexport { pathSetter, showIf, getNodes } from \"./utility.js\";\n"],"names":["_a","_JqAnimation_parameters","_JqAttribute_name","_JqAttribute_value","__classPrivateFieldSet","this","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","pathSetter","rootPath","relativePath","replace","isPrimitive","test","Object","isJqElement","xs","every","x","JqElement","isJqAttribute","JqAttribute","isJqFragment","JqFragment","isJqText","JqText","CREATED","Symbol","UPDATED","DELETED","UNCHANGED","getJqNodeConstructors","JqCSSProperty","JqCSSRule","JqAnimation","JqEvent","JqReference","throwError","e","Error","JqNodeReference","getNodes","nodes","childNodes","attributes","events","references","animations","callbacks","inlineStyles","blockStyles","childNodeClasses","i","node","entries","some","childNodeClass","_node","nodePosition","push","JqList","nodeClass","forEach","attribute","Array","isArray","convertToJqNode","jqNode","map","jqFragment","childNode","jqParent","convertToJqFragment","jqText","convertToJqText","jqCallback","JqCallback","convertToJqCallback","ctor","getPropertyValue","object","props","result","length","isNullish","escapeHTMLEntities","text","replacer","t","DOMParser","parseFromString","documentElement","textContent","stringify","String","JSON","values","constructor","callback","returned","_","refProxy","Proxy","context","target","prop","getStateRefValue","setStateRefValue","update","updateCallback","oldNode","reconcile","rootNode","parentNode","newNode","_diff","diff","node1","node2","updatedChanges","createdChanges","deletedChanges","firstProp","nestedProps","updateText","updateAttribute","updateElement","createFragment","createElement","deleteJqFragmentChild","deleteJqElementChild","delete","deleteSelf","childDiff","childDiffs","invoke","_node1","_node2","setAttribute","setText","_node1Parent","initial","createNode","attachTo","replaceChild","_childNode","splice","HTMLElement","retNodeInsertPos","findIndex","toString","indent","event","handler","attachHandler","element","addEventListener","detachHandler","removeEventListener","htmlNode","ElementReference","StateReference","deref","refresh","async","updateNode","parameters","domAnimation","animate","_styles","_options","_moreOptions","setStartStyles","styles","keys","filter","styleName","finalStyleValue","getComputedStyle","fromEntries","options","speed","easing","_callback","duration","fill","__styles","Map","WeakMap","name","camelToKebab","style","setProperty","ruleName","ruleArgs","styleNodes","body","head","errorMessage","join","trim","flatMap","styleNode","styleObject","styleProperties","key","createPropertyListFromStyleObject","space","repeat","attrNode","jqAttribute","document","createAttribute","jqElement","removeAttribute","attrName","attrValue","setAttributeNode","static","attrObj","attrList","_name","_value","List","from","attrObject","createDocumentFragment","cloneNode","attachChildren","updateChildren","attachChild","shadowRoot","appendChild","oldChildNode","newChildNode","delChildIdx","is","attachNode","primitives","createTextNode","nodeValue","remove","primitive","pop","scopedStyleSheet","recreate","attachAttributes","callbackPosNodePairs","pos","idx","attachCallback","childNodePos","callbackPos","ignorePos","attachEventListeners","jqEvent","attachAnimations","IntersectionObserver","observer","entry","observerCallback","isIntersecting","animation","disconnect","observe","attachStyles","Boolean","attachShadow","mode","canHaveShadow","styleSheet","stylePropertiesStr","attachReferences","reference","attachCallbacks","updateAttributes","updateCallbacks","updateStyles","indexOfAttr","indexOf","assign","find","hasElmStartIndent","emptyTagSelfClosure","includes","childMarkup","selfAttrs","selfCallbacks","selfMarkupHead","selfMarkupTail","showIf","condition","custom","str","$","ofs","toLowerCase","nodeComparison","firstElemChildren","secondElemChildren","firstElemAttributes","secondElemAttributes","type","getPrototypeOf","Math","max","firstElemChild","secondElemChild","undefined","firstElemAttribute","secondElemAttribute","compareJqElements","firstFragChildren","secondFragChildren","firstFragChild","secondFragChild","compareJqFragments","jqAttribute1","jqAttribute2","compareProps","compareJqAttributes","affected1","affected2","compareJqTexts","isNode1","isNode2","compareJqGenericNodes","compareJqNodes","deletedProps","createdProps","updatedProps","unchangedProps","validHTMLElements","__setFunctionName","prefix","description","concat","defineProperty","configurable","CustomElements","natives","globalize","_globalThis","globalThis","strs","_strs","reduce","acc","curr","attr","objectToJqAttributes","on","css","args","_custom","parent","_b","customElements","_JqElement","super","define","ref","refObj","fragment","_childNodes"],"mappings":"AAAA,IAWIA,EAAIC,EAAyBC,EAAmBC,EAXhDC,EAA0BC,MAAQA,KAAKD,wBAA2B,SAAUE,EAAUC,EAAOC,EAAOC,EAAMC,GAC1G,GAAa,MAATD,EAAc,MAAM,IAAIE,UAAU,kCACtC,GAAa,MAATF,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVJ,EAAuBD,IAAaC,IAAUG,GAAKH,EAAMK,IAAIN,GAAW,MAAM,IAAIK,UAAU,2EACvG,MAAiB,MAATF,EAAeC,EAAEG,KAAKP,EAAUE,GAASE,EAAIA,EAAEF,MAAQA,EAAQD,EAAMO,IAAIR,EAAUE,GAASA,CACxG,EACIO,EAA0BV,MAAQA,KAAKU,wBAA2B,SAAUT,EAAUC,EAAOE,EAAMC,GACnG,GAAa,MAATD,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVJ,EAAuBD,IAAaC,IAAUG,GAAKH,EAAMK,IAAIN,GAAW,MAAM,IAAIK,UAAU,4EACvG,MAAgB,MAATF,EAAeC,EAAa,MAATD,EAAeC,EAAEG,KAAKP,GAAYI,EAAIA,EAAEF,MAAQD,EAAMS,IAAIV,EACxF,EAOO,SAASW,EAAWC,GACvB,OAAO,SAAUC,GACb,OAAOD,EAASE,QAAQ,SAAU,IAAM,IACpCD,EAAaC,QAAQ,mBAAoB,GACrD,CACA,CACO,SAASC,EAAYC,GACxB,OAAOA,IAASC,OAAOD,EAC3B,CACA,MAAME,EAAc,IAAIC,IAAOA,EAAGC,OAAMC,GAAKA,aAAaC,YACpDC,EAAgB,IAAIJ,IAAOA,EAAGC,OAAMC,GAAKA,aAAaG,cACtDC,EAAe,IAAIN,IAAOA,EAAGC,OAAMC,GAAKA,aAAaK,aACrDC,EAAW,IAAIR,IAAOA,EAAGC,OAAMC,GAAKA,aAAaO,SACjDC,EAAUC,OAAO,WACjBC,EAAUD,OAAO,WACjBE,EAAUF,OAAO,WACjBG,EAAYH,OAAO,aACnBI,EAAwB,IAAM,CAACZ,UAAWE,YAAaW,cAAeC,UAAWC,YAAaC,QAASC,YAAab,WAAYE,QACzHY,EAAcC,IAAQ,MAAM,IAAIC,MAAMD,EAAE,EACxCE,EAAkBb,OAAO,mBAY/B,SAASc,EAASC,GACrB,MAAMC,EAAa,GACbC,EAAa,GACbC,EAAS,GACTC,EAAa,GACbC,EAAa,GACbC,EAAY,GACZC,EAAe,GACfC,EAAc,GACdC,EAAmB,CAAChC,UAAWI,WAAYE,QACjD,IAAK,MAAO2B,EAAGC,KAASX,EAAMY,UAC1B,GAAIH,EAAiBI,MAAKC,GAAkBH,aAAgBG,IAAiB,CACzE,MAAMC,EAAQJ,EACdI,EAAMC,aAAeN,EACrBT,EAAWgB,KAAKF,EACnB,MACI,GAAIJ,aAAgBhC,YACrBgC,EAAKK,aAAeN,EACpBR,EAAWe,KAAKN,QAEf,GAAIA,aAAgBO,QAAUP,EAAKQ,YAAcxC,YAClDgC,EAAKX,MAAMoB,SAASC,IAChBA,EAAUL,aAAeN,EACzBR,EAAWe,KAAKI,EAAU,SAG7B,GAAIV,aAAgBlB,QACrBkB,EAAKK,aAAeN,EACpBP,EAAOc,KAAKN,QAEX,GAAIA,aAAgBjB,YAAa,CAClC,MAAMqB,EAAQJ,EAAKb,GACnBiB,EAAMC,aAAeN,EACrBN,EAAWa,KAAKF,EACnB,MACI,GAAIJ,aAAgBnB,YACrBmB,EAAKK,aAAeN,EACpBL,EAAWY,KAAKN,QAEf,GAAIA,aAAgBrB,cACrBqB,EAAKK,aAAeN,EACpBH,EAAaU,KAAKN,QAEjB,GAAIA,aAAgBpB,UACrBoB,EAAKK,aAAeN,EACpBF,EAAYS,KAAKN,QAEhB,GAAIW,MAAMC,QAAQZ,GAAO,CAC1B,MAAMI,EAAQS,EAAgBb,EAAM,MACpCI,EAAMC,aAAeN,EACrBT,EAAWgB,KAAKF,EACnB,MACI,GAAmB,mBAARJ,EAAoB,CAChC,MAAMI,EAAQS,EAAgBb,EAAM,MACpCI,EAAMC,aAAeN,EACrBJ,EAAUW,KAAKF,EAClB,MACI,GAAI7C,EAAYyC,GAAO,CACxB,MAAMI,EAAQS,EAAgBb,EAAM,MACpCI,EAAMC,aAAeN,EACrBT,EAAWgB,KAAKF,EACnB,CAEL,MAAO,CACHd,aAAYC,aACZC,SAAQC,aACRC,aAAYE,eACZC,cAAaF,YAErB,CACO,SAASkB,EAAgBnE,EAAOoE,GAqBnC,OAAIH,MAAMC,QAAQlE,GAVU,CAACA,IACzB,MAAM4C,EAAa5C,EAAMqE,KAAIlD,GAAKgD,EAAgBhD,EAAG,QAC/CmD,EAAa,IAAI9C,WAAWoB,GAMlC,OALAA,EAAWmB,SAAQ,CAACQ,EAAWlB,KAC3BkB,EAAUC,SAAWF,EACrBC,EAAUZ,aAAeN,CAAC,IAE9BiB,EAAWE,SAAWJ,EACfE,CAAU,EAGVG,CAAoBzE,GAC3Ba,EAAYb,GAtBQ,CAACA,IACrB,MAAM0E,EAAS,IAAIhD,OAAO1B,GAAS,IAEnC,OADA0E,EAAOF,SAAWJ,EACXM,CAAM,EAoBNC,CAAgB3E,GACP,mBAATA,EAnBiB,CAACA,IACzB,MAAM4E,EAAa,IAAIC,WAAW7E,GAElC,OADA4E,EAAWJ,SAAWJ,EACfQ,CAAU,EAiBVE,CAAoB9E,GAC3BgC,IAAwBwB,MAAKuB,GAAQ/E,aAAiB+E,IAC/C/E,EACJsC,EAAW,wDACtB,CACA,MAAM0C,EAAmB,CAACC,EAAQC,KAC9B,IAAIC,EAASF,EACb,IAAK,IAAI5B,EAAI,EAAGA,EAAI6B,EAAME,OAAQ/B,IAE9B,GADA8B,EAASA,IAASD,EAAM7B,IACpBgC,EAAUF,GACV,OAAOA,EAEf,OAAOA,CAAM,EAMV,SAASG,EAAmBC,GAC/B,MAEMC,EAAW,CAACC,EAAGlD,KAAM,IAAImD,WAAYC,gBAAgBpD,EAAG,aAAaqD,gBAAgBC,aAAe,GAG1G,OAFcN,EAAK3E,QAHE,wBAGoB4E,GACpC5E,QAHgB,kBAGM4E,EAE/B,CACO,SAASM,EAAU9F,GACtB,OAAOa,EAAYb,GAAS+F,OAAO/F,GAAS,IAAMgG,KAAKF,UAAU9F,EACrE,CACO,SAASqF,KAAaY,GACzB,OAAOA,EAAO/E,OAAMC,GAAKA,SAC7B,CACO,MAAM0D,WACTqB,YAAYC,GACRtG,KAAK8D,cAAgB,EACrB9D,KAAK2E,SAAW,KAChB3E,KAAKuG,SAAW,KAChBvG,KAAKsG,SAAYE,GAAM,KACvBxG,KAAKyG,SAAW,IAAIC,MAAM,CAAEC,QAAS3G,MAAQ,CACzCW,IAAG,CAACiG,EAAQC,IACDD,EAAOD,QAAQhC,UAAUmC,iBAAiBD,GAErDpG,IAAG,CAACmG,EAAQC,EAAM1G,KACdyG,EAAOD,QAAQhC,UAAUoC,iBAAiBF,EAAM1G,IACzC,KAGfH,KAAKgH,OAAS,CACVL,QAAS3G,KACTiH,iBACI,MAAMlC,EAAa/E,KAAK2G,QACxB,GAA4B,OAAxB5B,EAAWwB,SACX,OAAOvG,KACX,MAAMkH,EAAUnC,EAAWwB,SAI3B,OACA,SAASY,EAAUC,EAAUC,EAAYH,EAASI,GAC9C,MAAMC,EAAQC,EAAKN,EAASI,GACtBG,EAAQF,EAAME,MACdC,EAAQH,EAAMG,MACdC,EAAiBJ,EAAMvF,GACvB4F,EAAiBL,EAAMzF,GACvB+F,EAAiBN,EAAMtF,GAC7B,IAAK,MAAO6F,KAAcC,KAAgBJ,EAClC/F,EAAS6F,EAAOC,GACC,QAAbI,GACAE,EAAWT,EAAO,CAACO,KAAcC,IAEhCvG,EAAciG,EAAOC,GACT,SAAbI,GACAG,EAAgBV,EAAO,CAACO,KAAcC,IAEpCvC,EAAUiC,IAAWjC,EAAUkC,KACrCQ,EAAcX,EAAO,CAACO,KAAcC,IACpChD,EAAWwB,SAAWmB,GAG9B,IAAK,MAAOI,KAAcC,KAAgBH,EAClChG,EAAS6F,EAAOC,IAEXlG,EAAciG,EAAOC,KAErBhG,EAAa+F,EAAOC,GACR,cAAbI,GACAK,EAAeZ,EAAO,CAACO,KAAcC,IAEpC5G,EAAYsG,EAAOC,IACP,cAAbI,GACAM,EAAcb,EAAO,CAACO,KAAcC,KAGhD,IAAK,MAAOD,KAAcC,KAAgBF,EAClCnG,EAAa+F,EAAOC,GACpBW,EAAsBd,EAAO,CAACO,KAAcC,IAEvC5G,EAAYsG,EAAOC,GACxBY,EAAqBf,EAAO,CAACO,KAAcC,IAG3CN,EAAMc,OAAOC,aAGrB,IAAK,MAAMC,KAAalB,EAAMmB,WAC1BvB,EAAUC,EAAUG,EAAME,MAAOgB,EAAUhB,MAAOgB,EAAUf,MACnE,CAlDDP,CADiBD,EACGG,EAAYH,EAFhBnC,EAAW4D,UAGpB3I,KAkDP,SAASiI,EAAgBT,EAAMnC,GAC3B,IAAK,CAACmC,EAAKC,MAAOD,EAAKE,OAAOrG,OAAMoC,GAAQA,aAAgBhC,cACxD,OAAOzB,KACX,MAAM4I,EAASpB,EAAKC,MACdoB,EAASrB,EAAKE,MACpB,OAAOkB,EAAO5B,OAAO8B,aAAaD,EAAO1I,MAC5C,CACD,SAAS6H,EAAWR,EAAMnC,GACtB,IAAK,CAACmC,EAAKC,MAAOD,EAAKE,OAAOrG,OAAMoC,GAAQA,aAAgB5B,SACxD,OAAO7B,KACX,MAAM4I,EAASpB,EAAKC,MACdoB,EAASrB,EAAKE,MACpBkB,EAAO5B,OAAO+B,QAAQF,EAAOnD,KAChC,CACD,SAASwC,EAAcV,EAAMnC,GACzB,MAAMuD,EAASpB,EAAKC,MACdoB,EAASrB,EAAKE,MACdsB,EAAexB,EAAKC,MAAM9C,SAChCkE,aAAkBhH,OAASgH,EAAOI,QAAQC,aAAeL,EAAOM,SAAS,MACzEH,EAAahC,OAAOoC,aAAaR,EAAQC,EAC5C,CACD,SAAST,EAAcZ,GAAOM,EAAWuB,IACrC,IAAK,CAAC7B,EAAKC,MAAOD,EAAKE,OAAOrG,OAAMoC,GAAQA,aAAgBlC,YACxD,OAAOvB,KACX,MAAM4I,EAASpB,EAAKC,MACLD,EAAKE,MACpB,MAAMhD,EAAY2E,EAKlB,OAJA3E,EAAUC,SAAWiE,EAAOjE,SAC5BD,EAAUZ,aAAe8E,EAAO7F,WAAWwC,OAC3CqD,EAAO7F,WAAWuG,OAAOV,EAAO7F,WAAWwC,OAAQ,EAAGb,GACtDA,EAAUyE,SAASP,GACZ5I,IACV,CACD,SAASmI,EAAeX,GAAOM,EAAWuB,IACtC,IAAK,CAAC7B,EAAKC,MAAOD,EAAKE,OAAOrG,OAAMoC,GAAQA,aAAgB9B,aACxD,OAAO3B,KACX,MAAM4I,EAASpB,EAAKC,MACLD,EAAKE,MACpB,MAAMhD,EAAY2E,EAKlB,OAJA3E,EAAUC,SAAWiE,EAAOjE,SAC5BD,EAAUZ,aAAe8E,EAAO7F,WAAWwC,OAC3CqD,EAAO7F,WAAWuG,OAAOV,EAAO7F,WAAWwC,OAAQ,EAAGb,GACtDA,EAAUyE,SAASP,GACZ5I,IACV,CACD,SAASqI,EAAsBb,GAAOM,EAAWuB,IAC9B7B,EAAKC,MACLD,EAAKE,MACF2B,EACRd,OAAOC,YACpB,CACD,SAASF,EAAqBd,GAAOM,EAAWuB,IAC7B7B,EAAKC,MACLD,EAAKE,MACF2B,EACRd,OAAOC,YACpB,CACJ,GAELxI,KAAKsG,SAAWA,CACnB,CACDqC,SACI,MAAMpC,EAAWvG,KAAKsG,SAAStG,KAAKyG,UAC9BhD,EAAOW,MAAMC,QAAQkC,IAAavF,EAAYuF,GAC9CjC,EAAgBiC,EAAUvG,KAAK2E,UAC/B4B,EAGN,OAFA9C,EAAKK,aAAe9D,KAAK8D,aACzBL,EAAKkB,SAAW3E,KAAK2E,SACdlB,CACV,CACD0F,SAAS1F,GACL,GAAIA,aAAgB8F,YAAa,CACXvJ,KAAK2I,SACbQ,SAAS1F,EACtB,KACI,MAAIA,aAAgBlC,WAUrB,MAAM,IAAIoB,MAAM,iHAVgB,CAChC3C,KAAK2E,SAAWlB,EAChBzD,KAAKuG,SAAWvG,KAAK2I,SACrB3I,KAAKuG,SAAS4C,SAAS1F,GACvB,IAAI+F,EAAmB/F,EAAKV,WACvB0G,WAAU/E,GAAa1E,KAAK8D,cAAgBY,EAAUZ,eAC3D0F,GAAwC,GAArBA,GAA0B/F,EAAKV,WAAWwC,QAAU,GAAK,EAAIiE,EAChF/F,EAAKV,WAAWuG,OAAOE,EAAkB,EAAGxJ,KAAKuG,SACpD,CAGA,CACD,OAAOvG,IACV,CACD0J,SAASC,EAAS,GACd,OAAO3J,KAAKuG,UAAUmD,SAASC,IAAW,EAC7C,EAEE,MAAMpH,QACT8D,YAAYuD,EAAOC,GACf7J,KAAK8D,cAAgB,EACrB9D,KAAK6J,QAAWrD,IAAD,EACfxG,KAAK2E,SAAW,KAChB3E,KAAK4J,MAAQA,EACb5J,KAAK6J,QAAUA,CAClB,CACDC,cAAcC,GACVA,EAAQC,iBAAiBhK,KAAK4J,MAAO5J,KAAK6J,QAC7C,CACDI,cAAcF,GACVA,EAAQG,oBAAoBlK,KAAK4J,MAAO5J,KAAK6J,QAChD,CACDV,SAAS1F,GACL,GAAIA,aAAgB8F,YAChBvJ,KAAK8J,cAAcrG,OAElB,MAAIA,aAAgBlC,WAIrB,MAAM,IAAIoB,MAAM,oCAAoC3C,KAAK4J,2EAHzD5J,KAAK8J,cAAcrG,EAAK0G,SAI3B,CACD,OAAOnK,IACV,EAEE,MAAMoK,EAAmBrI,OAAO,oBAC1BsI,EAAiBtI,OAAO,kBAC9B,MAAMS,YACT6D,YAAYnG,EAAQ,IAChBF,KAAKL,GAAM,KACXK,KAAK8D,cAAgB,EACrB9D,KAAK2E,SAAW,KAChB3E,KAAKmJ,SAAY1F,IACb,GAAIA,aAAgB8F,YAChBvJ,KAAKoK,GAAoB3G,MAExB,MAAIA,aAAgBlC,WAKrB,MAAM,IAAIoB,MAAM,wGAJhB3C,KAAK2E,SAAWlB,EAChBzD,KAAKoK,GAAoB3G,EAAK0G,QAIjC,CACD,OAAOnK,IAAI,EAEfA,KAAKsK,MAAQ,IACFtK,KAAKoK,GAEhBpK,KAAKuK,QAAUC,MAAOlE,IAClB,MAAMhB,QAAegB,EAAStG,KAAKqK,IAEnC,OADArK,KAAK2E,SAASqC,OAAOyD,aACdnF,CAAM,EAEjBtF,KAAKqK,GAAkBnK,CAC1B,EAELP,EAAKyK,EACE,MAAM9H,YACT+D,eAAeqE,GACX1K,KAAK2K,aAAe,KACpB3K,KAAK8D,cAAgB,EACrBlE,EAAwBa,IAAIT,UAAM,GAClCA,KAAK2E,SAAW,KAChB5E,EAAuBC,KAAMJ,EAAyB8K,EAAY,IACrE,CACDvB,SAAS1F,GACL,GAAIA,aAAgB8F,YAChBvJ,KAAK4K,QAAQnH,OAEZ,MAAIA,aAAgBlC,WAKrB,MAAM,IAAIoB,MAAM,wGAJhB3C,KAAK2E,SAAWlB,EAChBzD,KAAK4K,QAAQnH,EAAK0G,SAIrB,CACD,OAAOnK,IACV,CACD4K,QAAQb,GACJ,MAAOc,EAASC,KAAaC,GAAgBrK,EAAuBV,KAAMJ,EAAyB,KAC7FoL,EAAiB,CAACC,KAAWzE,KAC/B,MACMqE,EADa3J,OAAOgK,KAAKD,GAAQE,QAAOC,IAAchH,MAAMC,QAAQ4G,EAAOG,MACtD5G,KAAI4G,IAC3B,MAAMC,EAAkBJ,EAAOG,GAE/B,MAAO,CAACA,EAAW,CADOE,iBAAiBvB,GAAS5E,iBAAiBiG,GAC9BC,GAAiB,IAG5D,MADU,IAAKJ,KAAW/J,OAAOqK,YAAYV,GACrC,EAEZ,IAAIvE,EAAW,KACXkF,EAAWxK,EAAY8J,GAAY,KAAOA,EAC9CU,IAAYA,EAAU,MAClB,MAAOC,EAAOC,EAAQC,GAAa,CAACb,KAAaC,GAC7CY,IACArF,EAAWqF,GAMf,MALe,CACXC,SAAUH,GAAS,IACnBC,OAAQA,GAAU,SAClBG,KAAM,WAGb,EAVqB,IAWtB,MAAMC,EAAY1H,MAAMC,QAAQwG,GAC1BA,EAAQrG,KAAIlD,GAAKA,aAAayK,IAAM7K,OAAOqK,YAAYjK,GAAKA,IAC5DuJ,aAAmBkB,IAAM7K,OAAOqK,YAAYV,GAAWA,EACvDI,EAAU7G,MAAMC,QAAQyH,GACxBA,EAAStH,IAAIwG,GACbA,EAAec,GAGrB,OAFA9L,KAAK2K,aAAeZ,EAAQa,QAAQK,EAAQO,GAC5ClF,GAAYtG,KAAK2K,aAAaX,iBAAiB,SAAU1D,GAClDtG,KAAK2K,YACf,EAEL/K,EAA0B,IAAIoM,QACvB,MAAM5J,cACTiE,YAAY4F,EAAM9L,GACdH,KAAK8D,cAAgB,EACrB9D,KAAK2E,SAAW,KAChB3E,KAAKiM,KAAOC,EAAaD,GAAMlL,QAAQ,KAAM,KAC7Cf,KAAKG,MAAQ+F,OAAO/F,EACvB,CACDgJ,SAAS1F,GACL,GAAIA,aAAgB8F,YAChB9F,EAAK0I,MAAMC,YAAYpM,KAAKiM,KAAMjM,KAAKG,WAEtC,MAAIsD,aAAgBlC,WAIrB,MAAM,IAAIoB,MAAM,2GAHhB3C,KAAK2E,SAAWlB,CAInB,CACD,OAAOzD,IACV,CACD0J,SAASC,EAAS,GACd,MAAO,GAAG3J,KAAKiM,SAASjM,KAAKG,QAChC,EAEE,MAAMkC,UACTgE,aAAagG,KAAaC,MAAcC,GACpCvM,KAAK8D,cAAgB,EACrB9D,KAAKwM,KAAO,GACZxM,KAAK2E,SAAW,KAChB3E,KAAKyM,KAAO,CAACJ,KAAaC,GAC1B,MAAMI,EAAe,wCAAwC1M,KAAKyM,KAAKE,KAAK,KAAKC,cACjF5M,KAAKwM,KAAOD,EAAWM,SAAQC,GAAaA,aAAqB1K,eAAiB0K,aAAqBzK,UACjGyK,EAwkBP,SAA2CJ,EAAcK,GAE5D,GADkB5M,EACJ4M,EADwB,OAAV5M,GAAkC,iBAATA,EAEjD,MAAM,IAAIwC,MAAM+J,GAFH,IAACvM,EAGlB,MAAM6M,EAAkB9L,OAAOwC,QAAQqJ,GAClCvI,KAAI,EAAEyI,EAAK9M,KAAW,IAAIiC,cAAc6K,EAAK9M,KAClD,OAAO,IAAI6D,OAAO5B,cAAe4K,EACrC,CA9kBcE,CAAkCR,EAAcI,GAAWhK,OACpE,CACDqG,SAAS1F,GACL,GAAIA,aAAgB8F,iBAGf,MAAI9F,aAAgBlC,WAIrB,MAAM,IAAIoB,MAAM,uGAHhB3C,KAAK2E,SAAWlB,CAInB,CACD,OAAOzD,IACV,CACD0J,SAASC,EAAS,GACd,MAAMwD,EAAQ,KAAKC,OAAOzD,GAE1B,MAAO,GADI3J,KAAKyM,KAAKE,KAAK,KAAKC,aACVO,IAAQnN,KAAKwM,KAAKhI,KAAIsI,GAAaA,EAAUpD,SAASC,EAAS,KAAIgD,KAAK,KAAOQ,OAAW,KAAKC,OAAOzD,EAAS,KACvI,EAEL,MAAMlI,YACF4E,YAAY4F,EAAM9L,GACdN,EAAkBY,IAAIT,KAAM,IAC5BF,EAAmBW,IAAIT,KAAM,IAC7BA,KAAK8D,cAAgB,EACrB9D,KAAKqN,SAAW,KAChBrN,KAAK2E,SAAW,KAChB3E,KAAKiJ,QAAU,CACXtC,QAAS3G,KACTkJ,aACI,MAAMoE,EAActN,KAAK2G,QAGzB,OAFA2G,EAAYD,SAAWE,SAASC,gBAAgBF,EAAYrB,MAC5DqB,EAAYD,SAASlN,MAAQmN,EAAYnN,MAClCH,IACV,GAELA,KAAKgH,OAAS,CACVL,QAAS3G,KACTiI,kBACI,MAAMqF,EAActN,KAAK2G,QAEzB,OADA2G,EAAYD,SAASlN,MAAQmN,EAAYnN,MAClCH,IACV,EACD8I,aAAa3I,GACT,MAAMmN,EAActN,KAAK2G,QACzB,OAAIxG,IAAUmN,EAAYnN,QAE1BmN,EAAYnN,MAAQA,EACpBmN,EAAYD,SAASlN,MAAQA,GAFlBH,IAId,GAELA,KAAKuI,OAAS,CACV5B,QAAS3G,KACTwI,aACI,MAAM8E,EAActN,KAAK2G,QACnB8G,EAAYH,EAAY3I,SAC9B,OAAK8I,GAELA,EAAUlF,OAAOmF,gBAAgBJ,GACjCA,EAAYD,SAAW,KAChBrN,MAHIA,IAId,GAELA,KAAKiM,KAAOC,EAAaD,GAAMlL,QAAQ,KAAM,KAC7Cf,KAAKG,MAAQA,CAChB,CACG8L,WACA,OAAOvL,EAAuBV,KAAMH,EAAmB,IAC1D,CACGoM,SAAK0B,GACL5N,EAAuBC,KAAMH,EAAmB8N,EAAU,IAC7D,CACGxN,YACA,OAAOO,EAAuBV,KAAMF,EAAoB,IAC3D,CACGK,UAAMyN,GACN7N,EAAuBC,KAAMF,EAAoB8N,EAAW,IAC/D,CACDzE,SAAS1F,GAEL,GADAzD,KAAKiJ,QAAQC,aACTzF,aAAgB8F,YAChB9F,EAAKoK,iBAAiB7N,KAAKqN,cAE1B,MAAI5J,aAAgBlC,WAKrB,MAAM,IAAIoB,MAAM,wCAAwC3C,KAAKiM,0EAJ7DjM,KAAK2E,SAAWlB,EAChBA,EAAK0G,SAAS0D,iBAAiB7N,KAAKqN,SAIvC,CACD,OAAOrN,IACV,CACD8N,4BAA4BC,GAExB,GAAgB,OAAZA,GAAuC,iBAAZA,EAC3B,MAAM,IAAIpL,MAFO,kDAGrB,MAAMqL,EAAW9M,OAAOwC,QAAQqK,GAC3BvJ,KAAI,EAAEyI,EAAK9M,MACZ,MAAM8N,EAAQ/B,EAAae,GAAKlM,QAAQ,KAAM,KACxCmN,EAAShI,OAAO/F,GAEtB,OADkB,IAAIsB,YAAYwM,EAAOC,EACzB,IAEpB,OAAO,IAAIlK,OAAOvC,YAAauM,EAClC,EAELnO,EAAoB,IAAImM,QAAWlM,EAAqB,IAAIkM,QAC5DvK,YAAY0M,KAAO,CACfC,KAAKC,GACD,GAAmB,OAAfA,GAA6C,iBAAfA,EAC9B,MAAM,IAAI1L,MAAM,uEACpB,MAAMK,EAAa9B,OAAOwC,QAAQ2K,GAC7B7J,KAAI,EAAEyI,EAAK9M,MACZ,MAAM8N,EAAQ/B,EAAae,GAAKlM,QAAQ,KAAM,KACxCmN,EAAShI,OAAO/F,GAEtB,OADkB,IAAIsB,YAAYwM,EAAOC,EACzB,IAEpB,OAAO,IAAIlK,OAAOvC,YAAauB,EAClC,GAGE,MAAMrB,WACT0E,YAAYtD,GACR/C,KAAK8D,cAAgB,EACrB9D,KAAK2E,SAAW,KAChB3E,KAAKmK,SAAW,KAChBnK,KAAK+C,WAAa,GAClB/C,KAAKiJ,QAAU,CACXtC,QAAS3G,KACTkJ,aAGI,OAFmBlJ,KAAK2G,QACbwD,SAAWoD,SAASe,yBAAyBC,YACjDvO,IACV,EACDwO,iBACI,MAAM/J,EAAazE,KAAK2G,QACxB,IAAK,MAAMjC,KAAaD,EAAW1B,WAC/B2B,EAAUyE,SAAS1E,GAEvB,OAAOzE,IACV,GAELA,KAAKgH,OAAS,CACVL,QAAS3G,KACTyK,aAEI,OADAzK,KAAKyO,iBACEzO,IACV,EACDyO,iBACI,MAAMhK,EAAazE,KAAK2G,QACxB,IAAK,MAAMjC,KAAaD,EAAW1B,WAC/B2B,EAAUsC,OAAOyD,aAErB,OAAOzK,IACV,EACD0O,YAAYhK,GACR,MAAMD,EAAazE,KAAK2G,QACxB,GAAIlC,EAAWE,oBAAoBhD,WAE/B,OADA8C,EAAWE,SAASqC,OAAO0H,YAAYhK,GAChC1E,KAEX,GAAIyE,EAAWE,oBAAoBpD,UAAW,CAG1C,OAFakD,EAAWE,SAASgK,YAAclK,EAAWE,SAASwF,UAC9DyE,YAAYlK,EAAUyF,UACpBnK,IACV,CACD,OAAOA,IACV,EACDoJ,aAAayF,EAAcC,GACvB,MAAMrK,EAAazE,KAAK2G,QAClBoI,EAActK,EAAW1B,WAAW0G,WAAU/E,GAAaxD,OAAO8N,GAAGtK,EAAWmK,KAOtF,OANoB,GAAhBE,GACAtM,EAAW,kEACfgC,EAAW1B,WAAWuG,OAAOyF,EAAa,EAAGD,GACvCD,aAAwBhN,QAC1BgN,EAAa9L,WAAWmB,SAAQQ,GAAaA,EAAU6D,OAAOC,eAClEqG,EAAalK,SAASwF,SAASf,aAAa0F,EAAa3E,SAAU0E,EAAa1E,UACzEnK,IACV,GAELA,KAAKuI,OAAS,CACV5B,QAAS3G,KACTwI,aACI,MAAM/D,EAAazE,KAAK2G,QAClBhC,EAAWF,EAAWE,SACtBoK,EAAcpK,EAAS5B,WAAW0G,WAAU/E,GAAaxD,OAAO8N,GAAGtK,EAAWD,KAKpF,OAJoB,GAAhBsK,GACAtM,EAAW,qEACfkC,EAAS5B,WAAWuG,OAAOyF,EAAa,GACxCtK,EAAW1B,WAAWmB,SAAQQ,GAAaA,EAAU6D,OAAOC,eACrDxI,IACV,GAELA,KAAK+C,WAAaA,CACrB,CACDoG,SAAS1F,GACL,MAAMwL,EAAa,IAAMjP,KAAKiJ,QACzBC,aACAsF,iBACL,GAAa,OAAT/K,EACAwL,SAEC,GAAIxL,aAAgB8F,YACrB0F,IACAxL,EAAKmL,YAAY5O,KAAKmK,eAErB,GAAI1G,aAAgBlC,UACrBvB,KAAK2E,SAAWlB,EAAMwL,KACrBxL,EAAKkL,YAAclL,EAAK0G,UAAUyE,YAAY5O,KAAKmK,cAEnD,MAAI1G,aAAgB9B,YAKrB,MAAM,IAAIgB,MAAM,uGAJhB3C,KAAK2E,SAAWlB,EAAMwL,IACtBxL,EAAK0G,SAASyE,YAAY5O,KAAKmK,SAIlC,CACD,OAAOnK,KAAK0J,UACf,CACD5C,iBAAiBD,GACb,OAAO7G,KAAK2E,UAAUmC,iBAAiBD,EAC1C,CACDE,iBAAiBF,EAAM1G,GACnB,OAAOH,KAAK2E,UAAUoC,iBAAiBF,EAAM1G,EAChD,CACDuJ,SAASC,EAAS,GACd,OAAO3J,KAAK+C,WAAWyB,KAAIlD,GAAKA,EAAEoI,SAASC,KAASgD,KAAK,KAAO,KAAKS,OAAOzD,GAC/E,EAEE,MAAM9H,OACTwE,eAAe6I,GACXlP,KAAK8D,cAAgB,EACrB9D,KAAK2E,SAAW,KAChB3E,KAAKmK,SAAW,KAChBnK,KAAK0F,KAAO,GACZ1F,KAAKiJ,QAAU,CACXtC,QAAS3G,KACTkJ,aACI,MAAMuE,EAAYzN,KAAK2G,QAEvB,OADA8G,EAAUtD,SAAWoD,SAAS4B,eAAe1B,EAAU/H,MAChD1F,IACV,GAELA,KAAKgH,OAAS,CACVL,QAAS3G,KACTyK,aACI,OAAOzK,IACV,EACD+I,QAAQrD,GACJ,MAAMb,EAAS7E,KAAK2G,QACpB9B,EAAOsF,SAASiF,UAAYvK,EAAOa,KAAOA,CAC7C,GAEL1F,KAAKuI,OAAS,CACV5B,QAAS3G,KACTwI,aACI,MAAM3D,EAAS7E,KAAK2G,QACdhC,EAAWE,EAAOF,SAClBoK,EAAcpK,EAAS5B,WAAW0G,WAAU/E,GAAaxD,OAAO8N,GAAGtK,EAAWG,KAGpF,OAFAF,EAAS5B,WAAWuG,OAAOyF,EAAa,GACxClK,EAAOsF,SAASkF,SACTrP,IACV,GAELA,KAAK0F,KAAOwJ,EAAW1K,KAAI8K,GAAapJ,OAAOoJ,GAAa,MAAK3C,KAAK,GACzE,CACDxD,SAAS1F,GACL,GAAa,OAATA,EACA,OAAOzD,KAAK0J,WAGhB,GADA1J,KAAKiJ,QAAQC,aACTzF,aAAgB8F,YAEhB,OADA9F,EAAKmL,YAAY5O,KAAKmK,UACfnK,KAAK0J,WAEX,GAAIjG,aAAgBlC,UACrBvB,KAAK2E,SAAWlB,GACfA,EAAKkL,YAAclL,EAAK0G,UAAUyE,YAAY5O,KAAKmK,cAEnD,MAAI1G,aAAgB9B,YAKrB,MAAM,IAAIgB,MAAM,mGAJhB3C,KAAK2E,SAAWlB,EAChBA,EAAK0G,SAASyE,YAAY5O,KAAKmK,SAIlC,CACD,OAAOnK,KAAK0J,UACf,CACDA,SAASC,EAAS,GACd,OAAO3J,KAAKmK,SAASiF,WAAa,EACrC,EAEE,MAAMpL,OACTqC,YAAYpC,EAAWnB,GACnB9C,KAAK8C,MAAQ,GACb9C,KAAKiE,UAAYA,EACjBjE,KAAK8C,MAAQA,CAChB,CACDiB,KAAKN,GACD,KAAMA,aAAgBzD,KAAKiE,WACvB,MAAM,IAAItB,MAAM,+CAA+C3C,KAAKiE,UAAUgI,qBAAqBjM,KAAKiE,UAAUgI,SACtHjM,KAAK8C,MAAMiB,KAAKN,EACnB,CACD8L,MACI,OAAOvP,KAAK8C,MAAMyM,KACrB,EAEL,MAAMhO,UACF8E,YAAY4F,EAAM5G,GACdrF,KAAK2E,SAAW,KAChB3E,KAAK2O,WAAa,KAClB3O,KAAKmK,SAAW,KAChBnK,KAAK+C,WAAa,GAClB/C,KAAKgD,WAAa,GAClBhD,KAAKiD,OAAS,GACdjD,KAAKmD,WAAa,GAClBnD,KAAKkD,WAAa,GAClBlD,KAAKqD,aAAe,GACpBrD,KAAKsD,YAAc,GACnBtD,KAAKoD,UAAY,GACjBpD,KAAKwP,iBAAmB,KACxBxP,KAAK8D,cAAgB,EACrB9D,KAAKiJ,QAAU,CACXtC,QAAS3G,KACTkJ,WAAWuG,GAAW,GAClB,MAAMhC,EAAYzN,KAAK2G,QAGvB,OAFI8I,IACAhC,EAAUtD,SAAWoD,SAASnF,cAAcqF,EAAUxB,OACnDjM,IACV,EACD0P,mBACI,MAAMjC,EAAYzN,KAAK2G,QACvB,IAAK,MAAMxC,KAAasJ,EAAUzK,WAC9BmB,EAAUgF,SAASsE,GAEvB,OAAOzN,IACV,EACDwO,iBACI,MAAMf,EAAYzN,KAAK2G,QACjBgJ,EAAuBlC,EAAUrK,UAAUoB,KAAI8B,GAAY,CAACA,EAASxC,aAAcwC,KACzF,IAAK,MAAM5B,KAAa+I,EAAU1K,WAC9B4M,EAAqBzL,SAAQ,EAAE0L,EAAKtJ,GAAWuJ,IAAQC,EAAeD,EAAKnL,EAAUZ,aAAc8L,EAAKtJ,KACxG5B,EAAUyE,SAASsE,GAGvB,OADAkC,EAAqBzL,SAAQ,EAAE0L,EAAKtJ,GAAWuJ,IAAQC,EAAeD,GAAM,EAAGD,EAAKtJ,GAAU,KACvFtG,KACP,SAAS8P,EAAeD,EAAKE,EAAcC,EAAa1J,EAAU2J,GAAY,IACrEA,GAAaD,GAAeD,IAEjCzJ,EAAS6C,SAASsE,GAClBkC,EAAqBrG,OAAOuG,EAAK,GACpC,CACJ,EACDK,uBACI,MAAMzC,EAAYzN,KAAK2G,QACvB,IAAK,MAAMwJ,KAAW1C,EAAUxK,OAC5BkN,EAAQhH,SAASsE,GAErB,OAAOzN,IACV,EACDoQ,mBACI,MAAM3C,EAAYzN,KAAK2G,QACvB,OAAmC,GAA/B8G,EAAUtK,WAAWoC,SA8MVwE,EA5MA0D,EAAUtD,SA8M9B,IAAIkG,qBADc/J,IAAY,CAAC5C,EAAS4M,IAAa5M,EAAQQ,SAAQqM,GAASjK,EAAS,CAACiK,EAAOD,MACtEE,EA9Me,EAAED,EAAOD,MACxC,GAAIC,EAAME,eAAgB,CACtB,IAAK,MAAMC,KAAajD,EAAUtK,WAC9BuN,EAAUvH,SAASsE,GAEvB6C,EAASK,YACZ,MAwM2CC,QAAQ7G,IA/M7C/J,KA6MpB,IAAwB+J,CAnMlB,EACD8G,eACI,MAAMpD,EAAYzN,KAAK2G,QACvB,GAAqC,GAAjC8G,EAAUpK,aAAakC,QAA+C,GAAhCkI,EAAUnK,YAAYiC,OAC5D,OAAOvF,KACX,GAkMT,SAAuB+J,GAC1B,IACI,OAAO+G,QAAQ/G,EAAQwE,YAAYwC,aAAa,CAAEC,KAAM,SAC3D,CACD,MACI,OAAO,CACV,CACL,CAzMoBC,CAAcxD,EAAUtD,UAAW,CACnCsD,EAAUkB,WAAalB,EAAUtD,SAAS4G,aAAa,CAAEC,KAAM,SAC/D,MAAME,EAAa3D,SAASnF,cAAc,SAC1C8I,EAAWlL,YAAc,GACzByH,EAAU+B,iBAAmB0B,EAC7BzD,EAAUkB,WAAWC,YAAYsC,GACjC,MAAMlE,EAAkB,GACxB,IAAK,MAAMb,KAASsB,EAAUpK,aAC1B8I,EAAMhD,SAASsE,GACfT,EAAgBjJ,KAAKoI,GAEzB,IAAK,MAAMA,KAASsB,EAAUnK,YAC1B6I,EAAMhD,SAASsE,GACfyD,EAAWlL,aAAe,KAAOmG,EAAMzC,WAE3C,MAAMyH,EAAqBnE,EAAgBL,KAAK,QAGhD,OAFIwE,EAAmB5L,OAAS,IAC5B2L,EAAWlL,aAAe,gBAAgBmL,QACvCnR,IACV,CACD,MAAM,IAAI2C,MAAM,kDAAkD8K,EAAUxB,iBAC/E,EACDmF,mBACI,MAAM3D,EAAYzN,KAAK2G,QACvB,IAAK,MAAM0K,KAAa5D,EAAUvK,WAC9BmO,EAAUlI,SAASsE,GAEvB,OAAOzN,IACV,EACDsR,kBACI,MAAM7D,EAAYzN,KAAK2G,QACvB,IAAK,MAAML,KAAYmH,EAAUrK,UAC7BkD,EAAS6C,SAASsE,GAEtB,OAAOzN,IACV,GAELA,KAAKgH,OAAS,CACVL,QAAS3G,KACTyK,aAKI,OAJAzK,KACKuR,mBACA9C,iBACA+C,kBACExR,IACV,EACDuR,mBACI,MAAM9D,EAAYzN,KAAK2G,QACvB,IAAK,MAAMxC,KAAasJ,EAAUzK,WAC9BmB,EAAU6C,OAAO8B,aAAa3E,EAAUhE,OAE5C,OAAOH,IACV,EACDyO,iBACI,MAAMhB,EAAYzN,KAAK2G,QACvB,IAAK,MAAMjC,KAAa+I,EAAU1K,WAC9B2B,EAAUsC,OAAOyD,aAErB,OAAOzK,IACV,EACDyR,eACI,MAAMhE,EAAYzN,KAAK2G,QACvB,IAAK,MAAMwF,KAASsB,EAAUpK,cAG9B,OAAOrD,IACV,EACDwR,kBACI,MAAM/D,EAAYzN,KAAK2G,QACvB,IAAK,MAAML,KAAYmH,EAAUrK,UAC7BkD,EAASU,OAAOC,iBAEpB,OAAOjH,IACV,EACDoJ,aAAayF,EAAcC,GACvB,MAAMrB,EAAYzN,KAAK2G,QACjBoI,EAActB,EAAU1K,WAAW0G,WAAU/E,GAAaxD,OAAO8N,GAAGtK,EAAWmK,KAOrF,OANoB,GAAhBE,GACAtM,EAAW,iEACfgL,EAAU1K,WAAWuG,OAAOyF,EAAa,EAAGD,GACtCD,aAAwBhN,QAC1BgN,EAAa9L,WAAWmB,SAAQQ,GAAaA,EAAU6D,OAAOC,eAClEqG,EAAalK,SAASwF,SAASf,aAAa0F,EAAa3E,SAAU0E,EAAa1E,UACzEnK,IACV,GAELA,KAAKuI,OAAS,CACV5B,QAAS3G,KACT0N,gBAAgBJ,GACZ,MAAMG,EAAYzN,KAAK2G,QACjB+K,EAAcjE,EAAUzK,WAAW2O,QAAQrE,GAIjD,OAHoB,GAAhBoE,GACAjE,EAAUzK,WAAWsG,OAAOoI,EAAa,GAC7CjE,EAAUtD,SAASuD,gBAAgBJ,EAAYrB,MACxCjM,IACV,EACDwI,aACI,MAAMiF,EAAYzN,KAAK2G,QACjBhC,EAAW8I,EAAU9I,SACrBoK,EAAcpK,EAAS5B,WAAW0G,WAAU/E,GAAaxD,OAAO8N,GAAGtK,EAAW+I,KAMpF,OALoB,GAAhBsB,GACAtM,EAAW,oEACfkC,EAAS5B,WAAWuG,OAAOyF,EAAa,GACxCtB,EAAU1K,WAAWmB,SAAQQ,GAAaA,EAAU6D,OAAOC,eAC3DiF,EAAUtD,SAASkF,SACZrP,IACV,GAELA,KAAKiM,KAAOA,EACZ/K,OAAO0Q,OAAO5R,KAAMqF,EACvB,CACD8D,SAAS1F,GACL,MAAMwL,EAAa,IAAMjP,KAAKiJ,QACzBC,WAAW1D,EAAUxF,KAAKmK,WAC1BiH,mBACAP,eACAnB,mBACAlB,iBACA0B,uBACAE,mBACL,GAAa,OAAT3M,EACAwL,SAEC,GAAIxL,aAAgB8F,YACrB0F,IACAxL,EAAKmL,YAAY5O,KAAKmK,eAErB,GAAI1G,aAAgBlC,UACrBvB,KAAK2E,SAAWlB,EAAMwL,KACrBxL,EAAKkL,YAAclL,EAAK0G,UAAUyE,YAAY5O,KAAKmK,cAEnD,MAAI1G,aAAgB9B,YAMrB,MAAM,IAAIgB,MAAM,sCAAsC3C,KAAKiM,0EAL3DjM,KAAK2E,SAAWlB,EAAMwL,IACtBxL,EAAK0G,SAASyE,YAAY5O,KAAKmK,UAC/B1G,EAAKuD,OAAO0H,YAAY1O,KAI3B,CACD,OAAOA,KAAK0J,UACf,CACD5C,iBAAiBD,GACb,MAAMwK,EAAYrR,KAAKkD,YAAY2O,MAAKR,GAAaxK,KAAQwK,EAAUhH,KACvE,OAAOgH,IAAYhH,GAAgBxD,IAAS7G,KAAK2E,UAAUmC,iBAAiBD,EAC/E,CACDE,iBAAiBF,EAAM1G,GACnB,MAAMkR,EAAYrR,KAAKkD,YAAY2O,MAAKR,GAAaxK,KAAQwK,EAAUhH,KACvE,GAAIgH,EAGA,OAFAA,EAAUhH,GAAgBxD,GAAQ1G,EAClCH,KAAKgH,OAAOyD,aACLtK,EAEX,MAAM+N,EAASlO,KAAK2E,UAAUoC,iBAAiBF,EAAM1G,GACrD,OAAO+N,CACV,CACDxE,SAASC,EAAS,GACd,MAOMmI,EAAqBvM,GAAWA,EAAS,EAAI,KAAO,KAAK6H,OAAOzD,EAAS,GAAK,GAE9EoI,EATY,CACd,OAAQ,OAAQ,KAChB,MAAO,QAAS,KAChB,MAAO,QAAS,OAChB,OAAQ,QAAS,SACjB,QAAS,OAIyBC,SAAShS,KAAKiM,MAAQ,IAAM,GAC5DgG,EAAcjS,KAAK+C,WAAWyB,KAAIlD,GAAKA,EAAEoI,SAASC,EAAS,KAAIgD,KAAK,KAAO,KAAKS,OAAOzD,EAAS,IAChGuI,EAAYlS,KAAKgD,WAAWwB,KAAIlD,GAAK,GAAGA,EAAE2K,WAAWhG,EAAU3E,EAAEnB,YAAWwM,KAAK,KACjFwF,EAAgBnS,KAAKoD,UAAUoB,KAAIlD,GAAKA,EAAEoI,SAASC,EAAS,KAAIgD,KAAK,KAAO,KAAKS,OAAOzD,IACxFyI,EAAiB,IAAIpS,KAAKiM,OAAOiG,EAAU3M,OAAS,IAAM,KAAK2M,IAAYH,KAC3EM,EAAiB,GAAGP,EAAkBG,EAAY1M,QAAU4M,EAAc5M,QAC5E0M,GACCE,EAAc5M,OAASuM,EAAkBG,EAAY1M,QAAU4M,EAAgB,KAR3D5M,EASL0M,EAAY1M,QAAU4M,EAAc5M,OATpBA,EAAS,EAAI,KAAO,KAAK6H,OAAOzD,GAAU,QASV3J,KAAKiM,QATjD,IAAC1G,EAWzB,MADmB,GAAG6M,IAAkBL,EAAuC,GAAjBM,GAEjE,EAWE,SAASC,EAAOC,GACnB,OAAOA,GAAa,IACxB,CAXAhR,UAAUiR,OAAS,CAAC7L,EAASsF,EAAMnJ,IACxB,IAAIvB,UAAU0K,EAAM,IAAKnJ,EAAOqH,SAAUxD,IAuB9C,MAAMuF,EAAgBuG,GAAQA,EAAI1R,QAAQ,0BAA0B,CAAC2R,EAAGC,KAASA,EAAM,IAAM,IAAMD,EAAEE,gBAiC5G,SAASpL,EAAKC,EAAOC,GACjB,MAAMmL,EA6GN,SAAwBpL,EAAOC,GAC3B,OAAIvG,EAAYsG,IAAUtG,EAAYuG,GAtC1C,SAA2BD,EAAOC,GAC9B,MAAMoL,EAAoBrL,EAAM1E,WAC1BgQ,EAAqBrL,EAAM3E,WAC3BiQ,EAAsBvL,EAAMzE,WAC5BiQ,EAAuBvL,EAAM1E,WAC7BuE,EAAQ,CACV2L,KAAMhS,OAAOiS,eAAe1L,GAAOpB,YACnCoB,MAAOA,EACPC,MAAOA,EACP5F,CAACA,GAAU,GACXE,CAACA,GAAU,GACXC,CAACA,GAAU,GACXC,CAACA,GAAY,GACbwG,WAAY,IAEhB,IAAK,IAAIlF,EAAI,EAAGA,EAAI4P,KAAKC,IAAIP,EAAkBvN,OAAQwN,EAAmBxN,QAAS/B,IAAK,CACpF,MAAM8P,EAAiBR,EAAkBtP,GACnC+P,EAAkBR,EAAmBvP,QACpBgQ,IAAnBF,EACA/L,EAAMzF,GAASiC,KAAK,CAAC,aAAcP,EAAI,UACdgQ,IAApBD,EACLhM,EAAMtF,GAAS8B,KAAK,CAAC,aAAcP,EAAI,KAEvC+D,EAAMmB,WAAW3E,KAAKyD,EAAK8L,EAAgBC,GAClD,CACD,IAAK,IAAI/P,EAAI,EAAGA,EAAI4P,KAAKC,IAAIL,EAAoBzN,OAAQ0N,EAAqB1N,QAAS/B,IAAK,CACxF,MAAMiQ,EAAqBT,EAAoBxP,GACzCkQ,EAAsBT,EAAqBzP,QACtBgQ,IAAvBC,EACAlM,EAAMzF,GAASiC,KAAK,CAAC,aAAcP,EAAI,UACVgQ,IAAxBE,EACLnM,EAAMtF,GAAS8B,KAAK,CAAC,aAAcP,EAAI,KAEvC+D,EAAMmB,WAAW3E,KAAKyD,EAAKiM,EAAoBC,GACtD,CACD,OAAOnM,CACV,CAGcoM,CAAkBlM,EAAOC,GAChChG,EAAa+F,IAAU/F,EAAagG,GAjE5C,SAA4BD,EAAOC,GAC/B,MAAMkM,EAAoBnM,EAAM1E,WAC1B8Q,EAAqBnM,EAAM3E,WAC3BwE,EAAQ,CACV2L,KAAMhS,OAAOiS,eAAe1L,GAAOpB,YACnCoB,MAAOA,EACPC,MAAOA,EACP5F,CAACA,GAAU,GACXE,CAACA,GAAU,GACXC,CAACA,GAAU,GACXC,CAACA,GAAY,GACbwG,WAAY,IAEhB,IAAK,IAAIlF,EAAI,EAAGA,EAAI4P,KAAKC,IAAIO,EAAkBrO,OAAQsO,EAAmBtO,QAAS/B,IAAK,CACpF,MAAMsQ,EAAiBF,EAAkBpQ,GACnCuQ,EAAkBF,EAAmBrQ,QACpBgQ,IAAnBM,EACAvM,EAAMzF,GAASiC,KAAK,CAAC,aAAcgQ,SACVP,IAApBO,EACLxM,EAAMtF,GAAS8B,KAAK,CAAC,aAAc+P,IAEnCvM,EAAMmB,WAAW3E,KAAKyD,EAAKsM,EAAgBC,GAClD,CACD,OAAOxM,CACV,CA0CcyM,CAAmBvM,EAAOC,GACjClG,EAAciG,IAAUjG,EAAckG,GA/E9C,SAA6BuM,EAAcC,GACvC,MAQM1M,EAAO2M,EARK,CACd/O,OAAQ6O,EACR5O,MAAO,CAAC,CAAC,QAAS,CAAC,WAEL,CACdD,OAAQ8O,EACR7O,MAAO,CAAC,CAAC,QAAS,CAAC,YAGvB,OAAOmC,CACV,CAqEc4M,CAAoB3M,EAAOC,GAClC9F,EAAS6F,IAAU7F,EAAS8F,GA7FpC,SAAwBD,EAAOC,GAC3B,MAAM2M,EAAY,CACdjP,OAAQqC,EACRpC,MAAO,CAAC,CAAC,UAEPiP,EAAY,CACdlP,OAAQsC,EACRrC,MAAO,CAAC,CAAC,UAEPmC,EAAO2M,EAAaE,EAAWC,GACrC,OAAO9M,CACV,CAmFc+M,CAAe9M,EAAOC,GAGrC,SAA+BD,EAAOC,GAClC,MAAMH,EAAQ,CACV2L,KAAMhS,OAAOiS,eAAe1L,GAAOpB,YACnCoB,MAAOA,EACPC,MAAOA,EACP5F,CAACA,GAAU,GACXE,CAACA,GAAU,GACXC,CAACA,GAAU,GACXC,CAACA,GAAY,GACbwG,WAAY,KAET8L,EAASC,GAAW,CAACjP,EAAUiC,GAAQjC,EAAUkC,IACpD8M,GACAjN,EAAMzF,GAASiC,KAAK,CAAC,SACrB0Q,GACAlN,EAAMtF,GAAS8B,KAAK,CAAC,SACzB,OAAIyQ,GAAWC,IAEMhN,EAAM9C,SAAS5B,WAAW0G,WAAUnI,GAAKJ,OAAO8N,GAAGvH,EAAOnG,KAC/EiG,EAAMvF,GAAS+B,KAAK,CAAC,aAAc2D,KAFxBH,CAId,CAvBUmN,CAAsBjN,EAAOC,EACvC,CAvHsBiN,CAAelN,EAAOC,GAC7C,OAAOmL,EACP,SAASsB,EAAaE,EAAWC,GAC7B,MAAM9M,EAAO,CACT0L,KAAMhS,OAAOiS,eAAekB,EAAUjP,QAAQiB,YAC9CoB,MAAO4M,EAAUjP,OACjBsC,MAAO4M,EAAUlP,OACjBtD,CAACA,GAAU,GACXE,CAACA,GAAU,GACXC,CAACA,GAAU,GACXC,CAACA,GAAY,GACbwG,WAAY,IAEVkM,EAAeP,EAAUhP,MAAM8F,QAAOtE,GAAQrB,EAAUL,EAAiBmP,EAAUlP,OAAQyB,MACjGW,EAAKvF,GAAW2S,EAChB,MAAMC,EAAeP,EAAUjP,MAAM8F,QAAOtE,GAAQrB,EAAUL,EAAiBkP,EAAUjP,OAAQyB,MACjGW,EAAK1F,GAAW+S,EAChB,MAAMC,EAAeT,EAAUhP,MAAM8F,QAAOtE,GAAQ1B,EAAiBmP,EAAUlP,OAAQyB,KAAU1B,EAAiBkP,EAAUjP,OAAQyB,KACpIW,EAAKxF,GAAW8S,EAChB,MAAMC,EAAiBV,EAAUhP,MAAM8F,QAAOtE,GAAQ1B,EAAiBmP,EAAUlP,OAAQyB,KAAU1B,EAAiBkP,EAAUjP,OAAQyB,KAEtI,OADAW,EAAKtF,GAAa6S,EACXvN,CACV,CAwHL,CACO,MAAMwN,EAAoB,CAC7B,IACA,UACA,UACA,QACA,QACA,IACA,OACA,MACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,SACA,aACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,MACA,WACA,SACA,IACA,OACA,IACA,UACA,QACA,OACA,SACA,KACA,IACA,MACA,QACA,MACA,OACA,OACA,MACA,aACA,OACA,SACA,OACA,OACA,UACA,KACA,KACA,KACA,MACA,OACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,MC31CJ,IAAIC,EAAqBjV,MAAQA,KAAKiV,mBAAsB,SAAU5U,EAAG4L,EAAMiJ,GAE3E,MADoB,iBAATjJ,IAAmBA,EAAOA,EAAKkJ,YAAc,IAAIC,OAAOnJ,EAAKkJ,YAAa,KAAO,IACrFjU,OAAOmU,eAAehV,EAAG,OAAQ,CAAEiV,cAAc,EAAMnV,MAAO+U,EAAS,GAAGE,OAAOF,EAAQ,IAAKjJ,GAAQA,GACjH,EAGA,MAAMsJ,EAAiBxT,OAAO,kBA6BjByT,EAAU,IAAI9O,MAAM,GAAI,CACjC/F,IAAG,CAACiG,EAAQC,IACW,iBAARA,EACAD,EAAOC,GACN,aAARA,EACO4O,EACJ,IAAI3S,IAAU,IAAIvB,UAAUsF,EAAMhE,EAASC;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAG1D,SAAS2S,EAAUC,GACfV,EACK9Q,SAAQ6F,IAAY2L,GAAeC,YAAY5L,GAAWyL,EAAQzL,IAC3E;;;;GAKA,MAAMrE,EAAO,IAAIgB,OAwFjB,SAAekP,KAASxP,GACpB,IAAIyP,EAAQD,EACRxR,MAAMC,QAAQuR,GACdC,EAAQpQ,EAAmBmQ,EAAKE,QAAO,CAACC,EAAKC,EAAMxS,IAAM,GAAKuS,GAAOC,GAAQ,KAAO/P,EAAUG,EAAO5C,KAAO,KAAK,KAC5F,iBAATqS,IACZA,EAAQpQ,EAAmBoQ,IAC/B,OAVJ,SAAwB1V,GACpB,MAAMuF,EAAO1E,EAAYb,GAAS+F,OAAO/F,GAAS8F,EAAU9F,GAC5D,OAAO,IAAI0B,OAAO6D,EACtB,CAOWyJ,CAAe0G,EAC1B;;;;;KA/F8B,CAAE,GAQ1BI,EAAO,IAAIvP,OAwEjB,SAAeqH,GAEX,OADiBtM,YAAYyU,qBAAqBnI,EAEtD,GA3E8B,CAC1BpN,IAAG,CAACiG,EAAQC,IACW,iBAARA,EACAD,EAAOC,GACV1G,GAgEhB,SAAyB8L,EAAM9L,GAC3B,MAAM+N,EAASlN,EAAYb,GAAS+F,OAAO/F,GAAS8F,EAAU9F,GAC9D,OAAO,IAAIsB,YAAYwK,EAAMiC,EACjC,CAnE0BV,CAAgB3G,EAAM1G,KAUnCgW,EAAK,IAAIzP,MAAM,GAAI,CAC5B/F,IAAG,CAACiG,EAAQC,IACW,iBAARA,EACAD,EAAOC,GACVgD,GAAY,IAAItH,QAAQsE,EAAMgD,KAUjCuM,EAAM,IAAI1P,OA4EvB,YAAiB2P,GACb,MAAOhK,KAAaC,GAAY+J,EAChC,GAAmB,GAAfA,EAAK9Q,SAAgBvE,EAAYqL,GAAW,CAE5C,OADa,IAAIhK,UAAU,CAAC,WAAYiK,GAAWD,EAEtD,CACD,MAAO,IAAIE,IACM,IAAIlK,UAAU,CAACgK,KAAaC,MAAcC,EAG/D;;;;;KAtFmC,CAC/B5L,IAAG,CAACiG,EAAQC,IACW,iBAARA,EACAD,EAAOC,GACV1G,GACkB,IAAIiC,cAAcyE,EAAM1G,KAKpDmW,EAAUpV,OAAO0Q,QAAM,CAAG3F,EAAMsK,EAAShN,eAC3C,IAAI5J,EAAI6W,EACR,GAAIC,eAAe9V,IAAIsL,GACnB,MAAM,IAAItJ,MAAM,6BAA6BsJ,0BACjDqK,EAAQf,GAAgBxR,KAAKkI,GAC7B,MAAMyK,EAAa3U,OAAO,cACpB0B,GAAQ+S,EAAK,cAAcD,EACzBlQ,YAAY4F,EAAMnJ,GACd6T,QACAlT,EAAKiT,GAAcnV,UAAUiR,OAAOxS,KAAMiM,EAAMpJ,EAASC,GAC5D,GAELnD,EAAK+W,EACLzB,EAAkBuB,EAAI,QACtBA,EAAG7W,GAAM,KACT6W,GAEJ,OADAC,eAAeG,OAAO3K,EAAMxI,GACrB,IAAIX,KAAW,IAAIW,EAAKwI,EAAMnJ,GAAQW,EAAKiT,GACrD,GAAG,CAAEnB,CAACA,GAAiB,KAKX/C,EAAS,IAAI9L,MAAM4P,EAAS,CACrC3V,IAAG,CAACiG,EAAQC,IACW,iBAARA,EACAD,EAAOC,GACXD,EAAOsF,EAAarF;;;;;;;;;;;;AAoC5B,SAAS+D,KAAWF,GACvB,OAAO,IAAIpI,eAAeoI,EAC9B,CAiBO,SAASmM,EAAI3W,GAChB,MAAM4W,EAAS,IAAItU,YAAYtC,GAAS,CAAE,GAwB1C,OAvBiB,IAAIwG,MAAMoQ,EAAQ,CAC/BnW,IAAG,CAACiG,EAAQC,IACJA,GAAQjE,EACDgE,EACQ,iBAARC,EACAD,EAAOC,GACD,SAARA,EACED,EAAO0D,MACD,WAARzD,EACED,EAAO2D,QACD,YAAR1D,EACED,EAAOuC,SAEPvC,EAAOyD,GAAgBxD,GAGtCpG,IAAG,CAACmG,EAAQC,EAAM1G,IACK,iBAAR0G,EACAD,EAAOC,GAAQ1G,GAC1ByG,EAAOjC,UAAUoC,iBAAiBF,EAAM1G,IACjC,IAInB,CACY,MAAC2C,EAAQ,CAAEmT,OAAMvQ,OAAMqR,SAtDnC,YAAqBC,GACjB,MAAMjU,WAAEA,GAAeF,EAASmU,GAChC,OAAO,IAAIrV,WAAWoB,EAC1B"}
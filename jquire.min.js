<<<<<<< HEAD
if(typeof window==="undefined"&&window.document==="undefined")throw new Error("Jquire cannot run outside of a browser environment.");let jquery=(...e)=>{throw new ReferenceError("Jquery cannot be found.")};if(typeof window.$!=="undefined")jquery=window.$;const newElements=new Array;const elementStack=new Array;let currentElement=null;let currentNode=null;const jquire={add(u){for(let l of Object.keys(u)){const e=Object.create(null);e.name=l;e.type="partial";e.parent=null;e.create=function(e=null){const t=document.createDocumentFragment();const n={type:"custom",name:l,body:t,data:e.data,parent:e.parent};const r=u[l];if(typeof r!="function")throw new TypeError(`InvalidComponentConstructor: Expected a function instead got ${typeof r}`);elementStack.push(n);currentElement=currentNode=n;r();const o=e.body.querySelectorAll("[slot]");const a={};for(let e of o){const s=e.getAttribute("slot");const i=n.body.querySelector(`slot[name="${s}"]`);if(i==null)throw new ReferenceError(`UnknownSlot: there is no slot declared with the name ${s}`);a[s]=[...a[s]||[i],e.cloneNode(true)];e.remove()}for(let e in a){const[i,...o]=a[e];const t=document.createDocumentFragment();t.append(...o);i.parentElement.replaceChild(t,i)}const c=n.body.querySelector(`slot:not([name])`);if(c)e&&c.parentElement.replaceChild(e.body,c);else e&&n.body.appendChild(e.body);return elementStack.pop()};newElements.push(e)}},text(){const o=elementStack.slice(-1)?.[0];const e=(n=null,...e)=>{const r=[n[0]];e.forEach((e,t)=>r.push(e,n[t+1]));const t=document.createTextNode(r.join(""));currentNode=t;o&&o.body.append(t);return t};return new Proxy(e,{get(e,t,n){const r=document.createTextNode(t);o&&o.body.append(r);currentNode=r;return r}})},render(){const e=document.createDocumentFragment();const r={type:"custom",name:"render",body:e,data:{},parent:null};const o=currentElement;currentElement=currentNode=r;elementStack.push(r);return new Proxy(r,{get(e,t,n){if(t in e)return e[t];currentElement=currentNode=o??null;if(!("tag"in e.data))throw new Error(`NoRenderTarget: The required 'tag' attribute is missing.`);if(!(e.data.tag instanceof HTMLElement))throw new TypeError(`InvalidRenderTarget: Expected an HTML element as the value of the 'tag' attribute, instead got '${typeof e.data.tag}'.`);elementStack.pop();e.data.tag.append(e.body);Object.freeze(r);return e.body}})}};const isElmSpecialProp=(e,t)=>{if(e=="$data")return t.data;if(e=="$body")return t.body;if(e=="$parent")return t.parent;if(e=="$name")return t.name;else throw new ReferenceError(`UnknownSpecialProperty: No special property by the name '${e}' exists on the ${t.name}`)};const _selfProxyTrap=r=>({get(e,t,n){r??=currentElement;if(t.startsWith("$"))return isElmSpecialProp(t,r);return r.data[t]},set(e,t,n){r??=currentElement;r.data[t]=n;return true}});const _self=new Proxy(function(e=this){return new Proxy(e,_selfProxyTrap(e))},_selfProxyTrap());const _parentProxyTrap=r=>({get(e,t,n){r??=currentElement;return r.parent?.data?.[t]},set(e,t,n){r??=currentElement;if(r.parent?.data[t]!==undefined)r.parent.data[t]=n;return true}});const _parent=new Proxy(function(e=this){return new Proxy(e.parent?.data??{},_parentProxyTrap(e))},_parentProxyTrap());const _closestProxyTrap=o=>({get(e,t,n){o??=currentElement;const r=(e,t)=>e.data[t]!==undefined?e.data[t]:e.parent!==null?r(e.parent,t):undefined;return r(o,t)},set(e,t,n){o??=currentElement;const r=(e,t)=>e.data[t]!==undefined?e.data:e.parent!==null?r(e.parent,t):undefined;if(r(o,t)[t]!==undefined)r(o,t)[t]=n;return true}});const _closest=new Proxy(function(e=this){return new Proxy(e,_closestProxyTrap(e))},_closestProxyTrap());const _observe=function(e,o=[]){for(const n in e){if(e[n]!==null&&typeof e[n]==="object")e[n]=_observe(e[n],[...o,n])}const a=new Array;const t=new Proxy(e,{set(t,n,r){if(typeof r==="object")r=_observe(r,[...o,n]);a.forEach(e=>e([...o,n],[n,t[n]=r]));return true}});return[t,a]};const query=(...e)=>jquery(...e);const $=new Proxy(query,{get:handleElmProxyPropAccess});const _=new Proxy({},{set:handleAttrProxyPropAssign,get:handleAttrProxyPropAccess});_.prototype[Symbol.toPrimitive]=function(e){return""};function createElement(e){if(/^[a-z]/.test(e))return createJQHTMLElement(e);else if(/^[A-Z]/.test(e))return createJQCustomElement(e);else throw new Error(`InvalidElement: '${e}' - is not a valid HTML Element or a custom element.`)}function createJQHTMLElement(o){const a=elementStack.slice(-1)?.[0];const c={type:"html",name:o,body:document.createElement(o),data:{},parent:a??null};if(c.body instanceof HTMLUnknownElement)throw new Error(`InvalidHTMLElement: '${o}' is not a valid HTML element.`);elementStack.push(c);currentElement=currentNode=c;return new Proxy(c,{get(e,t,n){if(t in e)return e[t];const r=c.body.childNodes?.length==0&&Object.keys(c.data).length==0&&c.body.attributes.length==0;if(r)c.body.append(t);a&&a.body.append(c.body);currentElement=currentNode=a??null;if(a&&a.type=="custom"&&o=="slot")a.slots.push(c);c.data=createDataAttrProxy(c);Object.freeze(c);return elementStack.pop()}})}function createJQCustomElement(t){const o=newElements.find(e=>e.name==t);if(!o)throw new Error(`NotDefined: Custom element - '${t}' is not defined.`);const a=elementStack.slice(-1)?.[0];let c={type:"custom",name:t,body:new DocumentFragment,data:{},slots:[],parent:a??null};elementStack.push(c);currentElement=currentNode=c;return new Proxy(c,{get(e,t,n){if(t in e)return e[t];c=o.create(c);const r=c.body.childNodes?.length==0&&Object.keys(c.data).length==0;if(r)c.body.append(t);a&&a.body.append(c.body);currentElement=currentNode=a??null;c.data=createDataAttrProxy(c);Object.freeze(c);return elementStack.pop()}})}function createAttribute(e,t,n=null){const r=document.createAttribute(e);if(t.type=="html"){if(e.startsWith("on"))return createEventHandler(e,t,n);return createHTMLAttribute({attrName:e,attrObj:r},t,n??"")}if(["custom","partial"].includes(t.type)){return createDataAttribute(e,t,n)}}function createHTMLAttribute({attrName:e,attrObj:t},n,r=""){if(/[^a-z]/g.test(e)){if(/[A-Z\-\_]/g.test(e))return createDataAttribute(e,n,r);throw new Error(`InvalidAttribute: The attribute '${e}' is not a valid html attribute.`)}n.body.setAttributeNode(t);n.body.setAttribute(e,r)}function createDataAttribute(e,t,n=null){const r=e.replace(/[\-](.)/g,(e,t)=>t.toUpperCase());if(t.type=="html"){const o=typeof["string","boolean","number","bigint"].includes(n);const a=[undefined,null].includes(n);if(a||o)t.body.dataset[r]=n.toString();t.data[r]=typeof n=="function"?(...e)=>n(...e,t):n}else if(["custom","partial"].includes(t.type)){t.data[r]=typeof n=="function"?(...e)=>n(...e,t):n}return t.data}function createEventHandler(e,t,n){const r=e.slice(2);if(typeof n!="function")throw new TypeError(`Expeted a function as event handler callback but got '${typeof n}' instead.`);let o=(...e)=>n(...e,t);t.body.addEventListener(r,o)}function arrowFnToRegularFn(callback){let _callback=callback;const stringifiedCallback=callback.toString();const isArrowFn=!stringifiedCallback.trim().startsWith("function");if(isArrowFn){const isParamsInParantheses=stringifiedCallback.trim().startsWith("(");const[fnParams,...fnBody]=stringifiedCallback.split("=>");const hasBlockFnBody=fnBody[0].trim().startsWith("{");_callback=eval("(function"+(!isParamsInParantheses?"(":"")+fnParams+(!isParamsInParantheses?")":"")+(!hasBlockFnBody?"{ return":"")+fnBody.join("=>")+(!hasBlockFnBody?"}":"")+")")}return _callback}function handleElmProxyPropAccess(e,t,n){if(!(t in jquire))return createElement(t);if(t=="new")return jquire.new();if(t=="text")return jquire.text();if(t=="render")return jquire.render();if(typeof jquire[t]=="function")return jquire[t]}function handleAttrProxyPropAccess(e,t,n){if(t=="prototype")return Object.getPrototypeOf(e);if(!currentElement)throw new Error(`OutOfScopeAttribute: Attribute '${t}' cannot be accessed outside an element`);return currentElement.data[t]}function handleAttrProxyPropAssign(e,t,n){if(!currentElement)throw new Error(`OutOfScopeAttribute: Attribute '${t}' cannot be accessed outside an element`);return createAttribute(t,currentElement,n)||true}function createDataAttrProxy(c){return new Proxy(c.data,{set(e,t,n){if(!t in e)throw new ReferenceError(`Data attribute '${t}' not defined on the element '${c.name}'`);e[t]=n;{const r=toCamelCase(t);if(c.type=="html"){const o=typeof["string","boolean","number","bigint"].includes(n);const a=[undefined,null].includes(n);if(a||o)c.body.dataset[r]=n.toString();e[r]=typeof n=="function"?(...e)=>n(...e,c):n}else if(["custom","partial"].includes(c.type)){e[r]=typeof n=="function"?(...e)=>n(...e,c):n}return c.data}}})}function toKebabCase(e){let t=e;if(e.includes("_")&&!e.includes("-"))t=e.replace(/_/g,"-");else if(!e.includes("-")&&!/[A-Z]/g.test(e))t=e.replace(/^./,e=>e.toLowerCase()).replace(/[A-Z]/g,e=>"-"+e.toLowerCase());return t.toLowerCase()}function toCamelCase(e){let t=e;if(/[A-Z]/g.test(e))t=e.toLowerCase();else if(e.includes("-"))t=e.split("-").map(e=>e.toLowerCase().replace(/^./,e=>e.toUpperCase())).join("").replace(/^./,e=>e.toLowerCase());else if(e.includes("_"))t=e.split("_").map(e=>e.toLowerCase().replace(/^./,e=>e.toUpperCase())).join("").replace(/^./,e=>e.toLowerCase());return t}export{$,_,_self,_parent,_closest,_observe};
=======
export function pathSetter(e) { return function (t) { return e.replace(/\/\s*$/, "") + "/" + t.replace(/^(?:\s*\.)?\s*\//, "") } } const context = { jqAttributes: [], jqElement: null, jqEach: null, jqText: null, jqEvent: null }; class JqEach { type = "jq-each"; keyAlias = ""; valueAlias = ""; iterable = []; parentElement = null; iterator = function* (t) { let e = 0; for (const r of t) { yield [e++, r] } }; current = new Map; constructor([t = "", e = ""], r) { this.keyAlias = t; this.valueAlias = e; this.iterable = r } createEachFragment() { const t = this.parentElement; if (t == null) { throw new Error(`JqError: Cannot attach JqEach to an HTMLElement as it has no parent element.`) } const e = document.createDocumentFragment(); const r = document.createElement(t.nameF); const { attributes: n, events: o, children: s } = t; const a = r.cloneNode(true); let c = true; for (const [i, l] of this.iterator(this.iterable)) { this.current.set(this.keyAlias, i); this.current.set(this.valueAlias, l); const u = c ? (r.remove(), r) : a.cloneNode(true); const h = t.initializeHTMLElement(u, n, o, s); e.append(h); c = false } return e } } class JqText { type = "jq-text"; text = ""; textNode = null; parentElement = null; constructor(t) { this.text = t } createTextNode() { const t = ["function", "object", "symbol"].includes(typeof this.text); this.textNode = document.createTextNode(t ? this.text?.(this) ?? String(this.text) : this.text); return this.textNode } attachTo(t) { t.appendChild(this.createTextNode()) } getEach(e) { return this.parentElement?.eachIters.find(t => t.current.has(e)) } getAttribute(e) { return this.parentElement?.attributes.find(t => t.name === e) } } class JqElement { type = "jq-element"; name = "unknown"; htmlElement = null; parentElement = null; children = []; attributes = []; eachIters = []; events = []; constructor(t, e, r, n, o) { this.name = t; this.attributes = e; this.children = r; this.eachIters = n; this.events = o } createHTMLElement() { let t = true; for (const e of this.eachIters) { const r = e.createEachFragment(); if (t) this.htmlElement = r; else this.htmlElement.append(r); t = false } if (t) { const n = document.createElement(this.name); this.htmlElement = this.initializeHTMLElement(n, this.attributes, this.events, this.children) } return this.htmlElement } initializeHTMLElement(e, t, r, n) { for (const o of t) { e.setAttribute(o.name, o.value) } for (const s of r) { e.addEventListener(s.name, s.callback) } for (const a of n) { let t = null; if (a.type == "jq-element") t = a.createHTMLElement(); else if (a.type == "jq-text") t = a.createTextNode(); else throw new Error(`JqError: Invalid JqChild '${String(a)}'`); e.append(t) } return e } getAttribute(e) { let t = this.attributes.find(t => t.name == e); return t !== undefined ? t : parentElement.getAttribute(e) } getEach(t) { let e = this.eachIters.find(t => t.current.has(prop)); return e !== undefined ? e : this.parentElement?.getEach(t) } attachTo(t) { t.appendChild(this.createHTMLElement()) } } class JqAttribute { type = "jq-attribute"; name = "unknown"; value = null; isDataAttribute = false; constructor(t, e) { this.name = t ?? this.name; this.value = e ?? this.value } } class JqEvent { type = "jq-event"; name = "unknown"; callback = () => { }; constructor(t, e) { this.name = t; this.callback = e } } const jqAttributeHandler = { set(t, e, r, n) { throw new Error(`JqError: Cannot set attr property '${e}'`) }, get(t, e, r) { if (typeof e == "symbol") return t[e]; const n = context.jqElement; if (n === null) throw new Error(`JqError: Cannot access 'att.${e}' outside a JqElement`); const o = n.getAttribute(e); if (o === undefined) throw new Error(`JqError: Attribute '${e}' not found in the current context`); return o } }; const jqNativesHandler = { set(t, e, r, n) { throw new Error(`JqError: Cannot set native property '${e}'`) }, get(t, r, e) { if (typeof r == "symbol") return t[r]; if (!/\p{L}[\d\p{L}]*/u.test(r)) throw new Error(`JqError: Invalid HTMLElement '${r}'`); return (...t) => { const e = createElement(r, ...t); context.jqElement = e; return e } } }; const jqNodesHandler = { set(t, e, r, n) { throw new Error(`JqError: Cannot set node property '${e}'`) }, get(t, e, r) { if (typeof e == "symbol") return t[e]; switch (e) { case "attr": return attr; case "text": return text; default: throw new Error(`JqError: No Property '${e}' on object 'nodes'`) } } }; const jqEachHandler = { set(t, e, r, n) { throw new Error(`JqError: Cannot set node property '${e}'`) }, get(t, r, e) { if (typeof r == "symbol") return t[r]; const n = context.jqElement; if (n === null) throw new Error(`JqError: Cannot access 'att.${r}' outside a JqElement`); const o = function (t) { if (!t) throw new Error(`JqError: Cannot access 'each.${r}' outside a JqElement`); const e = t.getEach(r); return e?.current.get(r) }; const s = { set(t, e, r, n) { throw new Error(`JqError: Cannot set node property '${e}'`) }, get(e, r, t) { return a(function (t) { return e(t)[r] }) }, construct(e, r) { return a(function (t) { return new e(t)(...r) }) } }; return a(o); function a(t) { return new Proxy(t, s) } } }; const jqEventHandler = { set(t, e, r, n) { throw new Error(`JqError: Cannot set node property '${e}'`) }, get(t, r, e) { if (typeof r == "symbol") return t[r]; const n = () => (t = () => { }) => { const e = new JqEvent(r, t); context.jqEvent = e; return e }; return n } }; function text(t, ...n) { let r = t; if (Array.isArray(t)) r = e(t.reduce((t, e, r) => "" + t + (e ?? "") + (n[r] ?? ""), "")); else if (typeof r == "string") r = e(r); return (t = r) => { const e = new JqText(t); context.jqText = e; return e }; function e(t) { return t.replace(/(&#x[0-9A-F]{2,6};)/gi, (t, e) => (new DOMParser).parseFromString(e, "text/html").documentElement.textContent).replace(/(&[a-z0-9]+;)/gi, (t, e) => (new DOMParser).parseFromString(e, "text/html").documentElement.textContent) } } function _each(t, ...e) { const r = /^(?:(?<vl>\p{L}[\d\p{L}]*)|\[\s*(?<kr>\p{L}[\d\p{L}]*)(?:\s*,\s*(?<vr>\p{L}[\d\p{L}]*))?\s*\])\s+in/u; const n = t.join("").trim().match(r); if (n == null || e.length != 1) { throw new Error(`JqError: Invalid each syntax`) } const { vl: o, vr: s, kr: a } = n.groups; const c = e[0]; if (typeof c?.[Symbol.iterator] != "function") throw new Error(`JqError: The object supplied to 'each' must be iterable`); return ([t = a, e = o ?? s] = [], r = c) => { const n = new JqEach([t, e], r); context.jqEach = n; return n } } function attr(t, ...e) { const r = /^(?<vl>\p{L}[\d\p{L}]*)\s*=/u; const n = t.join("").trim().match(r); if (n == null || e.length != 1) { throw new Error(`JqError: Invalid attribute syntax`) } const { vl: o } = n.groups; const s = e[0]; return (t = o, e = s) => { const r = new JqAttribute(t, e); context.jqAttributes.push(r); return r } } function createElement(a, ...t) { const c = [], i = [], l = [], u = []; for (const e of t) { const r = e(); if (r.type == "jq-attribute") { i.push(r) } else if (r.type == "jq-event") { u.push(r) } else if (r.type == "jq-each") { l.push(r) } else if (["jq-element", "jq-text"].includes(r.type)) { c.push(r) } } return (t = a, e = i, r = c, n = l, o = u) => { const s = new JqElement(t, e, r, n, o); r.forEach(t => t.parentElement = s); n.forEach(t => t.parentElement = s); context.jqElement = s; return s } } export function attachTo(t, e) { return e().attachTo(t) } const AttrNodes = Symbol("AttrNodes"); export function getProps(t) { const e = { get(t, e, r) { if (typeof e == "symbol") return t[e]; return t[AttrNodes].find(t => t.name == e)?.value }, set(t, e, r, n) { const o = t[AttrNodes].find(t => t.name == e); if (o) return o.value = r } }; return { attributes: new Proxy({ [AttrNodes]: t.filter(t => t.type == "jq-attribute"), *[Symbol.iterator]() { for (const t of this[AttrNodes]) yield t } }, e), children: t.filter(t => t.type == "jq-element" || t.type == "jq-text" || t.type == "jq-each") } } export const natives = new Proxy(Object.create(null), jqNativesHandler); export const nodes = new Proxy(Object.create(null), jqNodesHandler); export const each = new Proxy(_each, jqEachHandler); export const on = new Proxy(Object.create(null), jqEventHandler);
>>>>>>> fe732fc (initial commit)
